{
  "version": 3,
  "sources": ["../bundle-FY8UX0/checked-fetch.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/utils/stream.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/middleware/logger/index.js", "../../../node_modules/hono/dist/middleware/secure-headers/index.js", "../../../src/middleware/errorHandler.ts", "../../../../shared/types/errors.ts", "../../../node_modules/zod/v3/external.js", "../../../node_modules/zod/v3/helpers/util.js", "../../../node_modules/zod/v3/ZodError.js", "../../../node_modules/zod/v3/locales/en.js", "../../../node_modules/zod/v3/errors.js", "../../../node_modules/zod/v3/helpers/parseUtil.js", "../../../node_modules/zod/v3/helpers/errorUtil.js", "../../../node_modules/zod/v3/types.js", "../../../src/services/ValidationService.ts", "../../../src/middleware/requestValidator.ts", "../../../src/middleware/validation.ts", "../../../src/middleware/rateLimiter.ts", "../../../src/services/testEngine/index.ts", "../../../src/routes/tests/index.ts", "../../../src/routes/blog/index.ts", "../../../src/services/ContentFilterService.ts", "../../../src/routes/feedback/index.ts", "../../../src/routes/analytics/index.ts", "../../../src/routes/system/index.ts", "../../../src/models/BaseModel.ts", "../../../src/models/HomepageModuleModel.ts", "../../../src/models/HomepageConfigModel.ts", "../../../../shared/constants/index.ts", "../../../src/models/AnalyticsEventModel.ts", "../../../src/routes/homepage/index.ts", "../../../src/models/SearchIndexModel.ts", "../../../src/routes/search/index.ts", "../../../src/models/UserPreferencesModel.ts", "../../../src/routes/cookies/index.ts", "../../../src/utils/migrationRunner.ts", "../../../src/models/TestTypeModel.ts", "../../../src/models/TestSessionModel.ts", "../../../src/models/BlogArticleModel.ts", "../../../src/models/UserFeedbackModel.ts", "../../../src/models/PsychologySessionModel.ts", "../../../src/models/AstrologySessionModel.ts", "../../../src/models/TarotSessionModel.ts", "../../../src/models/CareerSessionModel.ts", "../../../src/models/LearningSessionModel.ts", "../../../src/models/RelationshipSessionModel.ts", "../../../src/models/NumerologySessionModel.ts", "../../../src/services/DatabaseService.ts", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-FY8UX0/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-FY8UX0/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/.wrangler/tmp/dev-LSRO3t",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    if (!patternCache[label]) {\n      if (match[2]) {\n        patternCache[label] = [label, match[1], new RegExp(\"^\" + match[2] + \"$\")];\n      } else {\n        patternCache[label] = [label, match[1], true];\n      }\n    }\n    return patternCache[label];\n  }\n  return null;\n};\nvar getPath = (request) => {\n  const match = request.url.match(/^https?:\\/\\/[^/]+(\\/[^?]*)/);\n  return match ? match[1] : \"\";\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result[result.length - 1] === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (...paths) => {\n  let p = \"\";\n  let endsWithSlash = false;\n  for (let path of paths) {\n    if (p[p.length - 1] === \"/\") {\n      p = p.slice(0, -1);\n      endsWithSlash = true;\n    }\n    if (path[0] !== \"/\") {\n      path = `/${path}`;\n    }\n    if (path === \"/\" && endsWithSlash) {\n      p = `${p}/`;\n    } else if (path !== \"/\") {\n      p = `${p}${path}`;\n    }\n    if (path === \"/\" && p === \"\") {\n      p = \"/\";\n    }\n  }\n  return p;\n};\nvar checkOptionalParameter = (path) => {\n  if (!path.match(/\\:.+\\?$/)) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return /%/.test(value) ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ?? (encoded = /[%+]/.test(url));\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ?? (results[name] = value);\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath\n};\n", "// src/utils/cookie.ts\nimport { decodeURIComponent_ } from \"./url.js\";\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\nvar getCryptoKey = async (secret) => {\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\nvar makeSignature = async (value, secret) => {\n  const key = await getCryptoKey(secret);\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\nvar verifySignature = async (base64Signature, value, secret) => {\n  try {\n    const signatureBinStr = atob(base64Signature);\n    const signature = new Uint8Array(signatureBinStr.length);\n    for (let i = 0; i < signatureBinStr.length; i++) {\n      signature[i] = signatureBinStr.charCodeAt(i);\n    }\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n  } catch (e) {\n    return false;\n  }\n};\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\nvar parse = (cookie, name) => {\n  const pairs = cookie.trim().split(\";\");\n  return pairs.reduce((parsedCookie, pairStr) => {\n    pairStr = pairStr.trim();\n    const valueStartPos = pairStr.indexOf(\"=\");\n    if (valueStartPos === -1) {\n      return parsedCookie;\n    }\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\n      return parsedCookie;\n    }\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\n      cookieValue = cookieValue.slice(1, -1);\n    }\n    if (validCookieValueRegEx.test(cookieValue)) {\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\n    }\n    return parsedCookie;\n  }, {});\n};\nvar parseSigned = async (cookie, secret, name) => {\n  const parsedCookie = {};\n  const secretKey = await getCryptoKey(secret);\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\n    const signatureStartPos = value.lastIndexOf(\".\");\n    if (signatureStartPos < 1) {\n      continue;\n    }\n    const signedValue = value.substring(0, signatureStartPos);\n    const signature = value.substring(signatureStartPos + 1);\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\n      continue;\n    }\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\n    parsedCookie[key] = isVerified ? signedValue : false;\n  }\n  return parsedCookie;\n};\nvar _serialize = (name, value, opt = {}) => {\n  let cookie = `${name}=${value}`;\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n    cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n  }\n  if (opt.domain) {\n    cookie += `; Domain=${opt.domain}`;\n  }\n  if (opt.path) {\n    cookie += `; Path=${opt.path}`;\n  }\n  if (opt.expires) {\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\n  }\n  if (opt.httpOnly) {\n    cookie += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    cookie += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    cookie += `; SameSite=${opt.sameSite}`;\n  }\n  if (opt.partitioned) {\n    cookie += \"; Partitioned\";\n  }\n  return cookie;\n};\nvar serialize = (name, value, opt = {}) => {\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nvar serializeSigned = async (name, value, secret, opt = {}) => {\n  const signature = await makeSignature(value, secret);\n  value = `${value}.${signature}`;\n  value = encodeURIComponent(value);\n  return _serialize(name, value, opt);\n};\nexport {\n  parse,\n  parseSigned,\n  serialize,\n  serializeSigned\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer) => {\n  let str = \"\";\n  const callbacks = [];\n  for (let i = buffer.length - 1; ; i--) {\n    str += buffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = await buffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  stringBufferToString\n};\n", "// src/utils/stream.ts\nvar StreamingApi = class {\n  constructor(writable, _readable) {\n    this.abortSubscribers = [];\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n    const reader = _readable.getReader();\n    this.responseReadable = new ReadableStream({\n      async pull(controller) {\n        const { done, value } = await reader.read();\n        done ? controller.close() : controller.enqueue(value);\n      },\n      cancel: () => {\n        this.abortSubscribers.forEach((subscriber) => subscriber());\n      }\n    });\n  }\n  async write(input) {\n    try {\n      if (typeof input === \"string\") {\n        input = this.encoder.encode(input);\n      }\n      await this.writer.write(input);\n    } catch (e) {\n    }\n    return this;\n  }\n  async writeln(input) {\n    await this.write(input + \"\\n\");\n    return this;\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  async close() {\n    try {\n      await this.writer.close();\n    } catch (e) {\n    }\n  }\n  async pipe(body) {\n    this.writer.releaseLock();\n    await body.pipeTo(this.writable, { preventClose: true });\n    this.writer = this.writable.getWriter();\n  }\n  async onAbort(listener) {\n    this.abortSubscribers.push(listener);\n  }\n};\nexport {\n  StreamingApi\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/context.ts\nimport { serialize } from \"./utils/cookie.js\";\nimport { resolveCallback, HtmlEscapedCallbackPhase } from \"./utils/html.js\";\nimport { StreamingApi } from \"./utils/stream.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  Object.entries(map).forEach(([key, value]) => headers.set(key, value));\n  return headers;\n};\nvar _status, _executionCtx, _headers, _preparedHeaders, _res, _isFresh;\nvar Context = class {\n  constructor(req, options) {\n    this.env = {};\n    this._var = {};\n    this.finalized = false;\n    this.error = void 0;\n    __privateAdd(this, _status, 200);\n    __privateAdd(this, _executionCtx, void 0);\n    __privateAdd(this, _headers, void 0);\n    __privateAdd(this, _preparedHeaders, void 0);\n    __privateAdd(this, _res, void 0);\n    __privateAdd(this, _isFresh, true);\n    this.renderer = (content) => this.html(content);\n    this.notFoundHandler = () => new Response();\n    this.render = (...args) => this.renderer(...args);\n    this.setRenderer = (renderer) => {\n      this.renderer = renderer;\n    };\n    this.header = (name, value, options) => {\n      if (value === void 0) {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).delete(name);\n        } else if (__privateGet(this, _preparedHeaders)) {\n          delete __privateGet(this, _preparedHeaders)[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options?.append) {\n        if (!__privateGet(this, _headers)) {\n          __privateSet(this, _isFresh, false);\n          __privateSet(this, _headers, new Headers(__privateGet(this, _preparedHeaders)));\n          __privateSet(this, _preparedHeaders, {});\n        }\n        __privateGet(this, _headers).append(name, value);\n      } else {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).set(name, value);\n        } else {\n          __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n          __privateGet(this, _preparedHeaders)[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options?.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    };\n    this.status = (status) => {\n      __privateSet(this, _isFresh, false);\n      __privateSet(this, _status, status);\n    };\n    this.set = (key, value) => {\n      this._var ?? (this._var = {});\n      this._var[key] = value;\n    };\n    this.get = (key) => {\n      return this._var ? this._var[key] : void 0;\n    };\n    this.newResponse = (data, arg, headers) => {\n      if (__privateGet(this, _isFresh) && !headers && !arg && __privateGet(this, _status) === 200) {\n        return new Response(data, {\n          headers: __privateGet(this, _preparedHeaders)\n        });\n      }\n      if (arg && typeof arg !== \"number\") {\n        const headers2 = setHeaders(new Headers(arg.headers), __privateGet(this, _preparedHeaders));\n        return new Response(data, {\n          headers: headers2,\n          status: arg.status\n        });\n      }\n      const status = typeof arg === \"number\" ? arg : __privateGet(this, _status);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      if (__privateGet(this, _res)) {\n        __privateGet(this, _res).headers.forEach((v, k) => {\n          __privateGet(this, _headers)?.set(k, v);\n        });\n        setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n      }\n      headers ?? (headers = {});\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          __privateGet(this, _headers).set(k, v);\n        } else {\n          __privateGet(this, _headers).delete(k);\n          for (const v2 of v) {\n            __privateGet(this, _headers).append(k, v2);\n          }\n        }\n      }\n      return new Response(data, {\n        status,\n        headers: __privateGet(this, _headers)\n      });\n    };\n    this.body = (data, arg, headers) => {\n      return typeof arg === \"number\" ? this.newResponse(data, arg, headers) : this.newResponse(data, arg);\n    };\n    this.text = (text, arg, headers) => {\n      if (!__privateGet(this, _preparedHeaders)) {\n        if (__privateGet(this, _isFresh) && !headers && !arg) {\n          return new Response(text);\n        }\n        __privateSet(this, _preparedHeaders, {});\n      }\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = TEXT_PLAIN;\n      return typeof arg === \"number\" ? this.newResponse(text, arg, headers) : this.newResponse(text, arg);\n    };\n    this.json = (object, arg, headers) => {\n      const body = JSON.stringify(object);\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"application/json; charset=UTF-8\";\n      return typeof arg === \"number\" ? this.newResponse(body, arg, headers) : this.newResponse(body, arg);\n    };\n    this.jsonT = (object, arg, headers) => {\n      return this.json(object, arg, headers);\n    };\n    this.html = (html, arg, headers) => {\n      __privateGet(this, _preparedHeaders) ?? __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        if (!(html instanceof Promise)) {\n          html = html.toString();\n        }\n        if (html instanceof Promise) {\n          return html.then((html2) => resolveCallback(html2, HtmlEscapedCallbackPhase.Stringify, false, {})).then((html2) => {\n            return typeof arg === \"number\" ? this.newResponse(html2, arg, headers) : this.newResponse(html2, arg);\n          });\n        }\n      }\n      return typeof arg === \"number\" ? this.newResponse(html, arg, headers) : this.newResponse(html, arg);\n    };\n    this.redirect = (location, status = 302) => {\n      __privateGet(this, _headers) ?? __privateSet(this, _headers, new Headers());\n      __privateGet(this, _headers).set(\"Location\", location);\n      return this.newResponse(null, status);\n    };\n    this.streamText = (cb, arg, headers) => {\n      headers ?? (headers = {});\n      this.header(\"content-type\", TEXT_PLAIN);\n      this.header(\"x-content-type-options\", \"nosniff\");\n      this.header(\"transfer-encoding\", \"chunked\");\n      return this.stream(cb, arg, headers);\n    };\n    this.stream = (cb, arg, headers) => {\n      const { readable, writable } = new TransformStream();\n      const stream = new StreamingApi(writable, readable);\n      cb(stream).finally(() => stream.close());\n      return typeof arg === \"number\" ? this.newResponse(stream.responseReadable, arg, headers) : this.newResponse(stream.responseReadable, arg);\n    };\n    this.cookie = (name, value, opt) => {\n      const cookie = serialize(name, value, opt);\n      this.header(\"set-cookie\", cookie, { append: true });\n    };\n    this.notFound = () => {\n      return this.notFoundHandler(this);\n    };\n    this.req = req;\n    if (options) {\n      __privateSet(this, _executionCtx, options.executionCtx);\n      this.env = options.env;\n      if (options.notFoundHandler) {\n        this.notFoundHandler = options.notFoundHandler;\n      }\n    }\n  }\n  get event() {\n    if (__privateGet(this, _executionCtx) && \"respondWith\" in __privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (__privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    __privateSet(this, _isFresh, false);\n    return __privateGet(this, _res) || __privateSet(this, _res, new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res2) {\n    __privateSet(this, _isFresh, false);\n    if (__privateGet(this, _res) && _res2) {\n      __privateGet(this, _res).headers.delete(\"content-type\");\n      for (const [k, v] of __privateGet(this, _res).headers.entries()) {\n        if (k === \"set-cookie\") {\n          const cookies = __privateGet(this, _res).headers.getSetCookie();\n          _res2.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res2.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res2.headers.set(k, v);\n        }\n      }\n    }\n    __privateSet(this, _res, _res2);\n    this.finalized = true;\n  }\n  get var() {\n    return { ...this._var };\n  }\n  get runtime() {\n    const global = globalThis;\n    if (global?.Deno !== void 0) {\n      return \"deno\";\n    }\n    if (global?.Bun !== void 0) {\n      return \"bun\";\n    }\n    if (typeof global?.WebSocketPair === \"function\") {\n      return \"workerd\";\n    }\n    if (typeof global?.EdgeRuntime === \"string\") {\n      return \"edge-light\";\n    }\n    if (global?.fastly !== void 0) {\n      return \"fastly\";\n    }\n    if (global?.__lagon__ !== void 0) {\n      return \"lagon\";\n    }\n    if (global?.process?.release?.name === \"node\") {\n      return \"node\";\n    }\n    return \"other\";\n  }\n};\n_status = new WeakMap();\n_executionCtx = new WeakMap();\n_headers = new WeakMap();\n_preparedHeaders = new WeakMap();\n_res = new WeakMap();\n_isFresh = new WeakMap();\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/compose.ts\nimport { Context } from \"./context.js\";\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        if (context instanceof Context) {\n          context.req.routeIndex = i;\n        }\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (!handler) {\n        if (context instanceof Context && context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      } else {\n        try {\n          res = await handler(context, () => {\n            return dispatch(i + 1);\n          });\n        } catch (err) {\n          if (err instanceof Error && context instanceof Context && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  constructor(status = 500, options) {\n    super(options?.message);\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      return this.res;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/utils/body.ts\nvar parseBody = async (request, options = { all: false }) => {\n  const contentType = request.headers.get(\"Content-Type\");\n  if (isFormDataContent(contentType)) {\n    return parseFormData(request, options);\n  }\n  return {};\n};\nfunction isFormDataContent(contentType) {\n  if (contentType === null) {\n    return false;\n  }\n  return contentType.startsWith(\"multipart/form-data\") || contentType.startsWith(\"application/x-www-form-urlencoded\");\n}\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = {};\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] && isArrayField(form[key])) {\n    appendToExistingArray(form[key], value);\n  } else if (form[key]) {\n    convertToNewArray(form, key, value);\n  } else {\n    form[key] = value;\n  }\n};\nfunction isArrayField(field) {\n  return Array.isArray(field);\n}\nvar appendToExistingArray = (arr, value) => {\n  arr.push(value);\n};\nvar convertToNewArray = (form, key, value) => {\n  form[key] = [form[key], value];\n};\nexport {\n  parseBody\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { parse } from \"./utils/cookie.js\";\nimport { getQueryParam, getQueryParams, decodeURIComponent_ } from \"./utils/url.js\";\nvar _validatedData, _matchResult;\nvar HonoRequest = class {\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    __privateAdd(this, _validatedData, void 0);\n    __privateAdd(this, _matchResult, void 0);\n    this.routeIndex = 0;\n    this.bodyCache = {};\n    this.cachedBody = (key) => {\n      const { bodyCache, raw } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody) {\n        return cachedBody;\n      }\n      if (bodyCache.arrayBuffer) {\n        return (async () => {\n          return await new Response(bodyCache.arrayBuffer)[key]();\n        })();\n      }\n      return bodyCache[key] = raw[key]();\n    };\n    this.raw = request;\n    this.path = path;\n    __privateSet(this, _matchResult, matchResult);\n    __privateSet(this, _validatedData, {});\n  }\n  param(key) {\n    return key ? this.getDecodedParam(key) : this.getAllDecodedParams();\n  }\n  getDecodedParam(key) {\n    const paramKey = __privateGet(this, _matchResult)[0][this.routeIndex][1][key];\n    const param = this.getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? decodeURIComponent_(param) : param : void 0;\n  }\n  getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(__privateGet(this, _matchResult)[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.getParamValue(__privateGet(this, _matchResult)[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? decodeURIComponent_(value) : value;\n      }\n    }\n    return decoded;\n  }\n  getParamValue(paramKey) {\n    return __privateGet(this, _matchResult)[1] ? __privateGet(this, _matchResult)[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name.toLowerCase()) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  cookie(key) {\n    const cookie = this.raw.headers.get(\"Cookie\");\n    if (!cookie) {\n      return;\n    }\n    const obj = parse(cookie);\n    if (key) {\n      const value = obj[key];\n      return value;\n    } else {\n      return obj;\n    }\n  }\n  async parseBody(options) {\n    if (this.bodyCache.parsedBody) {\n      return this.bodyCache.parsedBody;\n    }\n    const parsedBody = await parseBody(this, options);\n    this.bodyCache.parsedBody = parsedBody;\n    return parsedBody;\n  }\n  json() {\n    return this.cachedBody(\"json\");\n  }\n  text() {\n    return this.cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.cachedBody(\"blob\");\n  }\n  formData() {\n    return this.cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    __privateGet(this, _validatedData)[target] = data;\n  }\n  valid(target) {\n    return __privateGet(this, _validatedData)[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n  get headers() {\n    return this.raw.headers;\n  }\n  get body() {\n    return this.raw.body;\n  }\n  get bodyUsed() {\n    return this.raw.bodyUsed;\n  }\n  get integrity() {\n    return this.raw.integrity;\n  }\n  get keepalive() {\n    return this.raw.keepalive;\n  }\n  get referrer() {\n    return this.raw.referrer;\n  }\n  get signal() {\n    return this.raw.signal;\n  }\n};\n_validatedData = new WeakMap();\n_matchResult = new WeakMap();\nexport {\n  HonoRequest\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { HTTPException } from \"./http-exception.js\";\nimport { HonoRequest } from \"./request.js\";\nimport { METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE, METHODS } from \"./router.js\";\nimport { getPath, getPathNoStrict, getQueryStrings, mergePath } from \"./utils/url.js\";\nvar COMPOSED_HANDLER = Symbol(\"composedHandler\");\nfunction defineDynamicClass() {\n  return class {\n  };\n}\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (err instanceof HTTPException) {\n    return err.getResponse();\n  }\n  console.error(err);\n  const message = \"Internal Server Error\";\n  return c.text(message, 500);\n};\nvar _path;\nvar _Hono = class extends defineDynamicClass() {\n  constructor(options = {}) {\n    super();\n    this._basePath = \"/\";\n    __privateAdd(this, _path, \"/\");\n    this.routes = [];\n    this.notFoundHandler = notFoundHandler;\n    this.errorHandler = errorHandler;\n    this.onError = (handler) => {\n      this.errorHandler = handler;\n      return this;\n    };\n    this.notFound = (handler) => {\n      this.notFoundHandler = handler;\n      return this;\n    };\n    this.head = () => {\n      console.warn(\"`app.head()` is no longer used. `app.get()` implicitly handles the HEAD method.\");\n      return this;\n    };\n    this.handleEvent = (event) => {\n      return this.dispatch(event.request, event, void 0, event.request.method);\n    };\n    this.fetch = (request, Env, executionCtx) => {\n      return this.dispatch(request, executionCtx, Env, request.method);\n    };\n    this.request = (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        if (requestInit !== void 0) {\n          input = new Request(input, requestInit);\n        }\n        return this.fetch(input, Env, executionCtx);\n      }\n      input = input.toString();\n      const path = /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`;\n      const req = new Request(path, requestInit);\n      return this.fetch(req, Env, executionCtx);\n    };\n    this.fire = () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(this.dispatch(event.request, event, void 0, event.request.method));\n      });\n    };\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.map((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          __privateSet(this, _path, args1);\n        } else {\n          this.addRoute(method, __privateGet(this, _path), args1);\n        }\n        args.map((handler) => {\n          if (typeof handler !== \"string\") {\n            this.addRoute(method, __privateGet(this, _path), handler);\n          }\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      if (!method) {\n        return this;\n      }\n      __privateSet(this, _path, path);\n      for (const m of [method].flat()) {\n        handlers.map((handler) => {\n          this.addRoute(m.toUpperCase(), __privateGet(this, _path), handler);\n        });\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        __privateSet(this, _path, arg1);\n      } else {\n        handlers.unshift(arg1);\n      }\n      handlers.map((handler) => {\n        this.addRoute(METHOD_NAME_ALL, __privateGet(this, _path), handler);\n      });\n      return this;\n    };\n    const strict = options.strict ?? true;\n    delete options.strict;\n    Object.assign(this, options);\n    this.getPath = strict ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  clone() {\n    const clone = new _Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    if (!app) {\n      return subApp;\n    }\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  showRoutes() {\n    const length = 8;\n    this.routes.map((route) => {\n      console.log(\n        `\\x1B[32m${route.method}\\x1B[0m ${\" \".repeat(length - route.method.length)} ${route.path}`\n      );\n    });\n  }\n  mount(path, applicationHandler, optionHandler) {\n    const mergedPath = mergePath(this._basePath, path);\n    const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n    const handler = async (c, next) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      const options = optionHandler ? optionHandler(c) : [c.env, executionContext];\n      const optionsArray = Array.isArray(options) ? options : [options];\n      const queryStrings = getQueryStrings(c.req.url);\n      const res = await applicationHandler(\n        new Request(\n          new URL((c.req.path.slice(pathPrefixLength) || \"/\") + queryStrings, c.req.url),\n          c.req.raw\n        ),\n        ...optionsArray\n      );\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  get routerName() {\n    this.matchRoute(\"GET\", \"/\");\n    return this.router.name;\n  }\n  addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  matchRoute(method, path) {\n    return this.router.match(method, path);\n  }\n  handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.matchRoute(method, path);\n    const c = new Context(new HonoRequest(request, path, matchResult), {\n      env,\n      executionCtx,\n      notFoundHandler: this.notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.notFoundHandler(c))\n      ).catch((err) => this.handleError(err, c)) : res;\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. You may forget returning Response object or `await next()`\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.handleError(err, c);\n      }\n    })();\n  }\n};\nvar Hono = _Hono;\n_path = new WeakMap();\nexport {\n  COMPOSED_HANDLER,\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  constructor() {\n    this.children = {};\n  }\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.varIndex]);\n      }\n    } else {\n      node = this.children[token];\n      if (!node) {\n        if (Object.keys(this.children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.children[k];\n      return (typeof c.varIndex === \"number\" ? `(${k})@${c.varIndex}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.index === \"number\") {\n      strList.unshift(`#${this.index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  constructor() {\n    this.context = { varIndex: 0 };\n    this.root = new Node();\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.root.insert(tokens, index, paramAssoc, this.context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (typeof handlerIndex !== \"undefined\") {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (typeof paramIndex !== \"undefined\") {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  METHOD_NAME_ALL,\n  METHODS,\n  UnsupportedPathError,\n  MESSAGE_MATCHER_IS_ALREADY_BUILT\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar methodNames = [METHOD_NAME_ALL, ...METHODS].map((method) => method.toUpperCase());\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], {}];\nvar wildcardRegExpCache = {};\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ?? (wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(/\\/\\*/, \"(?:|/.*)\")}$`\n  ));\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = {};\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = {};\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, {}]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = {};\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  constructor() {\n    this.name = \"RegExpRouter\";\n    this.middleware = { [METHOD_NAME_ALL]: {} };\n    this.routes = { [METHOD_NAME_ALL]: {} };\n  }\n  add(method, path, handler) {\n    var _a;\n    const { middleware, routes } = this;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (methodNames.indexOf(method) === -1) {\n      methodNames.push(method);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = {};\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a2;\n          (_a2 = middleware[m])[path] || (_a2[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a = middleware[method])[path] || (_a[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a2;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a2 = routes[m])[path2] || (_a2[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  buildAllMatchers() {\n    const matchers = {};\n    methodNames.forEach((method) => {\n      matchers[method] = this.buildMatcher(method) || matchers[METHOD_NAME_ALL];\n    });\n    this.middleware = this.routes = void 0;\n    return matchers;\n  }\n  buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.middleware, this.routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute || (hasOwnRoute = true);\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { UnsupportedPathError, MESSAGE_MATCHER_IS_ALREADY_BUILT } from \"../../router.js\";\nvar SmartRouter = class {\n  constructor(init) {\n    this.name = \"SmartRouter\";\n    this.routers = [];\n    this.routes = [];\n    Object.assign(this, init);\n  }\n  add(method, path, handler) {\n    if (!this.routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const { routers, routes } = this;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        routes.forEach((args) => {\n          router.add(...args);\n        });\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.routers = [router];\n      this.routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.routes || this.routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { splitPath, splitRoutingPath, getPattern } from \"../../utils/url.js\";\nvar Node = class {\n  constructor(method, handler, children) {\n    this.order = 0;\n    this.params = {};\n    this.children = children || {};\n    this.methods = [];\n    this.name = \"\";\n    if (method && handler) {\n      const m = {};\n      m[method] = { handler, possibleKeys: [], score: 0, name: this.name };\n      this.methods = [m];\n    }\n    this.patterns = [];\n  }\n  insert(method, path, handler) {\n    this.name = `${method} ${path}`;\n    this.order = ++this.order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    const parentPatterns = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      if (Object.keys(curNode.children).includes(p)) {\n        parentPatterns.push(...curNode.patterns);\n        curNode = curNode.children[p];\n        const pattern2 = getPattern(p);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.children[p] = new Node();\n      const pattern = getPattern(p);\n      if (pattern) {\n        curNode.patterns.push(pattern);\n        parentPatterns.push(...curNode.patterns);\n        possibleKeys.push(pattern[1]);\n      }\n      parentPatterns.push(...curNode.patterns);\n      curNode = curNode.children[p];\n    }\n    if (!curNode.methods.length) {\n      curNode.methods = [];\n    }\n    const m = {};\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      name: this.name,\n      score: this.order\n    };\n    m[method] = handlerSet;\n    curNode.methods.push(m);\n    return curNode;\n  }\n  gHSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.methods.length; i < len; i++) {\n      const m = node.methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = {};\n        handlerSet.possibleKeys.forEach((key) => {\n          const processed = processedSet[handlerSet.name];\n          handlerSet.params[key] = params[key] && !processed ? params[key] : nodeParams[key] ?? params[key];\n          processedSet[handlerSet.name] = true;\n        });\n        handlerSets.push(handlerSet);\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.params = {};\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.children[part];\n        if (nextNode) {\n          nextNode.params = node.params;\n          if (isLast === true) {\n            if (nextNode.children[\"*\"]) {\n              handlerSets.push(...this.gHSets(nextNode.children[\"*\"], method, node.params, {}));\n            }\n            handlerSets.push(...this.gHSets(nextNode, method, node.params, {}));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.patterns.length; k < len3; k++) {\n          const pattern = node.patterns[k];\n          const params = { ...node.params };\n          if (pattern === \"*\") {\n            const astNode = node.children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.gHSets(astNode, method, node.params, {}));\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp && matcher.test(restPathString)) {\n            params[name] = restPathString;\n            handlerSets.push(...this.gHSets(child, method, node.params, params));\n            continue;\n          }\n          if (matcher === true || matcher instanceof RegExp && matcher.test(part)) {\n            if (typeof key === \"string\") {\n              params[name] = part;\n              if (isLast === true) {\n                handlerSets.push(...this.gHSets(child, method, params, node.params));\n                if (child.children[\"*\"]) {\n                  handlerSets.push(...this.gHSets(child.children[\"*\"], method, params, node.params));\n                }\n              } else {\n                child.params = params;\n                tempNodes.push(child);\n              }\n            }\n          }\n        }\n      }\n      curNodes = tempNodes;\n    }\n    const results = handlerSets.sort((a, b) => {\n      return a.score - b.score;\n    });\n    return [results.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  constructor() {\n    this.name = \"TrieRouter\";\n    this.node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (const p of results) {\n        this.node.insert(method, p, handler);\n      }\n      return;\n    }\n    this.node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      return () => optsOrigin;\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : optsOrigin[0];\n    }\n  })(opts.origin);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\");\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      set(\"Vary\", \"Origin\");\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      if (opts.allowMethods?.length) {\n        set(\"Access-Control-Allow-Methods\", opts.allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: c.res.statusText\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/middleware/logger/index.ts\nimport { getPath } from \"../../utils/url.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = (status) => {\n  const out = {\n    7: `\\x1B[35m${status}\\x1B[0m`,\n    5: `\\x1B[31m${status}\\x1B[0m`,\n    4: `\\x1B[33m${status}\\x1B[0m`,\n    3: `\\x1B[36m${status}\\x1B[0m`,\n    2: `\\x1B[32m${status}\\x1B[0m`,\n    1: `\\x1B[32m${status}\\x1B[0m`,\n    0: `\\x1B[33m${status}\\x1B[0m`\n  };\n  const calculateStatus = status / 100 | 0;\n  return out[calculateStatus];\n};\nfunction log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `  ${prefix} ${method} ${path}` : `  ${prefix} ${method} ${path} ${colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method } = c.req;\n    const path = getPath(c.req.raw);\n    log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n", "// src/middleware/secure-headers/index.ts\nvar HEADERS_MAP = {\n  crossOriginEmbedderPolicy: [\"Cross-Origin-Embedder-Policy\", \"require-corp\"],\n  crossOriginResourcePolicy: [\"Cross-Origin-Resource-Policy\", \"same-origin\"],\n  crossOriginOpenerPolicy: [\"Cross-Origin-Opener-Policy\", \"same-origin\"],\n  originAgentCluster: [\"Origin-Agent-Cluster\", \"?1\"],\n  referrerPolicy: [\"Referrer-Policy\", \"no-referrer\"],\n  strictTransportSecurity: [\"Strict-Transport-Security\", \"max-age=15552000; includeSubDomains\"],\n  xContentTypeOptions: [\"X-Content-Type-Options\", \"nosniff\"],\n  xDnsPrefetchControl: [\"X-DNS-Prefetch-Control\", \"off\"],\n  xDownloadOptions: [\"X-Download-Options\", \"noopen\"],\n  xFrameOptions: [\"X-Frame-Options\", \"SAMEORIGIN\"],\n  xPermittedCrossDomainPolicies: [\"X-Permitted-Cross-Domain-Policies\", \"none\"],\n  xXssProtection: [\"X-XSS-Protection\", \"0\"]\n};\nvar DEFAULT_OPTIONS = {\n  crossOriginEmbedderPolicy: false,\n  crossOriginResourcePolicy: true,\n  crossOriginOpenerPolicy: true,\n  originAgentCluster: true,\n  referrerPolicy: true,\n  strictTransportSecurity: true,\n  xContentTypeOptions: true,\n  xDnsPrefetchControl: true,\n  xDownloadOptions: true,\n  xFrameOptions: true,\n  xPermittedCrossDomainPolicies: true,\n  xXssProtection: true\n};\nvar secureHeaders = (customOptions) => {\n  const options = { ...DEFAULT_OPTIONS, ...customOptions };\n  const headersToSet = getFilteredHeaders(options);\n  if (options.contentSecurityPolicy) {\n    headersToSet.push([\"Content-Security-Policy\", getCSPDirectives(options.contentSecurityPolicy)]);\n  }\n  if (options.reportingEndpoints) {\n    headersToSet.push([\"Reporting-Endpoints\", getReportingEndpoints(options.reportingEndpoints)]);\n  }\n  if (options.reportTo) {\n    headersToSet.push([\"Report-To\", getReportToOptions(options.reportTo)]);\n  }\n  return async function secureHeaders2(ctx, next) {\n    await next();\n    setHeaders(ctx, headersToSet);\n    ctx.res.headers.delete(\"X-Powered-By\");\n  };\n};\nfunction getFilteredHeaders(options) {\n  return Object.entries(HEADERS_MAP).filter(([key]) => options[key]).map(([key, defaultValue]) => {\n    const overrideValue = options[key];\n    return typeof overrideValue === \"string\" ? [defaultValue[0], overrideValue] : defaultValue;\n  });\n}\nfunction getCSPDirectives(contentSecurityPolicy) {\n  return Object.entries(contentSecurityPolicy || []).map(([directive, value]) => {\n    const kebabCaseDirective = directive.replace(\n      /[A-Z]+(?![a-z])|[A-Z]/g,\n      (match, offset) => offset ? \"-\" + match.toLowerCase() : match.toLowerCase()\n    );\n    return `${kebabCaseDirective} ${Array.isArray(value) ? value.join(\" \") : value}`;\n  }).join(\"; \");\n}\nfunction getReportingEndpoints(reportingEndpoints = []) {\n  return reportingEndpoints.map((endpoint) => `${endpoint.name}=\"${endpoint.url}\"`).join(\", \");\n}\nfunction getReportToOptions(reportTo = []) {\n  return reportTo.map((option) => JSON.stringify(option)).join(\", \");\n}\nfunction setHeaders(ctx, headersToSet) {\n  headersToSet.forEach(([header, value]) => {\n    ctx.res.headers.set(header, value);\n  });\n}\nexport {\n  secureHeaders\n};\n", "/**\n * \u7EDF\u4E00\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\n * \u8D1F\u8D23\u6355\u83B7\u3001\u8BB0\u5F55\u548C\u5904\u7406\u5E94\u7528\u4E2D\u7684\u5404\u79CD\u9519\u8BEF\n */\n\nimport { Context } from 'hono';\nimport type { APIResponse } from '../../../shared/types/apiResponse';\n\n// \u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B\nexport class AppError extends Error {\n  public statusCode: number;\n  public isOperational: boolean;\n  public code: string | undefined;\n\n  constructor(message: string, statusCode: number = 500, code?: string, isOperational: boolean = true) {\n    super(message);\n    this.statusCode = statusCode;\n    this.code = code;\n    this.isOperational = isOperational;\n\n    // Workers \u73AF\u5883\u65E0\u9700captureStackTrace\n  }\n}\n\nexport class ValidationError extends AppError {\n  constructor(message: string, code?: string) {\n    super(message, 400, code);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = '\u8BA4\u8BC1\u5931\u8D25', code?: string) {\n    super(message, 401, code);\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = '\u6743\u9650\u4E0D\u8DB3', code?: string) {\n    super(message, 403, code);\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(message: string = '\u8D44\u6E90\u672A\u627E\u5230', code?: string) {\n    super(message, 404, code);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string = '\u8D44\u6E90\u51B2\u7A81', code?: string) {\n    super(message, 409, code);\n  }\n}\n\nexport class RateLimitError extends AppError {\n  constructor(message: string = '\u8BF7\u6C42\u8FC7\u4E8E\u9891\u7E41', code?: string) {\n    super(message, 429, code);\n  }\n}\n\n// \u9519\u8BEF\u4EE3\u7801\u6620\u5C04\nexport const ERROR_CODES = {\n  // \u901A\u7528\u9519\u8BEF (1000-1999)\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  INTERNAL_ERROR: 'INTERNAL_ERROR',\n  \n  // \u8BA4\u8BC1\u6388\u6743\u9519\u8BEF (2000-2999)\n  AUTHENTICATION_FAILED: 'AUTHENTICATION_FAILED',\n  AUTHORIZATION_DENIED: 'AUTHORIZATION_DENIED',\n  TOKEN_EXPIRED: 'TOKEN_EXPIRED',\n  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',\n  \n  // \u6570\u636E\u9519\u8BEF (3000-3999)\n  DATA_NOT_FOUND: 'DATA_NOT_FOUND',\n  DATA_CONFLICT: 'DATA_CONFLICT',\n  DATA_INVALID: 'DATA_INVALID',\n  DATABASE_ERROR: 'DATABASE_ERROR',\n  \n  // \u4E1A\u52A1\u903B\u8F91\u9519\u8BEF (4000-4999)\n  BUSINESS_RULE_VIOLATION: 'BUSINESS_RULE_VIOLATION',\n  INVALID_OPERATION: 'INVALID_OPERATION',\n  RESOURCE_EXHAUSTED: 'RESOURCE_EXHAUSTED',\n  \n  // \u5916\u90E8\u670D\u52A1\u9519\u8BEF (5000-5999)\n  EXTERNAL_SERVICE_ERROR: 'EXTERNAL_SERVICE_ERROR',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  TIMEOUT_ERROR: 'TIMEOUT_ERROR'\n} as const;\n\n// \u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\nexport const errorHandler = (err: unknown, c: Context) => {\n  return handleError(err, c);\n};\n\n// \u9519\u8BEF\u5904\u7406\u51FD\u6570\nexport function handleError(error: unknown, c: Context) {\n  // \u8BB0\u5F55\u9519\u8BEF\n  logError(error, c);\n\n  // \u683C\u5F0F\u5316\u9519\u8BEF\u54CD\u5E94\n  const { body, status } = formatErrorResponse(error);\n  c.status(status);\n  c.header('Content-Type', 'application/json');\n\n  // \u8FD4\u56DE\u9519\u8BEF\u54CD\u5E94\n  return c.json(body);\n}\n\n// \u8BB0\u5F55\u9519\u8BEF\nfunction logError(error: unknown, c: Context) {\n  const requestId = c.get('requestId') || 'unknown';\n  const timestamp = new Date().toISOString();\n  const url = c.req.url;\n  const method = c.req.method;\n  const userAgent = c.req.header('User-Agent') || 'unknown';\n  const ip = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'unknown';\n\n  // \u6784\u5EFA\u9519\u8BEF\u65E5\u5FD7\n  const errorLog = {\n    timestamp,\n    requestId,\n    url,\n    method,\n    userAgent,\n    ip,\n    error: {\n      name: error instanceof Error ? error.name : 'UnknownError',\n      message: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      code: error instanceof AppError ? error.code : undefined\n    }\n  };\n\n  // \u6839\u636E\u9519\u8BEF\u7C7B\u578B\u9009\u62E9\u65E5\u5FD7\u7EA7\u522B\n  if (error instanceof AppError && error.isOperational) {\n    console.warn('Operational Error:', errorLog);\n  } else {\n    console.error('System Error:', errorLog);\n  }\n\n  // \u53D1\u9001\u9519\u8BEF\u5230\u76D1\u63A7\u7CFB\u7EDF\uFF08\u5982\u679C\u914D\u7F6E\u4E86\uFF09\n  sendErrorToMonitoring(errorLog);\n}\n\n// \u683C\u5F0F\u5316\u9519\u8BEF\u54CD\u5E94\nfunction formatErrorResponse(error: unknown): { body: APIResponse; status: number } {\n  if (error instanceof AppError) {\n    return {\n      status: error.statusCode,\n      body: {\n        success: false,\n        error: error.message,\n        timestamp: new Date().toISOString(),\n        requestId: 'unknown'\n      }\n    };\n  }\n\n  if (error instanceof Error) {\n    return {\n      status: 500,\n      body: {\n        success: false,\n        error: error.message,\n        timestamp: new Date().toISOString(),\n        requestId: 'unknown'\n      }\n    };\n  }\n\n  // \u672A\u77E5\u9519\u8BEF\u7C7B\u578B\n  return {\n    status: 500,\n    body: {\n      success: false,\n      error: 'An unexpected error occurred',\n      timestamp: new Date().toISOString(),\n      requestId: 'unknown'\n    }\n  };\n}\n\n// \u53D1\u9001\u9519\u8BEF\u5230\u76D1\u63A7\u7CFB\u7EDF\nasync function sendErrorToMonitoring(_errorLog: any) {\n  try {\n    // \u65E0\u6CD5\u4F7F\u7528process.env\uFF0C\u5728Workers\u4E2D\u5E94\u901A\u8FC7Env\u6CE8\u5165\uFF1B\u6B64\u5904\u8DF3\u8FC7\u5916\u90E8\u4E0A\u62A5\n    return;\n  } catch (e) {\n    // no-op\n  }\n}\n\n// \u5F02\u6B65\u9519\u8BEF\u5305\u88C5\u5668\nexport function asyncErrorHandler<T extends any[], R>(\n  fn: (...args: T) => Promise<R>\n) {\n  return async (...args: T): Promise<R> => {\n    try {\n      return await fn(...args);\n    } catch (error) {\n      // \u91CD\u65B0\u629B\u51FA\u9519\u8BEF\uFF0C\u8BA9\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\u5904\u7406\n      throw error;\n    }\n  };\n}\n\n// \u9A8C\u8BC1\u9519\u8BEF\u5904\u7406\nexport function handleValidationError(errors: any[]): ValidationError {\n  const messages = errors.map(error => error.message).join('; ');\n  return new ValidationError(messages, ERROR_CODES.VALIDATION_ERROR);\n}\n\n// \u6570\u636E\u5E93\u9519\u8BEF\u5904\u7406\nexport function handleDatabaseError(error: any): AppError {\n  if (error.code === 'SQLITE_CONSTRAINT') {\n    return new ConflictError('\u6570\u636E\u7EA6\u675F\u51B2\u7A81', ERROR_CODES.DATA_CONFLICT);\n  }\n  \n  if (error.code === 'SQLITE_BUSY') {\n    return new AppError('\u6570\u636E\u5E93\u7E41\u5FD9\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 503, ERROR_CODES.DATABASE_ERROR);\n  }\n  \n  return new AppError('\u6570\u636E\u5E93\u64CD\u4F5C\u5931\u8D25', 500, ERROR_CODES.DATABASE_ERROR);\n}\n\n// \u7F51\u7EDC\u9519\u8BEF\u5904\u7406\nexport function handleNetworkError(error: any): AppError {\n  if (error.code === 'ENOTFOUND') {\n    return new AppError('\u7F51\u7EDC\u8FDE\u63A5\u5931\u8D25', 503, ERROR_CODES.NETWORK_ERROR);\n  }\n  \n  if (error.code === 'ETIMEDOUT') {\n    return new AppError('\u8BF7\u6C42\u8D85\u65F6', 504, ERROR_CODES.TIMEOUT_ERROR);\n  }\n  \n  return new AppError('\u7F51\u7EDC\u9519\u8BEF', 503, ERROR_CODES.NETWORK_ERROR);\n}\n\n// \u7C7B\u578B\u5DF2\u5728\u4E0A\u65B9\u5BFC\u51FAclass\uFF0C\u65E0\u9700\u91CD\u590D\u5BFC\u51FAtype\u522B\u540D", "/**\n * \u7EDF\u4E00\u9519\u8BEF\u5904\u7406\u7C7B\u578B\u5B9A\u4E49\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u4E2D\u7684ModuleError\u89C4\u8303\n */\n\nexport class ModuleError extends Error {\n  constructor(\n    message: string,\n    public code: string,\n    public statusCode: number = 500,\n    public details?: any,\n  ) {\n    super(message);\n    this.name = \"ModuleError\";\n  }\n}\n\nexport const ERROR_CODES = {\n  VALIDATION_ERROR: \"VALIDATION_ERROR\",\n  NETWORK_ERROR: \"NETWORK_ERROR\",\n  TEST_NOT_FOUND: \"TEST_NOT_FOUND\",\n  CALCULATION_ERROR: \"CALCULATION_ERROR\",\n  DATABASE_ERROR: \"DATABASE_ERROR\",\n  UNAUTHORIZED: \"UNAUTHORIZED\",\n  RATE_LIMITED: \"RATE_LIMITED\",\n  NOT_FOUND: \"NOT_FOUND\",\n} as const;\n\nexport type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES];", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                const firstEl = sub.path[0];\n                fieldErrors[firstEl] = fieldErrors[firstEl] || [];\n                fieldErrors[firstEl].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"bigint\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "import { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        if (!header)\n            return false;\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(this._def.values);\n        }\n        if (!this._cache.has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!this._cache) {\n            this._cache = new Set(util.getValidEnumValues(this._def.values));\n        }\n        if (!this._cache.has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return INVALID;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return INVALID;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "/**\n * \u7EDF\u4E00\u6570\u636E\u9A8C\u8BC1\u670D\u52A1\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u9A8C\u8BC1\u89C4\u8303\n */\n\nimport { z } from \"zod\";\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\n\nexport class ValidationService {\n  // \u57FA\u7840\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly baseSchemas = {\n    uuid: z.string().uuid(\"Invalid UUID format\"),\n    email: z.string().email(\"Invalid email format\"),\n    url: z.string().url(\"Invalid URL format\"),\n    date: z.string().datetime(\"Invalid date format\"),\n    positiveInteger: z.number().int().positive(\"Must be a positive integer\"),\n    nonEmptyString: z.string().min(1, \"String cannot be empty\"),\n    optionalString: z.string().optional(),\n  };\n\n  // \u6D4B\u8BD5\u76F8\u5173\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly testSchemas = {\n    testType: z.enum([\n      \"psychology\",\n      \"astrology\", \n      \"tarot\",\n      \"career\",\n      \"learning\",\n      \"relationship\",\n      \"numerology\"\n    ]),\n    \n    testSubtype: z.object({\n      psychology: z.enum([\"mbti\", \"big_five\", \"phq9\", \"happiness\"]),\n      astrology: z.enum([\"basic\", \"detailed\", \"compatibility\"]),\n      tarot: z.enum([\"single\", \"three_card\", \"celtic_cross\", \"relationship\", \"career\"]),\n      career: z.enum([\"holland\", \"career_values\", \"skills_assessment\"]),\n      learning: z.enum([\"vark\", \"raven\", \"learning_strategies\"]),\n      relationship: z.enum([\"love_languages\", \"attachment_style\", \"relationship_skills\"]),\n      numerology: z.enum([\"basic\", \"detailed\", \"compatibility\"]),\n    }),\n\n    testSubmission: z.object({\n      testType: z.string().min(1),\n      answers: z.array(z.any()).min(1),\n      userInfo: z.object({\n        userAgent: z.string().optional(),\n        timestamp: z.string().optional(),\n      }).optional(),\n    }),\n\n    testResult: z.object({\n      sessionId: this.baseSchemas.uuid,\n      testType: z.string(),\n      scores: z.record(z.number()),\n      interpretation: z.string(),\n      recommendations: z.array(z.string()),\n      completedAt: this.baseSchemas.date,\n    }),\n  };\n\n  // \u7528\u6237\u53CD\u9988\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly feedbackSchemas = {\n    feedback: z.object({\n      sessionId: this.baseSchemas.uuid,\n      feedback: z.enum([\"like\", \"dislike\"]),\n      comment: z.string().max(500).optional(),\n      rating: z.number().int().min(1).max(5).optional(),\n    }),\n  };\n\n  // \u535A\u5BA2\u76F8\u5173\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly blogSchemas = {\n    article: z.object({\n      title: z.string().min(1).max(200),\n      content: z.string().min(1),\n      excerpt: z.string().max(300).optional(),\n      category: z.string().optional(),\n      tags: z.array(z.string()).optional(),\n      isPublished: z.boolean().optional(),\n      isFeatured: z.boolean().optional(),\n    }),\n\n    articleUpdate: z.object({\n      title: z.string().min(1).max(200).optional(),\n      content: z.string().min(1).optional(),\n      excerpt: z.string().max(300).optional(),\n      category: z.string().optional(),\n      tags: z.array(z.string()).optional(),\n      isPublished: z.boolean().optional(),\n      isFeatured: z.boolean().optional(),\n    }),\n  };\n\n  // \u5206\u6790\u4E8B\u4EF6\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly analyticsSchemas = {\n    event: z.object({\n      eventType: z.string().min(1),\n      eventData: z.record(z.any()).optional(),\n      sessionId: this.baseSchemas.uuid.optional(),\n      userAgent: z.string().optional(),\n    }),\n  };\n\n  // \u6A21\u5757\u4E13\u7528\u9A8C\u8BC1\u6A21\u5F0F\n  private static readonly moduleSchemas = {\n    psychology: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      testSubtype: z.enum([\"mbti\", \"big_five\", \"phq9\", \"happiness\"]),\n      personalityType: z.string().optional(),\n      dimensionScores: z.record(z.number()).optional(),\n      riskLevel: z.enum([\"minimal\", \"mild\", \"moderate\", \"moderately_severe\", \"severe\"]).optional(),\n      happinessDomains: z.record(z.number()).optional(),\n    }),\n\n    astrology: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      birthDate: z.date(),\n      birthTime: z.string().optional(),\n      birthLocation: z.string().optional(),\n      sunSign: z.string().min(1),\n      moonSign: z.string().optional(),\n      risingSign: z.string().optional(),\n      planetaryPositions: z.record(z.any()).optional(),\n      housePositions: z.record(z.any()).optional(),\n      aspects: z.record(z.any()).optional(),\n    }),\n\n    tarot: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      spreadType: z.enum([\"single\", \"three_card\", \"celtic_cross\", \"relationship\", \"career\"]),\n      cardsDrawn: z.array(z.object({\n        id: z.string(),\n        name: z.string(),\n        suit: z.string().optional(),\n        number: z.number().optional(),\n        isReversed: z.boolean(),\n        meaning: z.string(),\n        reversedMeaning: z.string().optional(),\n      })),\n      cardPositions: z.record(z.any()).optional(),\n      interpretationTheme: z.string().optional(),\n      questionCategory: z.enum([\"love\", \"career\", \"finance\", \"health\", \"spiritual\", \"general\"]).optional(),\n    }),\n\n    career: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      testSubtype: z.enum([\"holland\", \"career_values\", \"skills_assessment\"]),\n      hollandCode: z.string().optional(),\n      interestScores: z.record(z.number()).optional(),\n      valuesRanking: z.array(z.string()).optional(),\n      skillsProfile: z.record(z.number()).optional(),\n      careerMatches: z.array(z.object({\n        title: z.string(),\n        matchScore: z.number(),\n        description: z.string(),\n        requirements: z.array(z.string()),\n      })).optional(),\n    }),\n\n    learning: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      testSubtype: z.enum([\"vark\", \"raven\", \"learning_strategies\"]),\n      learningStyle: z.enum([\"visual\", \"auditory\", \"reading\", \"kinesthetic\", \"multimodal\"]).optional(),\n      cognitiveScore: z.number().optional(),\n      percentileRank: z.number().min(0).max(100).optional(),\n      learningPreferences: z.record(z.number()).optional(),\n      strategyRecommendations: z.array(z.string()).optional(),\n    }),\n\n    relationship: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      testSubtype: z.enum([\"love_languages\", \"attachment_style\", \"relationship_skills\"]),\n      primaryLoveLanguage: z.enum([\"words_of_affirmation\", \"acts_of_service\", \"receiving_gifts\", \"quality_time\", \"physical_touch\"]).optional(),\n      secondaryLoveLanguage: z.enum([\"words_of_affirmation\", \"acts_of_service\", \"receiving_gifts\", \"quality_time\", \"physical_touch\"]).optional(),\n      attachmentStyle: z.enum([\"secure\", \"anxious\", \"avoidant\", \"disorganized\"]).optional(),\n      relationshipSkills: z.record(z.number()).optional(),\n      communicationStyle: z.enum([\"assertive\", \"passive\", \"aggressive\", \"passive_aggressive\"]).optional(),\n    }),\n\n    numerology: z.object({\n      testSessionId: this.baseSchemas.uuid,\n      birthDate: z.date(),\n      fullName: z.string().min(1),\n      lifePathNumber: z.number().int().min(1).max(9),\n      destinyNumber: z.number().int().min(1).max(9),\n      soulUrgeNumber: z.number().int().min(1).max(9),\n      personalityNumber: z.number().int().min(1).max(9),\n      birthDayNumber: z.number().int().min(1).max(31),\n      numerologyChart: z.record(z.any()),\n    }),\n  };\n\n  /**\n   * \u9A8C\u8BC1\u6D4B\u8BD5\u63D0\u4EA4\u6570\u636E\n   */\n  static validateTestSubmission(data: any): any {\n    try {\n      return this.testSchemas.testSubmission.parse(data);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid test submission data\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u7528\u6237\u53CD\u9988\u6570\u636E\n   */\n  static validateFeedback(data: any): any {\n    try {\n      return this.feedbackSchemas.feedback.parse(data);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid feedback data\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u535A\u5BA2\u6587\u7AE0\u6570\u636E\n   */\n  static validateBlogArticle(data: any): any {\n    try {\n      return this.blogSchemas.article.parse(data);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid blog article data\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u5206\u6790\u4E8B\u4EF6\u6570\u636E\n   */\n  static validateAnalyticsEvent(data: any): any {\n    try {\n      return this.analyticsSchemas.event.parse(data);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid analytics event data\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u6A21\u5757\u4E13\u7528\u4F1A\u8BDD\u6570\u636E\n   */\n  static validateModuleSession(module: string, data: any): any {\n    try {\n      const schema = this.moduleSchemas[module as keyof typeof this.moduleSchemas];\n      if (!schema) {\n        throw new ModuleError(\n          `Unknown module: ${module}`,\n          ERROR_CODES.VALIDATION_ERROR,\n          400\n        );\n      }\n      return schema.parse(data);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          `Invalid ${module} session data`,\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1UUID\u683C\u5F0F\n   */\n  static validateUUID(uuid: string): string {\n    try {\n      return this.baseSchemas.uuid.parse(uuid);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid UUID format\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u9A8C\u8BC1\u5206\u9875\u53C2\u6570\n   */\n  static validatePagination(params: any): { page: number; limit: number } {\n    try {\n      const schema = z.object({\n        page: z.number().int().min(1).default(1),\n        limit: z.number().int().min(1).max(100).default(10),\n      });\n      return schema.parse(params);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ModuleError(\n          \"Invalid pagination parameters\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400,\n          error.errors\n        );\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * \u6E05\u7406\u548C\u9A8C\u8BC1\u5B57\u7B26\u4E32\u8F93\u5165\n   */\n  static sanitizeString(input: string, maxLength: number = 1000): string {\n    if (typeof input !== \"string\") {\n      throw new ModuleError(\n        \"Input must be a string\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      );\n    }\n\n    // \u79FB\u9664\u6F5C\u5728\u7684\u6076\u610F\u5B57\u7B26\n    const cleaned = input\n      .trim()\n      .replace(/[<>]/g, \"\") // \u79FB\u9664HTML\u6807\u7B7E\u5B57\u7B26\n      .replace(/javascript:/gi, \"\") // \u79FB\u9664JavaScript\u534F\u8BAE\n      .slice(0, maxLength);\n\n    return cleaned;\n  }\n\n  /**\n   * \u9A8C\u8BC1IP\u5730\u5740\u683C\u5F0F\n   */\n  static validateIPAddress(ip: string): boolean {\n    const ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    const ipv6Regex = /^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n    \n    return ipv4Regex.test(ip) || ipv6Regex.test(ip);\n  }\n\n  /**\n   * \u9A8C\u8BC1User-Agent\u5B57\u7B26\u4E32\n   */\n  static validateUserAgent(userAgent: string): boolean {\n    if (typeof userAgent !== \"string\") return false;\n    if (userAgent.length === 0 || userAgent.length > 500) return false;\n    \n    // \u57FA\u672C\u7684User-Agent\u683C\u5F0F\u68C0\u67E5\n    return /^[a-zA-Z0-9\\s\\(\\)\\[\\]\\/\\.\\-_,;:]+$/.test(userAgent);\n  }\n}", "/**\n * \u7EDF\u4E00\u8BF7\u6C42\u9A8C\u8BC1\u4E2D\u95F4\u4EF6\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u8BF7\u6C42\u9A8C\u8BC1\u89C4\u8303\n */\n\nimport type { Context, Next } from \"hono\";\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\nimport { ValidationService } from \"../services/ValidationService\";\nimport type { APIResponse } from \"../../../shared/types/apiResponse\";\n\nexport const requestValidator = async (c: Context, next: Next): Promise<void> => {\n  try {\n    // \u9A8C\u8BC1\u8BF7\u6C42\u5934\n    await validateHeaders(c);\n    \n    // \u9A8C\u8BC1\u8BF7\u6C42\u5927\u5C0F\n    await validateRequestSize(c);\n    \n    // \u9A8C\u8BC1Content-Type\uFF08\u5BF9\u4E8EPOST/PUT\u8BF7\u6C42\uFF09\n    await validateContentType(c);\n    \n    // \u9A8C\u8BC1User-Agent\n    validateUserAgent(c);\n    \n    await next();\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      const response: APIResponse = {\n        success: false,\n        error: error.message,\n        timestamp: new Date().toISOString(),\n        requestId: c.req.header(\"X-Request-ID\") || crypto.randomUUID(),\n      };\n      \n      c.status(error.statusCode);\n      await c.json(response);\n      return;\n    }\n    \n    // \u672A\u77E5\u9519\u8BEF\n    const response: APIResponse = {\n      success: false,\n      error: \"Request validation failed\",\n      timestamp: new Date().toISOString(),\n      requestId: c.req.header(\"X-Request-ID\") || crypto.randomUUID(),\n    };\n    \n    c.status(400);\n    await c.json(response);\n    return;\n  }\n};\n\n/**\n * \u9A8C\u8BC1\u8BF7\u6C42\u5934\n */\nasync function validateHeaders(c: Context): Promise<void> {\n  const headers = c.req.header();\n  \n  // \u68C0\u67E5\u5FC5\u9700\u7684\u8BF7\u6C42\u5934\n  const requiredHeaders = [\"host\"];\n  for (const header of requiredHeaders) {\n    if (!headers[header]) {\n      throw new ModuleError(\n        `Missing required header: ${header}`,\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      );\n    }\n  }\n  \n  // \u9A8C\u8BC1Authorization\u5934\u683C\u5F0F\uFF08\u5982\u679C\u5B58\u5728\uFF09\n  const authHeader = c.req.header(\"Authorization\");\n  if (authHeader && !isValidAuthHeader(authHeader)) {\n    throw new ModuleError(\n      \"Invalid Authorization header format\",\n      ERROR_CODES.UNAUTHORIZED,\n      401\n    );\n  }\n  \n  // \u9A8C\u8BC1X-Request-ID\u683C\u5F0F\uFF08\u5982\u679C\u5B58\u5728\uFF09\n  const requestId = c.req.header(\"X-Request-ID\");\n  if (requestId && !isValidUUID(requestId)) {\n    throw new ModuleError(\n      \"Invalid X-Request-ID format, must be a valid UUID\",\n      ERROR_CODES.VALIDATION_ERROR,\n      400\n    );\n  }\n}\n\n/**\n * \u9A8C\u8BC1\u8BF7\u6C42\u5927\u5C0F\n */\nasync function validateRequestSize(c: Context): Promise<void> {\n  const contentLength = c.req.header(\"Content-Length\");\n  \n  if (contentLength) {\n    const size = parseInt(contentLength);\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    \n    if (size > maxSize) {\n      throw new ModuleError(\n        \"Request body too large\",\n        ERROR_CODES.VALIDATION_ERROR,\n        413\n      );\n    }\n  }\n}\n\n/**\n * \u9A8C\u8BC1Content-Type\n */\nasync function validateContentType(c: Context): Promise<void> {\n  const method = c.req.method;\n  const contentType = c.req.header(\"Content-Type\");\n  \n  // POST\u548CPUT\u8BF7\u6C42\u9700\u8981Content-Type\n  if ([\"POST\", \"PUT\", \"PATCH\"].includes(method)) {\n    if (!contentType) {\n      throw new ModuleError(\n        \"Content-Type header is required for this method\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      );\n    }\n    \n    // \u9A8C\u8BC1\u652F\u6301\u7684Content-Type\n    const supportedTypes = [\n      \"application/json\",\n      \"application/x-www-form-urlencoded\",\n      \"multipart/form-data\",\n    ];\n    \n    const ct = contentType || \"\";\n    const baseType = ct.includes(\";\") ? (ct.split(\";\")[0] || \"\").trim() : ct.trim();\n    if (!supportedTypes.includes(baseType)) {\n      throw new ModuleError(\n        `Unsupported Content-Type: ${baseType}`,\n        ERROR_CODES.VALIDATION_ERROR,\n        415\n      );\n    }\n  }\n}\n\n/**\n * \u9A8C\u8BC1User-Agent\n */\nfunction validateUserAgent(c: Context): void {\n  const userAgent = c.req.header(\"User-Agent\");\n  \n  if (userAgent && !ValidationService.validateUserAgent(userAgent)) {\n    throw new ModuleError(\n      \"Invalid User-Agent header\",\n      ERROR_CODES.VALIDATION_ERROR,\n      400\n    );\n  }\n}\n\n/**\n * \u9A8C\u8BC1Authorization\u5934\u683C\u5F0F\n */\nfunction isValidAuthHeader(authHeader: string): boolean {\n  // \u652F\u6301\u7684\u683C\u5F0F\uFF1ABearer <token>, Basic <credentials>, API-Key <key>\n  const patterns = [\n    /^Bearer\\s+[A-Za-z0-9\\-._~+/]+=*$/,\n    /^Basic\\s+[A-Za-z0-9+/]+=*$/,\n    /^API-Key\\s+[A-Za-z0-9\\-._~]+$/,\n  ];\n  \n  return patterns.some(pattern => pattern.test(authHeader));\n}\n\n/**\n * \u9A8C\u8BC1UUID\u683C\u5F0F\n */\nfunction isValidUUID(uuid: string): boolean {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n}", "/**\n * \u7EDF\u4E00\u6570\u636E\u9A8C\u8BC1\u4E2D\u95F4\u4EF6\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u9A8C\u8BC1\u89C4\u8303\n */\n\nimport type { Context, Next } from \"hono\";\nimport type { AppContext } from \"../types/env\";\nimport { z } from \"zod\";\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\n\n// \u6D4B\u8BD5\u63D0\u4EA4\u6570\u636E\u9A8C\u8BC1\u6A21\u5F0F\nconst testSubmissionSchema = z.object({\n  testType: z.string().min(1, \"Test type is required\"),\n  answers: z.array(z.any()).min(1, \"At least one answer is required\"),\n  userInfo: z.object({\n    userAgent: z.string().optional(),\n    timestamp: z.string().optional(),\n  }).optional(),\n});\n\n// \u53CD\u9988\u6570\u636E\u9A8C\u8BC1\u6A21\u5F0F - \u5DF2\u79FB\u9664\uFF0C\u672A\u4F7F\u7528\n\n// \u5206\u6790\u4E8B\u4EF6\u9A8C\u8BC1\u6A21\u5F0F\nconst analyticsEventSchema = z.object({\n  eventType: z.string().min(1, \"Event type is required\"),\n  data: z.any().optional(),\n  sessionId: z.string().uuid(\"Invalid session ID format\").optional(),\n  timestamp: z.string().optional(),\n});\n\n// \u535A\u5BA2\u6587\u7AE0\u9A8C\u8BC1\u6A21\u5F0F\nconst blogArticleSchema = z.object({\n  title: z.string().min(1, \"Title is required\").max(200, \"Title too long\"),\n  content: z.string().min(1, \"Content is required\"),\n  excerpt: z.string().max(300, \"Excerpt too long\").optional(),\n  category: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n});\n\n/**\n * \u901A\u7528\u9A8C\u8BC1\u51FD\u6570 - \u5DF2\u79FB\u9664\uFF0C\u672A\u4F7F\u7528\n */\n\n/**\n * \u5206\u9875\u53C2\u6570\u9A8C\u8BC1\n */\nexport function validatePagination(page: number, limit: number, maxLimit: number = 100): void {\n  if (isNaN(page) || page < 1) {\n    throw new ModuleError(\n      \"Invalid page number\",\n      ERROR_CODES.VALIDATION_ERROR,\n      400\n    );\n  }\n  \n  if (isNaN(limit) || limit < 1 || limit > maxLimit) {\n    throw new ModuleError(\n      `Invalid limit (must be between 1 and ${maxLimit})`,\n      ERROR_CODES.VALIDATION_ERROR,\n      400\n    );\n  }\n}\n\nexport const validateTestSubmission = async (c: Context<AppContext>, next: Next) => {\n  try {\n    const body = await c.req.json();\n    testSubmissionSchema.parse(body);\n    return next();\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      throw new ModuleError(\n        \"Invalid test submission data\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400,\n        error.errors\n      );\n    }\n    throw error;\n  }\n};\n\nexport const validateFeedback = async (c: Context<AppContext>, next: Next) => {\n  console.log(\"validateFeedback middleware called\");\n  \n  try {\n    // \u5C1D\u8BD5\u89E3\u6790JSON\n    const body = await c.req.json();\n    \n    // \u57FA\u672C\u9A8C\u8BC1\uFF1A\u68C0\u67E5\u5FC5\u8981\u5B57\u6BB5\n    if (!body || typeof body !== 'object') {\n      throw new ModuleError(\n        \"Invalid request body format\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      );\n    }\n    \n    if (!body.feedback || !['like', 'dislike'].includes(body.feedback)) {\n      throw new ModuleError(\n        \"Feedback must be 'like' or 'dislike'\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      );\n    }\n    \n    await next();\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    \n    // JSON\u89E3\u6790\u9519\u8BEF\n    throw new ModuleError(\n      \"Invalid JSON format\",\n      ERROR_CODES.VALIDATION_ERROR,\n      400\n    );\n  }\n};\n\nexport const validateAnalyticsEvent = async (c: Context<AppContext>, next: Next) => {\n  try {\n    const body = await c.req.json();\n    analyticsEventSchema.parse(body);\n    await next();\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      throw new ModuleError(\n        \"Invalid analytics event data\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400,\n        error.errors\n      );\n    }\n    throw error;\n  }\n};\n\nexport const validateBlogArticle = async (c: Context<AppContext>, next: Next) => {\n  try {\n    const body = await c.req.json();\n    blogArticleSchema.parse(body);\n    return next();\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      throw new ModuleError(\n        \"Invalid blog article data\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400,\n        error.errors\n      );\n    }\n    throw error;\n  }\n};", "/**\n * \u901F\u7387\u9650\u5236\u4E2D\u95F4\u4EF6\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u5B89\u5168\u89C4\u8303\n */\n\nimport type { Context, Next } from \"hono\";\nimport type { Env } from \"../index\";\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\n\nexport const rateLimiter = (requests: number, windowMs: number) => {\n  return async (c: Context<{ Bindings: Env }>, next: Next) => {\n    const ip = c.req.header(\"CF-Connecting-IP\") || \n               c.req.header(\"X-Forwarded-IP\") || \n               \"unknown\";\n    \n    const key = `rate_limit:${ip}`;\n    const windowSeconds = Math.floor(windowMs / 1000);\n\n    try {\n      // \u68C0\u67E5KV\u662F\u5426\u53EF\u7528\n      if (!c.env.KV) {\n        console.warn(\"KV not available, skipping rate limiting\");\n        return next();\n      }\n\n      const current = await c.env.KV.get(key);\n      const count = current ? parseInt(current) : 0;\n\n      if (count >= requests) {\n        throw new ModuleError(\n          \"Too many requests, please try again later\",\n          ERROR_CODES.RATE_LIMITED,\n          429\n        );\n      }\n\n      // \u589E\u52A0\u8BA1\u6570\u5668\n      await c.env.KV.put(key, (count + 1).toString(), {\n        expirationTtl: windowSeconds,\n      });\n\n      await next();\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      \n      // KV\u5B58\u50A8\u5931\u8D25\u65F6\u8BB0\u5F55\u65E5\u5FD7\u4F46\u4E0D\u963B\u585E\u8BF7\u6C42\n      console.warn(\"Rate limiter KV operation failed:\", error);\n      await next();\n    }\n  };\n};", "/**\n * \u6D4B\u8BD5\u5F15\u64CE\u6A21\u5757\u7D22\u5F15\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6A21\u5757\u5BFC\u51FA\u89C4\u8303\n */\n\nimport { BaseTestEngine, TestConfig, TestSession, TestProcessOptions } from './BaseTestEngine';\nimport { DatabaseService } from '../DatabaseService';\nimport { CacheService } from '../CacheService';\nimport { ModuleError, ERROR_CODES } from '../../../../shared/types/errors';\n\n// \u6D4B\u8BD5\u7C7B\u578B\u679A\u4E3E\nexport enum TestTypes {\n  MBTI = 'mbti',\n  TAROT = 'tarot',\n  ASTROLOGY = 'astrology',\n  PSYCHOLOGY = 'psychology',\n  CAREER = 'career',\n  LEARNING = 'learning',\n  RELATIONSHIP = 'relationship',\n  NUMEROLOGY = 'numerology',\n}\n\n/**\n * \u7EDF\u4E00\u6D4B\u8BD5\u5F15\u64CE\u670D\u52A1\u7C7B\n * \u63D0\u4F9B\u5BF9\u6240\u6709\u6D4B\u8BD5\u7C7B\u578B\u7684\u7EDF\u4E00\u8BBF\u95EE\u63A5\u53E3\n */\nexport class TestEngineService {\n  private dbService: DatabaseService;\n  private cacheService: CacheService;\n\n  /**\n   * \u6784\u9020\u51FD\u6570\n   * @param dbService \u6570\u636E\u5E93\u670D\u52A1\n   * @param cacheService \u7F13\u5B58\u670D\u52A1\n   */\n  constructor(dbService: DatabaseService, cacheService: CacheService) {\n    this.dbService = dbService;\n    this.cacheService = cacheService;\n  }\n\n  async getTestTypes(activeOnly: boolean = true): Promise<any[]> {\n    try {\n      const testTypes = await this.dbService.testTypes.getAllActive();\n      const filteredTypes = activeOnly \n        ? testTypes.filter((type: any) => type.isActive) \n        : testTypes;\n      return filteredTypes.map((type: any) => ({\n        id: type.id,\n        name: type.name || '',\n        description: type.description || '',\n        category: type.category || '',\n        configData: type.configData,\n        isActive: type.isActive || false\n      }));\n    } catch (error) {\n      throw new ModuleError(\n        \"Failed to retrieve test types\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n\n  async getTestConfig(testType: string): Promise<any> {\n    try {\n      const config = await this.dbService.testTypes.findById(testType);\n      if (!config) {\n        throw new ModuleError(\n          `Test type '${testType}' not found`,\n          ERROR_CODES.TEST_NOT_FOUND,\n          404\n        );\n      }\n      return {\n        id: config.id,\n        name: config.name || '',\n        description: config.description || '',\n        category: config.category || '',\n        configData: config.configData,\n        isActive: config.isActive || false\n      };\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        `Failed to retrieve test configuration for: ${testType}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6D4B\u8BD5\u7ED3\u679C\n   * @param sessionId \u4F1A\u8BDDID\n   * @returns \u6D4B\u8BD5\u7ED3\u679C\n   */\n  async getTestResult(sessionId: string): Promise<any> {\n    try {\n      // \u4ECE\u7F13\u5B58\u83B7\u53D6\n      const cacheKey = `test_result:${sessionId}`;\n      const cachedResult = await this.cacheService.get(cacheKey);\n      \n      if (cachedResult) {\n        return cachedResult;\n      }\n\n      // \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\n      const session = await this.dbService.testSessions.findById(sessionId);\n      \n      if (!session) {\n        throw new ModuleError(\n          `Test session '${sessionId}' not found`,\n          ERROR_CODES.TEST_NOT_FOUND,\n          404\n        );\n      }\n\n      // \u89E3\u6790\u7ED3\u679C\u6570\u636E\n      const resultData = typeof session.resultData === 'string'\n        ? JSON.parse(session.resultData)\n        : (session.resultData || {});\n      \n      // \u683C\u5F0F\u5316\u7ED3\u679C\n      const result = {\n        sessionId: session.id,\n        testType: session.testTypeId,\n        scores: resultData.scores || {},\n        interpretation: resultData.interpretation || \"\",\n        recommendations: resultData.recommendations || [],\n        completedAt: typeof session.createdAt === 'string'\n          ? session.createdAt\n          : new Date().toISOString(),\n      };\n\n      // \u5B58\u5165\u7F13\u5B58\n      await this.cacheService.set(cacheKey, result, { ttl: 86400 }); // \u7F13\u5B5824\u5C0F\u65F6\n      \n      return result;\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        `Failed to retrieve result for session: ${sessionId}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n\n  /**\n   * \u4FDD\u5B58\u6D4B\u8BD5\u4F1A\u8BDD\n   * @param sessionData \u4F1A\u8BDD\u6570\u636E\n   * @returns \u4F1A\u8BDDID\n   */\n  async saveTestSession(sessionData: {\n    testTypeId: string;\n    answersData: any[];\n    resultData: any;\n    userAgent?: string | null;\n    ipAddressHash?: string;\n    sessionDuration?: number;\n  }): Promise<string> {\n    try {\n      const sessionDataToCreate: any = {\n        testTypeId: sessionData.testTypeId,\n        answers: sessionData.answersData,\n        result: sessionData.resultData,\n        sessionDuration: sessionData.sessionDuration || 0\n      };\n\n      if (sessionData.userAgent) {\n        sessionDataToCreate.userAgent = sessionData.userAgent;\n      }\n      if (sessionData.ipAddressHash) {\n        sessionDataToCreate.ipAddress = sessionData.ipAddressHash;\n      }\n\n      return await this.dbService.testSessions.create(sessionDataToCreate);\n    } catch (error) {\n      throw new ModuleError(\n        \"Failed to save test session\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n}\n\n// \u5BFC\u51FA\u6D4B\u8BD5\u5F15\u64CE\u63A5\u53E3\u548C\u57FA\u7C7B\nexport { BaseTestEngine, TestConfig, TestSession, TestProcessOptions }; ", "/**\n * \u6D4B\u8BD5\u76F8\u5173\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport type { Context } from \"hono\";\nimport type { AppContext } from \"../../types/env\";\nimport { validateTestSubmission } from \"../../middleware/validation\";\nimport { rateLimiter } from \"../../middleware/rateLimiter\";\nimport { ValidationService } from \"../../services/ValidationService\";\nimport { TestEngineService } from \"../../services/testEngine\";\nimport type { APIResponse, TestResult, TestSubmission } from \"../../../../shared/types/apiResponse\";\nimport { ModuleError, ERROR_CODES } from \"../../../../shared/types/errors\";\n\nconst testRoutes = new Hono<AppContext>();\n\n// \u83B7\u53D6\u6D4B\u8BD5\u7C7B\u578B\u5217\u8868\ntestRoutes.get(\"/\", async (c: Context<AppContext>) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const cacheService = c.get(\"cacheService\");\n    const testEngineService = new TestEngineService(dbService, cacheService);\n\n    const testTypes = await testEngineService.getTestTypes(true);\n    \n    const response: APIResponse = {\n      success: true,\n      data: testTypes,\n      message: \"Test types retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve test types\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7279\u5B9A\u6D4B\u8BD5\u7684\u914D\u7F6E\u4FE1\u606F\ntestRoutes.get(\"/:testType\", async (c: Context<AppContext>) => {\n  const testType = c.req.param(\"testType\");\n\n  try {\n    ValidationService.sanitizeString(testType, 50);\n    \n    const dbService = c.get(\"dbService\");\n    const cacheService = c.get(\"cacheService\");\n    const testEngineService = new TestEngineService(dbService, cacheService);\n    \n    const testConfig = await testEngineService.getTestConfig(testType);\n\n    const response: APIResponse = {\n      success: true,\n      data: testConfig,\n      message: `Test configuration for ${testType} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve test configuration for: ${testType}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7279\u5B9A\u6D4B\u8BD5\u7684\u9898\u76EE\uFF08\u8FD9\u91CC\u8FD4\u56DE\u914D\u7F6E\uFF0C\u5B9E\u9645\u9898\u76EE\u7531\u524D\u7AEF\u751F\u6210\u6216\u4ECE\u914D\u7F6E\u4E2D\u83B7\u53D6\uFF09\ntestRoutes.get(\"/:testType/questions\", async (c: Context<AppContext>) => {\n  const testType = c.req.param(\"testType\");\n\n  try {\n    ValidationService.sanitizeString(testType, 50);\n    \n    const dbService = c.get(\"dbService\");\n    const cacheService = c.get(\"cacheService\");\n    const testEngineService = new TestEngineService(dbService, cacheService);\n    \n    const testConfig = await testEngineService.getTestConfig(testType);\n    \n    // \u89E3\u6790\u914D\u7F6E\u6570\u636E\n    const configData = typeof testConfig.configData === 'string' \n      ? JSON.parse(testConfig.configData) \n      : testConfig.configData;\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        testType: testConfig.id,\n        name: testConfig.name,\n        description: testConfig.description,\n        category: testConfig.category,\n        questionCount: configData.questionCount || 20,\n        timeLimit: configData.timeLimit || 1800,\n        instructions: configData.instructions || \"\u8BF7\u6839\u636E\u5B9E\u9645\u60C5\u51B5\u9009\u62E9\u6700\u7B26\u5408\u7684\u7B54\u6848\",\n        // \u5B9E\u9645\u7684\u9898\u76EE\u5185\u5BB9\u53EF\u80FD\u9700\u8981\u4ECE\u5176\u4ED6\u5730\u65B9\u83B7\u53D6\u6216\u52A8\u6001\u751F\u6210\n      },\n      message: `Questions configuration for ${testType} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve questions for test type: ${testType}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u63D0\u4EA4\u6D4B\u8BD5\u7B54\u6848\ntestRoutes.post(\"/submit\", \n  rateLimiter(10, 60000), // \u6BCF\u5206\u949F\u6700\u591A10\u6B21\u63D0\u4EA4\n  validateTestSubmission,\n  async (c: Context<AppContext>) => {\n    try {\n      const submission: TestSubmission = await c.req.json();\n      const dbService = c.get(\"dbService\");\n      const cacheService = c.get(\"cacheService\");\n      const testEngineService = new TestEngineService(dbService, cacheService);\n      \n      // \u9A8C\u8BC1\u6D4B\u8BD5\u7C7B\u578B\u662F\u5426\u5B58\u5728\n      await testEngineService.getTestConfig(submission.testType);\n\n      // \u54C8\u5E0CIP\u5730\u5740\n      const ipHash = await hashIP(c.req.header(\"CF-Connecting-IP\") || \"unknown\");\n\n      // \u521B\u5EFA\u6D4B\u8BD5\u4F1A\u8BDD\n      const sessionId = await testEngineService.saveTestSession({\n        testTypeId: submission.testType,\n        answersData: submission.answers,\n        resultData: {}, // \u6682\u65F6\u4E3A\u7A7A\uFF0C\u540E\u7EED\u8BA1\u7B97\u7ED3\u679C\u540E\u66F4\u65B0\n        userAgent: submission.userInfo?.userAgent || null,\n        ipAddressHash: ipHash,\n        sessionDuration: 0, // \u6682\u65F6\u4E3A0\uFF0C\u5B9E\u9645\u5E94\u8BE5\u8BA1\u7B97\n      });\n\n      // \u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u76F8\u5E94\u7684\u6D4B\u8BD5\u5F15\u64CE\u8BA1\u7B97\u7ED3\u679C\n      // \u6682\u65F6\u8FD4\u56DE\u57FA\u672C\u7ED3\u679C\u7ED3\u6784\n      const result: TestResult = {\n        sessionId,\n        testType: submission.testType,\n        scores: {},\n        interpretation: \"\u6D4B\u8BD5\u7ED3\u679C\u6B63\u5728\u8BA1\u7B97\u4E2D...\",\n        recommendations: [],\n        completedAt: new Date().toISOString(),\n      };\n\n      const response: APIResponse<TestResult> = {\n        success: true,\n        data: result,\n        message: \"Test submitted successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        \"Failed to process test submission\",\n        ERROR_CODES.CALCULATION_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u83B7\u53D6\u6D4B\u8BD5\u7ED3\u679C\ntestRoutes.get(\"/results/:sessionId\", async (c: Context<AppContext>) => {\n  const sessionId = c.req.param(\"sessionId\");\n\n  try {\n    ValidationService.validateUUID(sessionId);\n    \n    const dbService = c.get(\"dbService\");\n    const cacheService = c.get(\"cacheService\");\n    const testEngineService = new TestEngineService(dbService, cacheService);\n    \n    const result = await testEngineService.getTestResult(sessionId);\n\n    const response: APIResponse = {\n      success: true,\n      data: result,\n      message: `Result for session ${sessionId} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve result for session: ${sessionId}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u6D4B\u8BD5\u7EDF\u8BA1\u4FE1\u606F\ntestRoutes.get(\"/stats/:testType\", async (c: Context<AppContext>) => {\n  const testType = c.req.param(\"testType\");\n\n  try {\n    ValidationService.sanitizeString(testType, 50);\n    \n    const dbService = c.get(\"dbService\");\n    \n    // \u83B7\u53D6\u57FA\u672C\u7EDF\u8BA1\n    const totalSessions = await dbService.testSessions.count({ testTypeId: testType });\n    \n    // \u83B7\u53D6\u6700\u8FD1\u6D3B\u52A8\n    const recentSessions = await dbService.testSessions.findRecent(testType, 10);\n    \n    const response: APIResponse = {\n      success: true,\n      data: {\n        testType,\n        totalSessions,\n        recentActivity: recentSessions.length,\n        lastActivity: recentSessions[0]?.createdAt || null,\n      },\n      message: `Statistics for ${testType} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve statistics for test type: ${testType}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u54C8\u5E0CIP\u5730\u5740\nasync function hashIP(ip: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(ip);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nexport { testRoutes };", "/**\n * \u535A\u5BA2\u76F8\u5173\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport type { AppContext } from \"../../types/env\";\nimport { rateLimiter } from \"../../middleware/rateLimiter\";\nimport type { APIResponse, PaginatedResponse } from \"../../../../shared/types/apiResponse\";\nimport { ModuleError, ERROR_CODES } from \"../../../../shared/types/errors\";\n\nconst blogRoutes = new Hono<AppContext>();\n\n// \u83B7\u53D6\u535A\u5BA2\u6587\u7AE0\u5217\u8868\uFF08\u5206\u9875\uFF09\nblogRoutes.get(\"/articles\", async (c) => {\n  const page = parseInt(c.req.query(\"page\") || \"1\");\n  const limit = parseInt(c.req.query(\"limit\") || \"10\");\n\n  try {\n    // TODO: \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u535A\u5BA2\u6587\u7AE0\u5217\u8868\n    const response: PaginatedResponse = {\n      success: true,\n      data: [],\n      pagination: {\n        page,\n        limit,\n        total: 0,\n        totalPages: 0,\n        hasNext: false,\n        hasPrev: false,\n      },\n      message: \"Blog articles retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    };\n\n    return c.json(response);\n  } catch (error) {\n    throw new ModuleError(\n      \"Failed to retrieve blog articles\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u5355\u7BC7\u535A\u5BA2\u6587\u7AE0\nblogRoutes.get(\"/articles/:id\", async (c) => {\n  const id = c.req.param(\"id\");\n\n  try {\n    // TODO: \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u535A\u5BA2\u6587\u7AE0\u8BE6\u60C5\n    const response: APIResponse = {\n      success: true,\n      data: null,\n      message: `Blog article ${id} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    };\n\n    return c.json(response);\n  } catch (error) {\n    throw new ModuleError(\n      `Failed to retrieve blog article: ${id}`,\n      ERROR_CODES.DATABASE_ERROR,\n      404\n    );\n  }\n});\n\n// \u589E\u52A0\u6587\u7AE0\u6D4F\u89C8\u91CF\nblogRoutes.post(\"/articles/:id/view\", \n  rateLimiter(30, 60000), // \u6BCF\u5206\u949F\u6700\u591A30\u6B21\u6D4F\u89C8\u8BB0\u5F55\n  async (c) => {\n    const id = c.req.param(\"id\");\n\n    try {\n      // TODO: \u66F4\u65B0\u6587\u7AE0\u6D4F\u89C8\u91CF\n      const response: APIResponse = {\n        success: true,\n        message: `View count updated for article ${id}`,\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\") || \"\",\n      };\n\n      return c.json(response);\n    } catch (error) {\n      throw new ModuleError(\n        `Failed to update view count for article: ${id}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\nexport { blogRoutes };", "/**\n * \u5185\u5BB9\u8FC7\u6EE4\u670D\u52A1\n * \u63D0\u4F9B\u5185\u5BB9\u5BA1\u6838\u548C\u8FC7\u6EE4\u529F\u80FD\n */\n\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\n\n// \u654F\u611F\u8BCD\u7C7B\u522B\nexport enum ContentFilterCategory {\n  PROFANITY = 'profanity',\n  HATE_SPEECH = 'hate_speech',\n  PERSONAL_INFO = 'personal_info',\n  SPAM = 'spam',\n  ADULT = 'adult',\n}\n\n// \u8FC7\u6EE4\u7ED3\u679C\nexport interface ContentFilterResult {\n  isClean: boolean;\n  detectedCategories: ContentFilterCategory[];\n  filteredContent?: string;\n  severity: 'low' | 'medium' | 'high';\n}\n\n/**\n * \u5185\u5BB9\u8FC7\u6EE4\u670D\u52A1\n * \u7528\u4E8E\u68C0\u6D4B\u548C\u8FC7\u6EE4\u7528\u6237\u63D0\u4EA4\u7684\u5185\u5BB9\u4E2D\u7684\u654F\u611F\u4FE1\u606F\n */\nexport class ContentFilterService {\n  // \u654F\u611F\u8BCD\u5E93 - \u5B9E\u9645\u9879\u76EE\u4E2D\u5E94\u8BE5\u4ECE\u6570\u636E\u5E93\u6216\u914D\u7F6E\u6587\u4EF6\u52A0\u8F7D\n  private static sensitivePatterns: Record<ContentFilterCategory, RegExp[]> = {\n    [ContentFilterCategory.PROFANITY]: [\n      /\\b(bad-word-1|bad-word-2)\\b/i,\n    ],\n    [ContentFilterCategory.HATE_SPEECH]: [\n      /\\b(hate-word-1|hate-word-2)\\b/i,\n    ],\n    [ContentFilterCategory.PERSONAL_INFO]: [\n      /\\b\\d{3}-\\d{2}-\\d{4}\\b/, // US SSN\n      /\\b\\d{16,19}\\b/, // Credit card\n      /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\\b/, // Email\n      /\\b(?:\\+\\d{1,3}[- ]?)?\\(?\\d{3}\\)?[- ]?\\d{3,5}[- ]?\\d{4}\\b/, // Phone\n    ],\n    [ContentFilterCategory.SPAM]: [\n      /\\b(buy now|click here|free money|limited time)\\b/i,\n    ],\n    [ContentFilterCategory.ADULT]: [\n      /\\b(adult-word-1|adult-word-2)\\b/i,\n    ],\n  };\n\n  /**\n   * \u68C0\u67E5\u5185\u5BB9\u662F\u5426\u5305\u542B\u654F\u611F\u4FE1\u606F\n   * @param content \u8981\u68C0\u67E5\u7684\u5185\u5BB9\n   * @param categories \u8981\u68C0\u67E5\u7684\u7C7B\u522B\uFF08\u9ED8\u8BA4\u5168\u90E8\uFF09\n   * @returns \u8FC7\u6EE4\u7ED3\u679C\n   */\n  public static checkContent(\n    content: string,\n    categories?: ContentFilterCategory[]\n  ): ContentFilterResult {\n    if (!content) {\n      return {\n        isClean: true,\n        detectedCategories: [],\n        severity: 'low',\n      };\n    }\n\n    const categoriesToCheck = categories || Object.values(ContentFilterCategory);\n    const detectedCategories: ContentFilterCategory[] = [];\n\n    // \u68C0\u67E5\u6BCF\u4E2A\u7C7B\u522B\u7684\u654F\u611F\u8BCD\n    for (const category of categoriesToCheck) {\n      const patterns = this.sensitivePatterns[category] || [];\n      \n      for (const pattern of patterns) {\n        if (pattern.test(content)) {\n          detectedCategories.push(category);\n          break;\n        }\n      }\n    }\n\n    // \u786E\u5B9A\u4E25\u91CD\u7EA7\u522B\n    let severity: 'low' | 'medium' | 'high' = 'low';\n    if (detectedCategories.includes(ContentFilterCategory.HATE_SPEECH) || \n        detectedCategories.includes(ContentFilterCategory.ADULT)) {\n      severity = 'high';\n    } else if (detectedCategories.length > 1 || \n              detectedCategories.includes(ContentFilterCategory.PERSONAL_INFO)) {\n      severity = 'medium';\n    }\n\n    return {\n      isClean: detectedCategories.length === 0,\n      detectedCategories,\n      severity,\n    };\n  }\n\n  /**\n   * \u8FC7\u6EE4\u5185\u5BB9\u4E2D\u7684\u654F\u611F\u4FE1\u606F\n   * @param content \u8981\u8FC7\u6EE4\u7684\u5185\u5BB9\n   * @param categories \u8981\u8FC7\u6EE4\u7684\u7C7B\u522B\uFF08\u9ED8\u8BA4\u5168\u90E8\uFF09\n   * @returns \u8FC7\u6EE4\u7ED3\u679C\uFF0C\u5305\u542B\u8FC7\u6EE4\u540E\u7684\u5185\u5BB9\n   */\n  public static filterContent(\n    content: string,\n    categories?: ContentFilterCategory[]\n  ): ContentFilterResult {\n    if (!content) {\n      return {\n        isClean: true,\n        detectedCategories: [],\n        filteredContent: '',\n        severity: 'low',\n      };\n    }\n\n    const categoriesToFilter = categories || Object.values(ContentFilterCategory);\n    const detectedCategories: ContentFilterCategory[] = [];\n    let filteredContent = content;\n\n    // \u8FC7\u6EE4\u6BCF\u4E2A\u7C7B\u522B\u7684\u654F\u611F\u8BCD\n    for (const category of categoriesToFilter) {\n      const patterns = this.sensitivePatterns[category] || [];\n      \n      for (const pattern of patterns) {\n        if (pattern.test(content)) {\n          detectedCategories.push(category);\n          filteredContent = filteredContent.replace(pattern, '***');\n        }\n      }\n    }\n\n    // \u786E\u5B9A\u4E25\u91CD\u7EA7\u522B\n    let severity: 'low' | 'medium' | 'high' = 'low';\n    if (detectedCategories.includes(ContentFilterCategory.HATE_SPEECH) || \n        detectedCategories.includes(ContentFilterCategory.ADULT)) {\n      severity = 'high';\n    } else if (detectedCategories.length > 1 || \n              detectedCategories.includes(ContentFilterCategory.PERSONAL_INFO)) {\n      severity = 'medium';\n    }\n\n    return {\n      isClean: detectedCategories.length === 0,\n      detectedCategories,\n      filteredContent,\n      severity,\n    };\n  }\n\n  /**\n   * \u68C0\u67E5\u5E76\u53EF\u80FD\u62D2\u7EDD\u654F\u611F\u5185\u5BB9\n   * @param content \u8981\u68C0\u67E5\u7684\u5185\u5BB9\n   * @param strictCategories \u4E25\u683C\u68C0\u67E5\u7684\u7C7B\u522B\uFF08\u53D1\u73B0\u4F1A\u88AB\u62D2\u7EDD\uFF09\n   * @param warnCategories \u8B66\u544A\u7C7B\u522B\uFF08\u53D1\u73B0\u4F1A\u6807\u8BB0\u4F46\u4E0D\u62D2\u7EDD\uFF09\n   * @throws \u5982\u679C\u5185\u5BB9\u4E2D\u5305\u542B\u4E25\u683C\u7C7B\u522B\u4E2D\u7684\u654F\u611F\u4FE1\u606F\uFF0C\u5219\u629B\u51FA\u9519\u8BEF\n   * @returns \u8FC7\u6EE4\u7ED3\u679C\uFF0C\u5982\u679C\u6CA1\u6709\u88AB\u62D2\u7EDD\n   */\n  public static validateContent(\n    content: string,\n    strictCategories: ContentFilterCategory[] = [\n      ContentFilterCategory.HATE_SPEECH,\n      ContentFilterCategory.ADULT,\n    ],\n    warnCategories: ContentFilterCategory[] = [\n      ContentFilterCategory.PROFANITY,\n      ContentFilterCategory.PERSONAL_INFO,\n      ContentFilterCategory.SPAM,\n    ]\n  ): ContentFilterResult {\n    // \u68C0\u67E5\u4E25\u683C\u7C7B\u522B\n    const strictResult = this.checkContent(content, strictCategories);\n    if (!strictResult.isClean) {\n      throw new ModuleError(\n        \"Content contains inappropriate material\",\n        ERROR_CODES.VALIDATION_ERROR,\n        400,\n        {\n          categories: strictResult.detectedCategories,\n          severity: strictResult.severity,\n        }\n      );\n    }\n\n    // \u68C0\u67E5\u8B66\u544A\u7C7B\u522B\n    const warnResult = this.checkContent(content, warnCategories);\n    \n    // \u5982\u679C\u6709\u8B66\u544A\u7C7B\u522B\u7684\u654F\u611F\u8BCD\uFF0C\u8FDB\u884C\u8FC7\u6EE4\n    if (!warnResult.isClean) {\n      const filteredResult = this.filterContent(content, warnCategories);\n      return {\n        ...filteredResult,\n        detectedCategories: [\n          ...strictResult.detectedCategories,\n          ...filteredResult.detectedCategories,\n        ],\n      };\n    }\n\n    // \u5982\u679C\u6CA1\u6709\u654F\u611F\u5185\u5BB9\uFF0C\u8FD4\u56DE\u539F\u5185\u5BB9\n    return {\n      isClean: true,\n      detectedCategories: [],\n      filteredContent: content,\n      severity: 'low',\n    };\n  }\n} ", "/**\n * \u53CD\u9988\u76F8\u5173\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport type { Context } from \"hono\";\nimport type { AppContext } from \"../../types/env\";\nimport { validateFeedback } from \"../../middleware/validation\";\nimport { rateLimiter } from \"../../middleware/rateLimiter\";\nimport { ValidationService } from \"../../services/ValidationService\";\nimport { ContentFilterService, ContentFilterCategory } from \"../../services/ContentFilterService\";\nimport type { APIResponse, PaginatedResponse } from \"../../../../shared/types/apiResponse\";\nimport { ModuleError, ERROR_CODES } from \"../../../../shared/types/errors\";\n\nconst feedbackRoutes = new Hono<AppContext>();\n\n// \u63D0\u4EA4\u7528\u6237\u53CD\u9988\nfeedbackRoutes.post(\"/\", \n  rateLimiter(5, 60000), // \u6062\u590D\u901F\u7387\u9650\u5236\n  validateFeedback, // \u9A8C\u8BC1\u4E2D\u95F4\u4EF6\n  async (c: Context<AppContext>) => {\n    try {\n      const feedbackData = await c.req.json();\n      const dbService = c.get(\"dbService\");\n      \n      // \u9A8C\u8BC1\u4F1A\u8BDDID\u662F\u5426\u5B58\u5728\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\n      if (feedbackData.sessionId) {\n        const session = await dbService.testSessions.findById(feedbackData.sessionId);\n        if (!session) {\n          throw new ModuleError(\n            `Session ID '${feedbackData.sessionId}' not found`,\n            ERROR_CODES.VALIDATION_ERROR,\n            404\n          );\n        }\n      }\n\n      // \u5BF9\u8BC4\u8BBA\u5185\u5BB9\u8FDB\u884C\u8FC7\u6EE4\u68C0\u67E5\n      let filteredComment = feedbackData.comment;\n      let filterResult = null;\n      \n      if (feedbackData.comment) {\n        // \u8FDB\u884C\u5185\u5BB9\u8FC7\u6EE4\n        filterResult = ContentFilterService.validateContent(\n          feedbackData.comment,\n          [ContentFilterCategory.HATE_SPEECH, ContentFilterCategory.ADULT], // \u4E25\u683C\u8FC7\u6EE4\u7C7B\u522B\n          [ContentFilterCategory.PROFANITY, ContentFilterCategory.SPAM]     // \u8B66\u544A\u8FC7\u6EE4\u7C7B\u522B\n        );\n        \n        // \u4F7F\u7528\u8FC7\u6EE4\u540E\u7684\u5185\u5BB9\n        filteredComment = filterResult.filteredContent;\n      }\n      \n      // \u4FDD\u5B58\u53CD\u9988\u5230\u6570\u636E\u5E93\n      const feedbackId = await dbService.userFeedback.create({\n        sessionId: feedbackData.sessionId,\n        feedbackType: feedbackData.feedback,\n        content: filteredComment,\n        rating: feedbackData.rating || (feedbackData.feedback === 'like' ? 5 : 1),\n      });\n\n      // \u8BB0\u5F55\u5206\u6790\u4E8B\u4EF6\n      await dbService.analyticsEvents.create({\n        eventType: 'feedback_submitted',\n        eventData: {\n          feedbackType: feedbackData.feedback,\n          hasComment: !!feedbackData.comment,\n          wasFiltered: filterResult && !filterResult.isClean,\n          sessionId: feedbackData.sessionId,\n        },\n        sessionId: feedbackData.sessionId,\n        ipAddress: c.req.header('CF-Connecting-IP') || \"\",\n        userAgent: c.req.header('User-Agent'),\n      });\n\n      const response: APIResponse = {\n        success: true,\n        data: {\n          feedbackId,\n          status: 'recorded',\n          contentFiltered: filterResult && !filterResult.isClean,\n        },\n        message: \"Feedback submitted successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        \"Failed to submit feedback\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\nfeedbackRoutes.get(\"/stats\", async (c: Context<AppContext>) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    \n    // \u83B7\u53D6\u65F6\u95F4\u8303\u56F4\u53C2\u6570\n    const range = c.req.query(\"range\"); // 7d, 30d, 90d, all\n    \n    let stats;\n    if (range && range !== 'all') {\n      // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\n      const endDate = new Date();\n      const startDate = new Date();\n      \n      if (range === '7d') {\n        startDate.setDate(startDate.getDate() - 7);\n      } else if (range === '30d') {\n        startDate.setDate(startDate.getDate() - 30);\n      } else if (range === '90d') {\n        startDate.setDate(startDate.getDate() - 90);\n      }\n      \n      stats = await dbService.userFeedback.getStatsByDateRange(\n        startDate.toISOString(),\n        endDate.toISOString()\n      );\n    } else {\n      // \u83B7\u53D6\u6240\u6709\u65F6\u95F4\u7684\u7EDF\u8BA1\n      stats = await dbService.userFeedback.getStats();\n    }\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        ...stats,\n        timeRange: range || 'all',\n        likeRatio: stats.totalFeedback > 0 \n          ? Math.round((stats.positiveCount / stats.totalFeedback) * 100) \n          : 0,\n      },\n      message: \"Feedback statistics retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve feedback statistics\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u8BC4\u8BBA\nfeedbackRoutes.get(\"/comments\", async (c: Context<AppContext>) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    \n    const limit = parseInt(c.req.query(\"limit\") || \"20\");\n    const page = parseInt(c.req.query(\"page\") || \"1\");\n    \n    // \u9A8C\u8BC1\u5206\u9875\u53C2\u6570\n    ValidationService.validatePagination({ page, limit: Math.min(limit, 50) });\n    \n    // \u83B7\u53D6\u8BC4\u8BBA\n    const comments = await dbService.userFeedback.getComments(limit);\n    \n    // \u83B7\u53D6\u603B\u8BC4\u8BBA\u6570\n    const stats = await dbService.userFeedback.getStats();\n    \n    const response: PaginatedResponse = {\n      success: true,\n      data: comments,\n      pagination: {\n        page,\n        limit,\n        total: stats.commentCount,\n        totalPages: Math.ceil(stats.commentCount / limit),\n        hasNext: page * limit < stats.commentCount,\n        hasPrev: page > 1,\n      },\n      message: \"Feedback comments retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve feedback comments\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7279\u5B9A\u4F1A\u8BDD\u7684\u53CD\u9988\nfeedbackRoutes.get(\"/session/:sessionId\", async (c: Context<AppContext>) => {\n  try {\n    const sessionId = c.req.param(\"sessionId\");\n    const dbService = c.get(\"dbService\");\n    \n    // \u9A8C\u8BC1\u4F1A\u8BDDID\n    ValidationService.validateUUID(sessionId);\n    \n    // \u83B7\u53D6\u4F1A\u8BDD\u53CD\u9988\n    const feedback = await dbService.userFeedback.findBySessionId(sessionId);\n    \n    const response: APIResponse = {\n      success: true,\n      data: feedback,\n      message: `Feedback for session ${sessionId} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve session feedback\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\nexport { feedbackRoutes };", "/**\n * \u5206\u6790\u7EDF\u8BA1\u76F8\u5173\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport type { Context } from \"hono\";\nimport type { AppContext } from \"../../types/env\";\nimport { rateLimiter } from \"../../middleware/rateLimiter\";\nimport { validateAnalyticsEvent } from \"../../middleware/validation\";\nimport { ValidationService } from \"../../services/ValidationService\";\nimport type { APIResponse } from \"../../../../shared/types/apiResponse\";\nimport { ModuleError, ERROR_CODES } from \"../../../../shared/types/errors\";\n\nconst analyticsRoutes = new Hono<AppContext>();\n\n// \u8BB0\u5F55\u5206\u6790\u4E8B\u4EF6\nanalyticsRoutes.post(\"/events\", \n  rateLimiter(100, 60000), // \u6062\u590D\u901F\u7387\u9650\u5236\n  validateAnalyticsEvent, // \u6062\u590D\u9A8C\u8BC1\n  async (c: Context<AppContext>) => {\n    try {\n      const eventData = await c.req.json();\n      const dbService = c.get(\"dbService\");\n      \n      // \u4FDD\u5B58\u5206\u6790\u4E8B\u4EF6\u5230\u6570\u636E\u5E93\n      const eventId = await dbService.analyticsEvents.create({\n        eventType: eventData.eventType,\n        eventData: eventData.data,\n        sessionId: eventData.sessionId,\n        ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n        userAgent: c.req.header(\"User-Agent\"),\n      });\n\n      const response: APIResponse = {\n        success: true,\n        data: {\n          eventId,\n          status: \"recorded\"\n        },\n        message: \"Analytics event recorded successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        \"Failed to record analytics event\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u6279\u91CF\u8BB0\u5F55\u5206\u6790\u4E8B\u4EF6\nanalyticsRoutes.post(\"/events/batch\", \n  rateLimiter(20, 60000), // \u6062\u590D\u901F\u7387\u9650\u5236\n  async (c: Context<AppContext>) => {\n    try {\n      const { events } = await c.req.json();\n      const dbService = c.get(\"dbService\");\n      \n      if (!Array.isArray(events) || events.length === 0) {\n        throw new ModuleError(\n          \"Invalid batch events data\",\n          ERROR_CODES.VALIDATION_ERROR,\n          400\n        );\n      }\n\n      // \u9A8C\u8BC1\u6BCF\u4E2A\u4E8B\u4EF6\u6570\u636E\n      events.forEach(event => {\n        if (!event.eventType) {\n          throw new ModuleError(\n            \"Each event must have an eventType\",\n            ERROR_CODES.VALIDATION_ERROR,\n            400\n          );\n        }\n      });\n\n      // \u51C6\u5907\u6279\u91CF\u4E8B\u4EF6\u6570\u636E\n      const ipAddress = c.req.header(\"CF-Connecting-IP\") || \"\";\n      const userAgent = c.req.header(\"User-Agent\") || \"\";\n      \n      const eventsToCreate = events.map((event: any) => ({\n        eventType: event.eventType,\n        eventData: event.data,\n        sessionId: event.sessionId,\n        ipAddress,\n        userAgent,\n      }));\n\n      // \u6279\u91CF\u4FDD\u5B58\u4E8B\u4EF6\n      const count = await dbService.analyticsEvents.createBatch(eventsToCreate);\n\n      const response: APIResponse = {\n        success: true,\n        data: {\n          eventCount: count,\n          status: \"recorded\"\n        },\n        message: \"Batch analytics events recorded successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error;\n      }\n      throw new ModuleError(\n        \"Failed to record batch analytics events\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u83B7\u53D6\u57FA\u7840\u7EDF\u8BA1\u6570\u636E\nanalyticsRoutes.get(\"/stats\", async (c: Context<AppContext>) => {\n  const timeRange = c.req.query(\"range\") || \"7d\"; // 7d, 30d, 90d, all\n  \n  try {\n    const dbService = c.get(\"dbService\");\n    \n    // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\n    let startDate: string | undefined;\n    let endDate: string | undefined;\n    \n    if (timeRange !== \"all\") {\n      endDate = new Date().toISOString();\n      const start = new Date();\n      \n      if (timeRange === \"7d\") {\n        start.setDate(start.getDate() - 7);\n      } else if (timeRange === \"30d\") {\n        start.setDate(start.getDate() - 30);\n      } else if (timeRange === \"90d\") {\n        start.setDate(start.getDate() - 90);\n      } else {\n        throw new ModuleError(\n          `Invalid time range: ${timeRange}`,\n          ERROR_CODES.VALIDATION_ERROR,\n          400\n        );\n      }\n      \n      startDate = start.toISOString();\n    }\n\n    // \u83B7\u53D6\u5206\u6790\u6982\u89C8\n    const overview = await dbService.analyticsEvents.getOverview(startDate, endDate);\n    \n    // \u83B7\u53D6\u6BCF\u65E5\u7EDF\u8BA1\u6570\u636E\n    const daysToFetch = timeRange === \"7d\" ? 7 : timeRange === \"30d\" ? 30 : 90;\n    const dailyStats = await dbService.analyticsEvents.getDailyStats(daysToFetch);\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        overview,\n        dailyStats,\n        timeRange,\n        generatedAt: new Date().toISOString(),\n      },\n      message: \"Analytics statistics retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve analytics statistics\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7279\u5B9A\u4E8B\u4EF6\u7C7B\u578B\u7684\u7EDF\u8BA1\nanalyticsRoutes.get(\"/stats/:eventType\", async (c: Context<AppContext>) => {\n  const eventType = c.req.param(\"eventType\");\n  const timeRange = c.req.query(\"range\") || \"30d\"; // 7d, 30d, 90d, all\n  \n  try {\n    const dbService = c.get(\"dbService\");\n    ValidationService.sanitizeString(eventType, 100);\n    \n    // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\n    let startDate: string | undefined;\n    let endDate: string | undefined;\n    \n    if (timeRange !== \"all\") {\n      endDate = new Date().toISOString();\n      const start = new Date();\n      \n      if (timeRange === \"7d\") {\n        start.setDate(start.getDate() - 7);\n      } else if (timeRange === \"30d\") {\n        start.setDate(start.getDate() - 30);\n      } else if (timeRange === \"90d\") {\n        start.setDate(start.getDate() - 90);\n      } else {\n        throw new ModuleError(\n          `Invalid time range: ${timeRange}`,\n          ERROR_CODES.VALIDATION_ERROR,\n          400\n        );\n      }\n      \n      startDate = start.toISOString();\n    }\n\n    // \u83B7\u53D6\u6BCF\u65E5\u7EDF\u8BA1\u6570\u636E\n    const daysToFetch = timeRange === \"7d\" ? 7 : timeRange === \"30d\" ? 30 : 90;\n    const dailyStats = await dbService.analyticsEvents.getDailyStats(daysToFetch, eventType);\n    \n    // \u83B7\u53D6\u6700\u8FD1\u7684\u4E8B\u4EF6\u6570\u636E\uFF08\u5206\u9875\uFF09\n    const limit = parseInt(c.req.query(\"limit\") || \"20\");\n    const recentEvents = await dbService.analyticsEvents.findByEventType(\n      eventType, \n      limit, \n      startDate, \n      endDate\n    );\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        eventType,\n        totalEvents: dailyStats.reduce((sum: number, day: any) => sum + day.count, 0),\n        dailyStats,\n        recentEvents,\n        timeRange,\n      },\n      message: `Statistics for event type '${eventType}' retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve statistics for event type: ${eventType}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u884C\u4E3A\u8DEF\u5F84\uFF08\u4F1A\u8BDD\u5206\u6790\uFF09\nanalyticsRoutes.get(\"/sessions/:sessionId\", async (c: Context<AppContext>) => {\n  const sessionId = c.req.param(\"sessionId\");\n  \n  try {\n    const dbService = c.get(\"dbService\");\n    ValidationService.validateUUID(sessionId);\n    \n    // \u83B7\u53D6\u4F1A\u8BDD\u7684\u6240\u6709\u4E8B\u4EF6\n    const events = await dbService.analyticsEvents.findBySessionId(sessionId);\n    \n    // \u83B7\u53D6\u4F1A\u8BDD\u4FE1\u606F\n    const session = await dbService.testSessions.findById(sessionId);\n    \n    if (!events.length) {\n      throw new ModuleError(\n        `No events found for session ID: ${sessionId}`,\n        ERROR_CODES.NOT_FOUND,\n        404\n      );\n    }\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        sessionId,\n        sessionData: session,\n        events,\n        eventCount: events.length,\n        firstEventTime: events[0].timestamp,\n        lastEventTime: events[events.length - 1].timestamp,\n      },\n      message: `User journey for session ${sessionId} retrieved successfully`,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      `Failed to retrieve user journey for session: ${sessionId}`,\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u83B7\u53D6\u70ED\u95E8\u6D4B\u8BD5\u7C7B\u578B\nanalyticsRoutes.get(\"/popular-tests\", async (c: Context<AppContext>) => {\n  const timeRange = c.req.query(\"range\") || \"30d\"; // 7d, 30d, 90d, all\n  \n  try {\n    const dbService = c.get(\"dbService\");\n    \n    // \u8BA1\u7B97\u65F6\u95F4\u8303\u56F4\n    let startDate: string | undefined;\n    let endDate: string | undefined;\n    \n    if (timeRange !== \"all\") {\n      endDate = new Date().toISOString();\n      const start = new Date();\n      \n      if (timeRange === \"7d\") {\n        start.setDate(start.getDate() - 7);\n      } else if (timeRange === \"30d\") {\n        start.setDate(start.getDate() - 30);\n      } else if (timeRange === \"90d\") {\n        start.setDate(start.getDate() - 90);\n      } else {\n        throw new ModuleError(\n          `Invalid time range: ${timeRange}`,\n          ERROR_CODES.VALIDATION_ERROR,\n          400\n        );\n      }\n      \n      startDate = start.toISOString();\n    }\n\n    // \u83B7\u53D6\u70ED\u95E8\u6D4B\u8BD5\u7C7B\u578B\uFF08\u5206\u6790test_started\u4E8B\u4EF6\uFF09\n    const popularTests = await dbService.analyticsEvents.getEventStats(\n      startDate,\n      endDate,\n      10\n    );\n    \n    // \u8FC7\u6EE4\u53EA\u4FDD\u7559\u6D4B\u8BD5\u5F00\u59CB\u4E8B\u4EF6\n    const testEvents = popularTests.filter((event: any) => \n      event.eventType.startsWith('test_started_')\n    );\n    \n    // \u83B7\u53D6\u70ED\u95E8\u6D4B\u8BD5\u7684\u8BE6\u60C5\n    const testTypesPromises = testEvents.map(async (event: any) => {\n      const testType = event.eventType.replace('test_started_', '');\n      try {\n        return await dbService.testTypes.findById(testType);\n      } catch (e) {\n        return null;\n      }\n    });\n    \n    const testTypes = (await Promise.all(testTypesPromises))\n      .filter(test => test !== null);\n\n    const response: APIResponse = {\n      success: true,\n      data: {\n        popularTests: testEvents.map((event: any, index: number) => ({\n          testType: event.eventType.replace('test_started_', ''),\n          count: event.count,\n          percentage: event.percentage,\n          name: testTypes[index]?.name || 'Unknown Test',\n          description: testTypes[index]?.description || '',\n        })),\n        timeRange,\n      },\n      message: \"Popular tests retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    if (error instanceof ModuleError) {\n      throw error;\n    }\n    throw new ModuleError(\n      \"Failed to retrieve popular tests\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\nexport { analyticsRoutes };", "/**\n * \u7CFB\u7EDF\u7BA1\u7406\u76F8\u5173\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport type { AppContext } from \"../../types/env\";\nimport { rateLimiter } from \"../../middleware/rateLimiter\";\nimport type { APIResponse } from \"../../../../shared/types/apiResponse\";\nimport { ModuleError, ERROR_CODES } from \"../../../../shared/types/errors\";\n\nconst systemRoutes = new Hono<AppContext>();\n\n// \u7CFB\u7EDF\u6574\u4F53\u5065\u5EB7\u68C0\u67E5\nsystemRoutes.get(\"/health\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const healthCheck = await dbService.healthCheck();\n    \n    const response: APIResponse = {\n      success: true,\n      data: {\n        status: healthCheck.status,\n        timestamp: new Date().toISOString(),\n        environment: c.env?.['ENVIRONMENT'],\n        version: \"1.0.0\",\n        services: {\n          database: healthCheck.status,\n          cache: \"healthy\", // \u7B80\u5316\u7248\u672C\n          storage: \"healthy\", // \u7B80\u5316\u7248\u672C\n        },\n      },\n      message: \"System health check completed\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response, healthCheck.status === \"healthy\" ? 200 : 503);\n  } catch (error) {\n    throw new ModuleError(\n      \"System health check failed\",\n      ERROR_CODES.DATABASE_ERROR,\n      503\n    );\n  }\n});\n\n// \u6570\u636E\u5E93\u5065\u5EB7\u68C0\u67E5\nsystemRoutes.get(\"/health/database\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const healthCheck = await dbService.healthCheck();\n    \n    const response: APIResponse = {\n      success: true,\n      data: healthCheck,\n      message: \"Database health check completed\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response, healthCheck.status === \"healthy\" ? 200 : 503);\n  } catch (error) {\n    throw new ModuleError(\n      \"Database health check failed\",\n      ERROR_CODES.DATABASE_ERROR,\n      503\n    );\n  }\n});\n\n// \u7CFB\u7EDF\u7EDF\u8BA1\u4FE1\u606F\nsystemRoutes.get(\"/stats\", \n  rateLimiter(10, 60000), // \u6BCF\u5206\u949F\u6700\u591A10\u6B21\u8BF7\u6C42\n  async (c) => {\n    try {\n      const dbService = c.get(\"dbService\");\n      const stats = await dbService.getStatistics();\n      \n      const response: APIResponse = {\n        success: true,\n        data: stats,\n        message: \"System statistics retrieved successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      throw new ModuleError(\n        \"Failed to retrieve system statistics\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u6570\u636E\u5E93\u8FC1\u79FB\u72B6\u6001\nsystemRoutes.get(\"/migrations\", async (c) => {\n  try {\n    // const dbService = c.get(\"dbService\"); // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n    // \u8FD9\u91CC\u5E94\u8BE5\u8C03\u7528\u8FC1\u79FB\u670D\u52A1\u83B7\u53D6\u72B6\u6001\n    // \u7B80\u5316\u7248\u672C\uFF0C\u8FD4\u56DE\u57FA\u672C\u4FE1\u606F\n    \n    const response: APIResponse = {\n      success: true,\n      data: {\n        status: \"up_to_date\",\n        lastMigration: \"005_module_indexes\",\n        pendingMigrations: [],\n      },\n      message: \"Migration status retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    throw new ModuleError(\n      \"Failed to retrieve migration status\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u7F13\u5B58\u5065\u5EB7\u68C0\u67E5\nsystemRoutes.get(\"/health/cache\", async (c) => {\n  try {\n    // \u7B80\u5355\u7684KV\u5065\u5EB7\u68C0\u67E5\n    if (!c.env) {\n      return c.json({ \n        success: false, \n        error: '\u73AF\u5883\u914D\u7F6E\u4E0D\u53EF\u7528' \n      }, 500);\n    }\n\n    const testKey = \"health_check_cache\";\n    const testValue = { timestamp: Date.now() };\n    \n    await c.env['KV'].put(testKey, JSON.stringify(testValue), { expirationTtl: 60 });\n    const retrieved = await c.env['KV'].get(testKey);\n    await c.env['KV'].delete(testKey);\n    \n    const isHealthy = retrieved !== null;\n    \n    const response: APIResponse = {\n      success: true,\n      data: {\n        status: isHealthy ? \"healthy\" : \"unhealthy\",\n        latency: 0, // \u7B80\u5316\u7248\u672C\n        details: {\n          connection: isHealthy,\n          readWrite: isHealthy,\n        },\n      },\n      message: \"Cache health check completed\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response, isHealthy ? 200 : 503);\n  } catch (error) {\n    const response: APIResponse = {\n      success: false,\n      error: \"Cache health check failed\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n    \n    return c.json(response, 503);\n  }\n});\n\n// \u7CFB\u7EDF\u914D\u7F6E\u4FE1\u606F\nsystemRoutes.get(\"/config\", async (c) => {\n  try {\n    const response: APIResponse = {\n      success: true,\n      data: {\n        environment: c.env?.['ENVIRONMENT'],\n        version: \"1.0.0\",\n        features: {\n          analytics: true,\n          feedback: true,\n          caching: true,\n          rateLimiting: true,\n        },\n        limits: {\n          maxRequestSize: \"10MB\",\n          rateLimitRequests: 100,\n          rateLimitWindow: \"1 hour\",\n          cacheDefaultTTL: \"1 hour\",\n        },\n      },\n      message: \"System configuration retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    throw new ModuleError(\n      \"Failed to retrieve system configuration\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\n// \u6E05\u7406\u8FC7\u671F\u6570\u636E\uFF08\u7BA1\u7406\u5458\u529F\u80FD\uFF09\nsystemRoutes.post(\"/cleanup\", \n  rateLimiter(1, 3600000), // \u6BCF\u5C0F\u65F6\u6700\u591A1\u6B21\n  async (c) => {\n    try {\n      const dbService = c.get(\"dbService\");\n      const result = await dbService.cleanupExpiredData();\n      \n      const response: APIResponse = {\n        success: true,\n        data: result,\n        message: \"Data cleanup completed successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      throw new ModuleError(\n        \"Failed to cleanup expired data\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u521B\u5EFA\u6570\u636E\u5E93\u5907\u4EFD\uFF08\u7BA1\u7406\u5458\u529F\u80FD\uFF09\nsystemRoutes.post(\"/backup\", \n  rateLimiter(1, 3600000), // \u6BCF\u5C0F\u65F6\u6700\u591A1\u6B21\n  async (c) => {\n    try {\n      const dbService = c.get(\"dbService\");\n      const backup = await dbService.createBackup();\n      \n      const response: APIResponse = {\n        success: true,\n        data: backup,\n        message: \"Database backup created successfully\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      };\n\n      return c.json(response);\n    } catch (error) {\n      throw new ModuleError(\n        \"Failed to create database backup\",\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      );\n    }\n  }\n);\n\n// \u7CFB\u7EDF\u4FE1\u606F\u6982\u89C8\nsystemRoutes.get(\"/info\", async (c) => {\n  try {\n    const response: APIResponse = {\n      success: true,\n      data: {\n        name: \"\u7EFC\u5408\u6D4B\u8BD5\u5E73\u53F0 API\",\n        version: \"1.0.0\",\n        description: \"\u4E13\u4E1A\u7684\u5FC3\u7406\u6D4B\u8BD5\u3001\u5360\u661F\u5206\u6790\u3001\u5854\u7F57\u5360\u535C\u7B49\u5728\u7EBF\u6D4B\u8BD5\u670D\u52A1\",\n        uptime: \"N/A\", // Cloudflare Workers\u4E0D\u652F\u6301process.uptime\n        timestamp: new Date().toISOString(),\n        environment: c.env?.['ENVIRONMENT'],\n        runtime: \"Cloudflare Workers\",\n        framework: \"Hono.js\",\n        database: \"Cloudflare D1\",\n        cache: \"Cloudflare KV\",\n        storage: \"Cloudflare R2\",\n      },\n      message: \"System information retrieved successfully\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    };\n\n    return c.json(response);\n  } catch (error) {\n    throw new ModuleError(\n      \"Failed to retrieve system information\",\n      ERROR_CODES.DATABASE_ERROR,\n      500\n    );\n  }\n});\n\nexport { systemRoutes };", "/**\n * \u57FA\u7840\u6570\u636E\u6A21\u578B\u7C7B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u8BBF\u95EE\u5C42\u89C4\u8303\n */\n\nimport type { Env } from '../index'\nimport { ModuleError, ERROR_CODES } from '../../../shared/types/errors'\n// \u672C\u5730\u5B9E\u73B0\u901A\u7528\u5DE5\u5177\uFF0C\u907F\u514D\u5BF9shared/utils\u76F4\u63A5\u7F16\u8BD1\u4F9D\u8D56\n\nexport abstract class BaseModel {\n  protected db: D1Database\n  protected kv: KVNamespace\n  protected tableName: string\n\n  constructor(env: Env, tableName: string) {\n    if (!env.DB) {\n      throw new ModuleError('Database connection not available', ERROR_CODES.DATABASE_ERROR, 500)\n    }\n    \n    this.db = env.DB\n    this.kv = env.KV || null as any // \u5141\u8BB8 KV \u4E3A null\n    this.tableName = tableName\n  }\n\n  /**\n   * \u83B7\u53D6\u6570\u636E\u5E93\u8FDE\u63A5\n   */\n  protected get database(): D1Database {\n    return this.db;\n  }\n\n  /**\n   * \u6267\u884C\u6570\u636E\u5E93\u67E5\u8BE2\n   */\n  protected async executeQuery<T = any>(\n    query: string,\n    params: any[] = []\n  ): Promise<T[]> {\n    try {\n      const stmt = this.db.prepare(query)\n      const result = params.length > 0 \n        ? await stmt.bind(...params).all()\n        : await stmt.all()\n\n      if (!result.success) {\n        throw new ModuleError(\n          `Database query failed: ${result.error}`,\n          ERROR_CODES.DATABASE_ERROR,\n          500\n        )\n      }\n\n      return result.results as T[]\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error\n      }\n      \n      throw new ModuleError(\n        `Database operation failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u6267\u884C\u5355\u6761\u8BB0\u5F55\u67E5\u8BE2\n   */\n  protected async executeQueryFirst<T = any>(\n    query: string,\n    params: any[] = []\n  ): Promise<T | null> {\n    try {\n      const stmt = this.db.prepare(query)\n      const result = params.length > 0 \n        ? await stmt.bind(...params).first()\n        : await stmt.first()\n\n      return result as T | null\n    } catch (error) {\n      throw new ModuleError(\n        `Database query failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u6267\u884C\u63D2\u5165/\u66F4\u65B0/\u5220\u9664\u64CD\u4F5C\n   */\n  protected async executeRun(\n    query: string,\n    params: any[] = []\n  ): Promise<D1Result> {\n    try {\n      const stmt = this.db.prepare(query)\n      const result = params.length > 0 \n        ? await stmt.bind(...params).run()\n        : await stmt.run()\n\n      if (!result.success) {\n        throw new ModuleError(\n          `Database operation failed: ${result.error}`,\n          ERROR_CODES.DATABASE_ERROR,\n          500\n        )\n      }\n\n      return result\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error\n      }\n      \n      throw new ModuleError(\n        `Database operation failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u7F13\u5B58\u6570\u636E\n   */\n  protected async setCache(\n    key: string,\n    data: any,\n    ttl: number = 3600\n  ): Promise<void> {\n    try {\n      await this.kv.put(key, JSON.stringify(data), {\n        expirationTtl: ttl,\n      })\n    } catch (error) {\n      // \u7F13\u5B58\u5931\u8D25\u4E0D\u5E94\u8BE5\u5F71\u54CD\u4E3B\u8981\u529F\u80FD\n      console.warn('Cache operation failed:', error)\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u7F13\u5B58\u6570\u636E\n   */\n  protected async getCache<T = any>(key: string): Promise<T | null> {\n    try {\n      const cached = await this.kv.get(key)\n      return cached ? JSON.parse(cached) : null\n    } catch (error) {\n      console.warn('Cache retrieval failed:', error)\n      return null\n    }\n  }\n\n  /**\n   * \u5220\u9664\u7F13\u5B58\n   */\n  protected async deleteCache(key: string): Promise<void> {\n    try {\n      await this.kv.delete(key)\n    } catch (error) {\n      console.warn('Cache deletion failed:', error)\n    }\n  }\n\n  /**\n   * \u751F\u6210\u65B0\u7684ID\n   */\n  protected generateId(): string {\n    // \u4F7F\u7528Web Crypto\u751F\u6210UUID\n    return (globalThis as any).crypto?.randomUUID\n      ? (globalThis as any).crypto.randomUUID()\n      : `${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 10)}`\n  }\n\n  /**\n   * \u683C\u5F0F\u5316\u65F6\u95F4\u6233\n   */\n  protected formatTimestamp(date?: Date): string {\n    return (date || new Date()).toISOString()\n  }\n\n  /**\n   * \u9A8C\u8BC1\u5FC5\u586B\u5B57\u6BB5\n   */\n  protected validateRequired(data: Record<string, any>, fields: string[]): void {\n    const missing = fields.filter(field => !data[field])\n    \n    if (missing.length > 0) {\n      throw new ModuleError(\n        `Missing required fields: ${missing.join(', ')}`,\n        ERROR_CODES.VALIDATION_ERROR,\n        400\n      )\n    }\n  }\n\n  /**\n   * \u901A\u7528\u9519\u8BEF\u6784\u9020\u5668\n   */\n  protected createError(message: string, code: keyof typeof ERROR_CODES = 'DATABASE_ERROR', status: number = 500): ModuleError {\n    return new ModuleError(message, ERROR_CODES[code], status)\n  }\n\n  /**\n   * \u901A\u7528\u7EDF\u8BA1\u6761\u76EE\u6570\u91CF\n   */\n  public async count(whereClause: string = '', params: any[] = []): Promise<number> {\n    const where = whereClause ? ` WHERE ${whereClause} ` : ''\n    const result = await this.executeQueryFirst<{ count: number }>(`SELECT COUNT(*) as count FROM ${this.tableName}${where}`, params)\n    return result?.count || 0\n  }\n}", "/**\n * \u9996\u9875\u6A21\u5757\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport type { HomepageModule } from '../../../shared/types/homepage';\nimport { BaseModel } from './BaseModel';\n\nexport class HomepageModuleModel extends BaseModel {\n  constructor(env: any) {\n    super(env, 'homepage_modules');\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D3B\u8DC3\u7684\u6D4B\u8BD5\u6A21\u5757\n   */\n  async getAllActiveModules(): Promise<HomepageModule[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT * FROM homepage_modules \n          WHERE is_active = 1 \n          ORDER BY sort_order ASC, created_at ASC\n        `)\n        .all();\n\n      return result.results?.map(this.mapDatabaseRowToModule) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u6D3B\u8DC3\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u6839\u636E\u4E3B\u9898\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\n   */\n  async getModulesByTheme(theme: string): Promise<HomepageModule[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT * FROM homepage_modules \n          WHERE theme = ? AND is_active = 1 \n          ORDER BY sort_order ASC\n        `)\n        .bind(theme)\n        .all();\n\n      return result.results?.map(this.mapDatabaseRowToModule) || [];\n    } catch (error) {\n      console.error(`\u83B7\u53D6${theme}\u4E3B\u9898\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25:`, error);\n      throw new Error(`\u83B7\u53D6${theme}\u4E3B\u9898\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25`);\n    }\n  }\n\n  /**\n   * \u6839\u636EID\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\n   */\n  async getModuleById(id: string): Promise<HomepageModule | null> {\n    try {\n      const result = await this.db\n        .prepare('SELECT * FROM homepage_modules WHERE id = ? AND is_active = 1')\n        .bind(id)\n        .first();\n\n      return result ? this.mapDatabaseRowToModule(result) : null;\n    } catch (error) {\n      console.error(`\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757${id}\u5931\u8D25:`, error);\n      throw new Error(`\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25`);\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u6D4B\u8BD5\u6A21\u5757\u7EDF\u8BA1\u4FE1\u606F\n   */\n  async updateModuleStats(id: string, testCount: number, rating: number): Promise<void> {\n    try {\n      await this.db\n        .prepare(`\n          UPDATE homepage_modules \n          SET test_count = ?, rating = ?, updated_at = CURRENT_TIMESTAMP \n          WHERE id = ?\n        `)\n        .bind(testCount, rating, id)\n        .run();\n    } catch (error) {\n      console.error(`\u66F4\u65B0\u6D4B\u8BD5\u6A21\u5757${id}\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25:`, error);\n      throw new Error('\u66F4\u65B0\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u7EDF\u8BA1\u6458\u8981\n   */\n  async getModulesStats(): Promise<{\n    totalModules: number;\n    totalTests: number;\n    averageRating: number;\n    activeThemes: string[];\n  }> {\n    try {\n      // \u5206\u522B\u67E5\u8BE2\u7EDF\u8BA1\u4FE1\u606F\uFF0C\u907F\u514DSQLite\u517C\u5BB9\u6027\u95EE\u9898\n      const countResult = await this.db\n        .prepare('SELECT COUNT(*) as total_modules FROM homepage_modules WHERE is_active = 1')\n        .first();\n        \n      const sumResult = await this.db\n        .prepare('SELECT SUM(test_count) as total_tests, AVG(rating) as average_rating FROM homepage_modules WHERE is_active = 1')\n        .first();\n        \n      const themesResult = await this.db\n        .prepare('SELECT DISTINCT theme FROM homepage_modules WHERE is_active = 1')\n        .all();\n\n      if (!countResult || !sumResult) {\n        return {\n          totalModules: 0,\n          totalTests: 0,\n          averageRating: 0,\n          activeThemes: [],\n        };\n      }\n\n      return {\n        totalModules: (countResult as any)['total_modules'] as number,\n        totalTests: (sumResult as any)['total_tests'] as number || 0,\n        averageRating: (sumResult as any)['average_rating'] as number || 0,\n        activeThemes: themesResult.results?.map((row: any) => row.theme as string) || [],\n      };\n    } catch (error) {\n      console.error('\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u7EDF\u8BA1\u6458\u8981\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u7EDF\u8BA1\u6458\u8981\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5C06\u6570\u636E\u5E93\u884C\u6620\u5C04\u4E3AHomepageModule\u5BF9\u8C61\n   */\n  private mapDatabaseRowToModule(row: any): HomepageModule {\n    return {\n      id: row.id as string,\n      name: row.name as string,\n      description: row.description as string,\n      icon: row.icon as string,\n      theme: (row as any)['theme'] as 'psychology' | 'astrology' | 'tarot' | 'career' | 'learning' | 'relationship' | 'numerology',\n      testCount: row.test_count as number,\n      rating: row.rating as number,\n      isActive: Boolean(row.is_active),\n      route: row.route as string,\n      features: JSON.parse(row.features_data as string),\n      estimatedTime: row.estimated_time as string,\n      sortOrder: row.sort_order as number,\n      createdAt: new Date(row.created_at as string),\n      updatedAt: new Date(row.updated_at as string),\n    };\n  }\n}\n", "/**\n * \u9996\u9875\u914D\u7F6E\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel';\n\nexport interface HomepageConfigData {\n  key: string;\n  value: string; // JSON\u683C\u5F0F\u7684\u914D\u7F6E\u503C\n  description?: string;\n  isPublic: boolean;\n  updatedAt: Date;\n}\n\nexport class HomepageConfigModel extends BaseModel {\n  constructor(env: any) {\n    super(env, 'homepage_config');\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u516C\u5F00\u914D\u7F6E\n   */\n  async getAllPublicConfigs(): Promise<Record<string, any>> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT key, value, description \n          FROM homepage_config \n          WHERE is_public = 1\n        `)\n        .all();\n\n      const configs: Record<string, any> = {};\n      \n      result.results?.forEach((row) => {\n        try {\n          configs[(row as any)['key'] as string] = JSON.parse((row as any)['value'] as string);\n        } catch (error) {\n          console.warn(`\u89E3\u6790\u914D\u7F6E${(row as any)['key']}\u5931\u8D25:`, error);\n          configs[(row as any)['key'] as string] = (row as any)['value'];\n        }\n      });\n\n      return configs;\n    } catch (error) {\n      console.error('\u83B7\u53D6\u9996\u9875\u914D\u7F6E\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u9996\u9875\u914D\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u6839\u636E\u952E\u83B7\u53D6\u914D\u7F6E\n   */\n  async getConfigByKey(key: string): Promise<any> {\n    try {\n      const result = await this.db\n        .prepare('SELECT value FROM homepage_config WHERE key = ? AND is_public = 1')\n        .bind(key)\n        .first();\n\n      if (!result) {\n        return null;\n      }\n\n      try {\n        return JSON.parse((result as any)['value'] as string);\n      } catch (error) {\n        console.warn(`\u89E3\u6790\u914D\u7F6E${key}\u5931\u8D25:`, error);\n        return (result as any)['value'];\n      }\n    } catch (error) {\n      console.error(`\u83B7\u53D6\u914D\u7F6E${key}\u5931\u8D25:`, error);\n      throw new Error(`\u83B7\u53D6\u914D\u7F6E\u5931\u8D25`);\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u914D\u7F6E\n   */\n  async updateConfig(key: string, value: any, description?: string): Promise<void> {\n    try {\n      const jsonValue = typeof value === 'string' ? value : JSON.stringify(value);\n      \n      await this.db\n        .prepare(`\n          INSERT OR REPLACE INTO homepage_config (key, value, description, updated_at)\n          VALUES (?, ?, ?, CURRENT_TIMESTAMP)\n        `)\n        .bind(key, jsonValue, description || '')\n        .run();\n    } catch (error) {\n      console.error(`\u66F4\u65B0\u914D\u7F6E${key}\u5931\u8D25:`, error);\n      throw new Error('\u66F4\u65B0\u914D\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u6279\u91CF\u66F4\u65B0\u914D\u7F6E\n   */\n  async batchUpdateConfigs(configs: Record<string, any>): Promise<void> {\n    try {\n      const stmt = this.db.prepare(`\n        INSERT OR REPLACE INTO homepage_config (key, value, updated_at)\n        VALUES (?, ?, CURRENT_TIMESTAMP)\n      `);\n\n      const batch = Object.entries(configs).map(([key, value]) => {\n        const jsonValue = typeof value === 'string' ? value : JSON.stringify(value);\n        return stmt.bind(key, jsonValue);\n      });\n\n      await this.db.batch(batch);\n    } catch (error) {\n      console.error('\u6279\u91CF\u66F4\u65B0\u914D\u7F6E\u5931\u8D25:', error);\n      throw new Error('\u6279\u91CF\u66F4\u65B0\u914D\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5220\u9664\u914D\u7F6E\n   */\n  async deleteConfig(key: string): Promise<void> {\n    try {\n      await this.db\n        .prepare('DELETE FROM homepage_config WHERE key = ?')\n        .bind(key)\n        .run();\n    } catch (error) {\n      console.error(`\u5220\u9664\u914D\u7F6E${key}\u5931\u8D25:`, error);\n      throw new Error('\u5220\u9664\u914D\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u914D\u7F6E\u5217\u8868\n   */\n  async getConfigList(): Promise<HomepageConfigData[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT key, value, description, is_public, updated_at\n          FROM homepage_config\n          ORDER BY key ASC\n        `)\n        .all();\n\n      return result.results?.map(this.mapDatabaseRowToConfig) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u914D\u7F6E\u5217\u8868\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u914D\u7F6E\u5217\u8868\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5C06\u6570\u636E\u5E93\u884C\u6620\u5C04\u4E3AHomepageConfigData\u5BF9\u8C61\n   */\n  private mapDatabaseRowToConfig(row: any): HomepageConfigData {\n    return {\n      key: row.key as string,\n      value: row.value as string,\n      description: row.description as string,\n      isPublic: Boolean(row.is_public),\n      updatedAt: new Date(row.updated_at as string),\n    };\n  }\n}\n", "/**\n * \u7EDF\u4E00\u5E38\u91CF\u5B9A\u4E49\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u5E38\u91CF\u547D\u540D\u89C4\u8303\n */\n\n// API\u7AEF\u70B9\u5E38\u91CF\nexport const API_ENDPOINTS = {\n  TESTS: \"/api/tests\",\n  BLOG: \"/api/blog\",\n  FEEDBACK: \"/api/feedback\",\n  ANALYTICS: \"/api/analytics\",\n} as const;\n\n// \u6D4B\u8BD5\u7C7B\u578B\u5E38\u91CF\nexport const TEST_TYPES = {\n  PSYCHOLOGY: \"psychology\",\n  ASTROLOGY: \"astrology\", \n  TAROT: \"tarot\",\n  CAREER: \"career\",\n  LEARNING: \"learning\",\n  RELATIONSHIP: \"relationship\",\n  NUMEROLOGY: \"numerology\",\n} as const;\n\n// \u6A21\u5757\u4E3B\u9898\u5E38\u91CF\nexport const MODULE_THEMES = {\n  PSYCHOLOGY: \"psychology\",\n  ASTROLOGY: \"constellation\", \n  TAROT: \"tarot\",\n  CAREER: \"career\",\n  LEARNING: \"primary\",\n  RELATIONSHIP: \"primary\",\n  NUMEROLOGY: \"primary\",\n} as const;\n\n// \u54CD\u5E94\u5F0F\u65AD\u70B9\u5E38\u91CF\nexport const RESPONSIVE_BREAKPOINTS = {\n  MOBILE: \"320px\",\n  TABLET: \"768px\", \n  DESKTOP: \"1024px\",\n  LARGE: \"1280px\",\n} as const;\n\n// \u7F13\u5B58\u952E\u524D\u7F00\nexport const CACHE_KEYS = {\n  TEST_CONFIG: \"test_config:\",\n  TEST_RESULT: \"test_result:\",\n  BLOG_ARTICLE: \"blog_article:\",\n  USER_SESSION: \"user_session:\",\n} as const;\n\n// \u6570\u636E\u5E93\u8868\u540D\nexport const DB_TABLES = {\n  TEST_TYPES: \"test_types\",\n  TEST_SESSIONS: \"test_sessions\", \n  BLOG_ARTICLES: \"blog_articles\",\n  USER_FEEDBACK: \"user_feedback\",\n  ANALYTICS_EVENTS: \"analytics_events\",\n  SYS_CONFIGS: \"sys_configs\",\n} as const;", "/**\n * \u5206\u6790\u4E8B\u4EF6\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel'\nimport type { Env } from '../index'\nimport { DB_TABLES } from '../../../shared/constants'\n\nasync function hashString(input: string): Promise<string> {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(input)\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\n}\n\nexport interface AnalyticsEvent {\n  id: string\n  eventType: string\n  eventData?: string // JSON\n  sessionId?: string\n  ipAddressHash?: string\n  userAgent?: string\n  timestamp: string\n}\n\nexport interface CreateAnalyticsEventData {\n  eventType: string\n  eventData?: any\n  sessionId?: string\n  ipAddress?: string\n  userAgent?: string\n}\n\nexport interface EventStats {\n  eventType: string\n  count: number\n  percentage: number\n}\n\nexport interface AnalyticsOverview {\n  totalEvents: number\n  uniqueSessions: number\n  topEvents: EventStats[]\n  timeRange: string\n}\n\nexport class AnalyticsEventModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, DB_TABLES.ANALYTICS_EVENTS)\n  }\n\n  /**\n   * \u521B\u5EFA\u5206\u6790\u4E8B\u4EF6\n   */\n  async create(eventData: CreateAnalyticsEventData): Promise<string> {\n    this.validateRequired(eventData, ['eventType'])\n\n    const id = this.generateId()\n    const now = this.formatTimestamp()\n    \n    // \u54C8\u5E0CIP\u5730\u5740\u4EE5\u4FDD\u62A4\u9690\u79C1\n    const ipAddressHash = eventData.ipAddress \n      ? await hashString(eventData.ipAddress)\n      : null\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, event_type, event_data, session_id,\n        ip_address_hash, user_agent, timestamp\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n    `\n\n    const params = [\n      id,\n      eventData.eventType,\n      eventData.eventData ? JSON.stringify(eventData.eventData) : null,\n      eventData.sessionId || null,\n      ipAddressHash,\n      eventData.userAgent || null,\n      now,\n    ]\n\n    await this.executeRun(query, params)\n\n    return id\n  }\n\n  /**\n   * \u83B7\u53D6\u4E8B\u4EF6\u7EDF\u8BA1\n   */\n  async getEventStats(\n    startDate?: string,\n    endDate?: string,\n    limit: number = 10\n  ): Promise<EventStats[]> {\n    let whereClause = ''\n    const params: any[] = []\n\n    if (startDate && endDate) {\n      whereClause = 'WHERE timestamp BETWEEN ? AND ?'\n      params.push(startDate, endDate)\n    }\n\n    const query = `\n      SELECT \n        event_type,\n        COUNT(*) as count,\n        ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM ${this.tableName} ${whereClause}), 2) as percentage\n      FROM ${this.tableName} \n      ${whereClause}\n      GROUP BY event_type\n      ORDER BY count DESC\n      LIMIT ?\n    `\n\n    params.push(limit)\n\n    const results = await this.executeQuery<any>(query, params)\n\n    return results.map(row => ({\n      eventType: row.event_type,\n      count: row.count,\n      percentage: row.percentage,\n    }))\n  }\n\n  /**\n   * \u83B7\u53D6\u5206\u6790\u6982\u89C8\n   */\n  async getOverview(\n    startDate?: string,\n    endDate?: string\n  ): Promise<AnalyticsOverview> {\n    const timeRange = startDate && endDate \n      ? `${startDate} to ${endDate}`\n      : 'All time'\n\n    let whereClause = ''\n    const params: any[] = []\n\n    if (startDate && endDate) {\n      whereClause = 'WHERE timestamp BETWEEN ? AND ?'\n      params.push(startDate, endDate)\n    }\n\n    // \u83B7\u53D6\u603B\u4E8B\u4EF6\u6570\u548C\u552F\u4E00\u4F1A\u8BDD\u6570\n    const overviewQuery = `\n      SELECT \n        COUNT(*) as total_events,\n        COUNT(DISTINCT session_id) as unique_sessions\n      FROM ${this.tableName} \n      ${whereClause}\n    `\n\n    const overviewResult = await this.executeQueryFirst<any>(overviewQuery, params)\n\n    // \u83B7\u53D6\u70ED\u95E8\u4E8B\u4EF6\n    const topEvents = await this.getEventStats(startDate, endDate, 5)\n\n    return {\n      totalEvents: overviewResult?.total_events || 0,\n      uniqueSessions: overviewResult?.unique_sessions || 0,\n      topEvents,\n      timeRange,\n    }\n  }\n\n  /**\n   * \u6839\u636E\u4E8B\u4EF6\u7C7B\u578B\u83B7\u53D6\u4E8B\u4EF6\n   */\n  async findByEventType(\n    eventType: string,\n    limit: number = 100,\n    startDate?: string,\n    endDate?: string\n  ): Promise<AnalyticsEvent[]> {\n    let whereClause = 'WHERE event_type = ?'\n    const params: any[] = [eventType]\n\n    if (startDate && endDate) {\n      whereClause += ' AND timestamp BETWEEN ? AND ?'\n      params.push(startDate, endDate)\n    }\n\n    const query = `\n      SELECT * FROM ${this.tableName} \n      ${whereClause}\n      ORDER BY timestamp DESC\n      LIMIT ?\n    `\n\n    params.push(limit)\n\n    return this.executeQuery<AnalyticsEvent>(query, params)\n  }\n\n  /**\n   * \u6839\u636E\u4F1A\u8BDDID\u83B7\u53D6\u4E8B\u4EF6\n   */\n  async findBySessionId(sessionId: string): Promise<AnalyticsEvent[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE session_id = ? \n      ORDER BY timestamp ASC\n    `\n\n    return this.executeQuery<AnalyticsEvent>(query, [sessionId])\n  }\n\n  /**\n   * \u83B7\u53D6\u6BCF\u65E5\u4E8B\u4EF6\u7EDF\u8BA1\n   */\n  async getDailyStats(\n    days: number = 30,\n    eventType?: string\n  ): Promise<Array<{ date: string; count: number }>> {\n    let whereClause = `WHERE timestamp >= datetime('now', '-${days} days')`\n    const params: any[] = []\n\n    if (eventType) {\n      whereClause += ' AND event_type = ?'\n      params.push(eventType)\n    }\n\n    const query = `\n      SELECT \n        DATE(timestamp) as date,\n        COUNT(*) as count\n      FROM ${this.tableName} \n      ${whereClause}\n      GROUP BY DATE(timestamp)\n      ORDER BY date ASC\n    `\n\n    const results = await this.executeQuery<any>(query, params)\n\n    return results.map(row => ({\n      date: row.date,\n      count: row.count,\n    }))\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u884C\u4E3A\u8DEF\u5F84\n   */\n  async getUserJourney(sessionId: string): Promise<AnalyticsEvent[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE session_id = ? \n      ORDER BY timestamp ASC\n    `\n\n    return this.executeQuery<AnalyticsEvent>(query, [sessionId])\n  }\n\n  /**\n   * \u5220\u9664\u8FC7\u671F\u7684\u5206\u6790\u4E8B\u4EF6\uFF08\u6570\u636E\u6E05\u7406\uFF09\n   */\n  async deleteExpiredEvents(daysOld: number = 90): Promise<number> {\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - daysOld)\n    const cutoffTimestamp = this.formatTimestamp(cutoffDate)\n\n    const query = `DELETE FROM ${this.tableName} WHERE timestamp < ?`\n    const result = await this.executeRun(query, [cutoffTimestamp])\n\n    return (result as any).changes || 0\n  }\n\n  /**\n   * \u6279\u91CF\u521B\u5EFA\u4E8B\u4EF6\uFF08\u7528\u4E8E\u9AD8\u9891\u4E8B\u4EF6\uFF09\n   */\n  async createBatch(events: CreateAnalyticsEventData[]): Promise<number> {\n    if (events.length === 0) {\n      return 0\n    }\n\n    const now = this.formatTimestamp()\n    const values: string[] = []\n    const params: any[] = []\n\n    for (const eventData of events) {\n      const id = this.generateId()\n      const ipAddressHash = eventData.ipAddress \n        ? await hashString(eventData.ipAddress)\n        : null\n\n      values.push('(?, ?, ?, ?, ?, ?, ?)')\n      params.push(\n        id,\n        eventData.eventType,\n        eventData.eventData ? JSON.stringify(eventData.eventData) : null,\n        eventData.sessionId || null,\n        ipAddressHash,\n        eventData.userAgent || null,\n        now\n      )\n    }\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, event_type, event_data, session_id,\n        ip_address_hash, user_agent, timestamp\n      ) VALUES ${values.join(', ')}\n    `\n\n    const result = await this.executeRun(query, params)\n    return (result as any).changes || 0\n  }\n}", "/**\n * \u9996\u9875\u6A21\u5757API\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u8DEF\u7531\u89C4\u8303\n */\n\nimport { Hono } from \"hono\";\nimport { HomepageModuleModel } from \"../../models/HomepageModuleModel\";\nimport { HomepageConfigModel } from \"../../models/HomepageConfigModel\";\nimport { AnalyticsEventModel } from \"../../models/AnalyticsEventModel\";\nimport type { AppContext } from \"../../types/env\";\n\nconst homepageRoutes = new Hono<AppContext>();\n\n// \u83B7\u53D6\u9996\u9875\u914D\u7F6E\nhomepageRoutes.get(\"/config\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const configModel = new HomepageConfigModel(dbService.env);\n    \n    const configs = await configModel.getAllPublicConfigs();\n    \n    return c.json({\n      success: true,\n      data: configs,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u9996\u9875\u914D\u7F6E\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u9996\u9875\u914D\u7F6E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5217\u8868\nhomepageRoutes.get(\"/modules\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const moduleModel = new HomepageModuleModel(dbService.env);\n    \n    const modules = await moduleModel.getAllActiveModules();\n    \n    return c.json({\n      success: true,\n      data: modules,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5217\u8868\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5217\u8868\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\n// \u6839\u636E\u4E3B\u9898\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\nhomepageRoutes.get(\"/modules/:theme\", async (c) => {\n  try {\n    const theme = c.req.param(\"theme\");\n    const dbService = c.get(\"dbService\");\n    const moduleModel = new HomepageModuleModel(dbService.env);\n    \n    const modules = await moduleModel.getModulesByTheme(theme);\n    \n    return c.json({\n      success: true,\n      data: modules,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(`\u83B7\u53D6${c.req.param(\"theme\")}\u4E3B\u9898\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25:`, error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u6D4B\u8BD5\u6A21\u5757\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u9996\u9875\u7EDF\u8BA1\u6570\u636E\nhomepageRoutes.get(\"/stats\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    \n    // \u76F4\u63A5\u6D4B\u8BD5\u6570\u636E\u5E93\u67E5\u8BE2\n    const testQuery = await dbService.db.prepare(\"SELECT COUNT(*) as count FROM homepage_modules\").first();\n    console.log(\"Test query result:\", testQuery);\n    \n    const moduleModel = new HomepageModuleModel(dbService.env);\n    \n    const stats = await moduleModel.getModulesStats();\n    \n    return c.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u9996\u9875\u7EDF\u8BA1\u6570\u636E\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u7EDF\u8BA1\u6570\u636E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\n// \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\u4E8B\u4EF6\nhomepageRoutes.post(\"/analytics\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { eventType, eventData, sessionId, pageUrl, referrer } = body;\n    \n    if (!eventType || !pageUrl) {\n      return c.json({\n        success: false,\n        error: \"\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\") || \"\",\n      }, 400);\n    }\n    \n    const dbService = c.get(\"dbService\");\n    const analyticsModel = new AnalyticsEventModel(dbService.db);\n    \n    // \u8BB0\u5F55\u4E8B\u4EF6\n    await analyticsModel.create({\n      eventType: `homepage_${eventType}`,\n      eventData: {\n        ...eventData,\n        pageUrl,\n        referrer,\n      },\n      sessionId,\n      userAgent: c.req.header(\"User-Agent\") || \"\",\n      ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n    });\n    \n    return c.json({\n      success: true,\n      message: \"\u4E8B\u4EF6\u8BB0\u5F55\u6210\u529F\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(\"\u8BB0\u5F55\u7528\u6237\u884C\u4E3A\u4E8B\u4EF6\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u8BB0\u5F55\u4E8B\u4EF6\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7279\u5B9A\u914D\u7F6E\nhomepageRoutes.get(\"/config/:key\", async (c) => {\n  try {\n    const key = c.req.param(\"key\");\n    const dbService = c.get(\"dbService\");\n    const configModel = new HomepageConfigModel(dbService.db);\n    \n    const config = await configModel.getConfigByKey(key);\n    \n    if (!config) {\n      return c.json({\n        success: false,\n        error: \"\u914D\u7F6E\u4E0D\u5B58\u5728\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\") || \"\",\n      }, 404);\n    }\n    \n    return c.json({\n      success: true,\n      data: config,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    });\n  } catch (error) {\n    console.error(`\u83B7\u53D6\u914D\u7F6E${c.req.param(\"key\")}\u5931\u8D25:`, error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u914D\u7F6E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\") || \"\",\n    }, 500);\n  }\n});\n\nexport { homepageRoutes };\n", "/**\n * \u641C\u7D22\u7D22\u5F15\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u641C\u7D22\u529F\u80FD\u5B9E\u73B0\n */\n\nimport { BaseModel } from './BaseModel';\nimport type { SearchSuggestion } from '../../../shared/types/homepage';\n\nexport interface SearchIndexData {\n  id: string;\n  contentType: 'test' | 'blog' | 'category' | 'tag';\n  contentId: string;\n  title: string;\n  description?: string;\n  content?: string;\n  keywords?: string;\n  language: string;\n  relevanceScore: number;\n  searchCount: number;\n  lastSearched?: Date;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface SearchResult {\n  id: string;\n  contentType: string;\n  contentId: string;\n  title: string;\n  description?: string;\n  relevanceScore: number;\n  searchCount: number;\n}\n\nexport class SearchIndexModel extends BaseModel {\n  constructor(env: any) {\n    super(env, 'search_index');\n  }\n\n  /**\n   * \u641C\u7D22\u5185\u5BB9\n   */\n  async search(query: string, language: string = 'zh-CN', limit: number = 20): Promise<SearchResult[]> {\n    try {\n      console.log('\u5F00\u59CB\u641C\u7D22\uFF0C\u53C2\u6570:', { query, language, limit });\n      \n      // \u4E34\u65F6\u7B80\u5316\uFF1A\u76F4\u63A5\u8FD4\u56DE\u786C\u7F16\u7801\u7ED3\u679C\u8FDB\u884C\u6D4B\u8BD5\n      const mockResults: SearchResult[] = [\n        {\n          id: 'search-001',\n          contentType: 'test',\n          contentId: 'psychology',\n          title: '\u5FC3\u7406\u5065\u5EB7\u6D4B\u8BD5',\n          description: '\u63ED\u79D8\u4F60\u7684\u6027\u683C\u5BC6\u7801',\n          relevanceScore: 100,\n          searchCount: 0,\n        },\n        {\n          id: 'search-002',\n          contentType: 'test',\n          contentId: 'astrology',\n          title: '\u661F\u5EA7\u8FD0\u52BF\u5206\u6790',\n          description: '\u4ECA\u65E5\u8FD0\u52BF\u65E9\u77E5\u9053',\n          relevanceScore: 95,\n          searchCount: 0,\n        }\n      ];\n      \n      console.log('\u8FD4\u56DE\u6A21\u62DF\u641C\u7D22\u7ED3\u679C:', mockResults);\n      return mockResults;\n      \n      // TODO: \u6062\u590D\u6570\u636E\u5E93\u67E5\u8BE2\n      // const result = await this.executeQuery(`\n      //   SELECT id, content_type, content_id, title, description, relevance_score, search_count\n      //   FROM search_index \n      //   WHERE language = ?\n      //   ORDER BY relevance_score DESC, search_count DESC\n      //   LIMIT ?\n      // `, [language, limit]);\n      // return result.map(this.mapDatabaseRowToSearchResult);\n    } catch (error) {\n      console.error('\u641C\u7D22\u5931\u8D25:', error);\n      throw new Error('\u641C\u7D22\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\n   */\n  async getSearchSuggestions(query: string, language: string = 'zh-CN', limit: number = 10): Promise<SearchSuggestion[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT DISTINCT title, content_type, relevance_score\n          FROM search_index \n          WHERE language = ? \n            AND (\n              title LIKE ? OR \n              keywords LIKE ?\n            )\n          ORDER BY relevance_score DESC, search_count DESC\n          LIMIT ?\n        `)\n        .bind(\n          language,\n          `%${query}%`,\n          `%${query}%`,\n          limit\n        )\n        .all();\n\n      return result.results?.map((row, index) => ({\n        id: `suggestion_${index}`,\n        text: row['title'] as string,\n        type: row['content_type'] as 'test' | 'blog' | 'category',\n        relevance: row['relevance_score'] as number,\n      })) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u70ED\u95E8\u641C\u7D22\u5173\u952E\u8BCD\n   */\n  async getPopularKeywords(language: string = 'zh-CN', limit: number = 10): Promise<string[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT keyword \n          FROM popular_search_keywords \n          WHERE language = ? \n          ORDER BY search_count DESC \n          LIMIT ?\n        `)\n        .bind(language, limit)\n        .all();\n\n      return result.results?.map((row: any) => row['keyword'] as string) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u70ED\u95E8\u5173\u952E\u8BCD\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u70ED\u95E8\u5173\u952E\u8BCD\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u589E\u52A0\u641C\u7D22\u6B21\u6570\n   */\n  async incrementSearchCount(id: string): Promise<void> {\n    try {\n      await this.db\n        .prepare(`\n          UPDATE search_index \n          SET search_count = search_count + 1, last_searched = CURRENT_TIMESTAMP \n          WHERE id = ?\n        `)\n        .bind(id)\n        .run();\n    } catch (error) {\n      console.error(`\u589E\u52A0\u641C\u7D22\u6B21\u6570\u5931\u8D25:`, error);\n    }\n  }\n\n  /**\n   * \u8BB0\u5F55\u641C\u7D22\u5173\u952E\u8BCD\n   */\n  async recordSearchKeyword(keyword: string, language: string = 'zh-CN'): Promise<void> {\n    try {\n      await this.db\n        .prepare(`\n          INSERT INTO popular_search_keywords (id, keyword, language, search_count)\n          VALUES (?, ?, ?, 1)\n          ON CONFLICT(keyword) DO UPDATE SET \n            search_count = search_count + 1,\n            last_searched = CURRENT_TIMESTAMP\n        `)\n        .bind(crypto.randomUUID(), keyword, language)\n        .run();\n    } catch (error) {\n      console.error(`\u8BB0\u5F55\u641C\u7D22\u5173\u952E\u8BCD\u5931\u8D25:`, error);\n    }\n  }\n\n  /**\n   * \u6DFB\u52A0\u641C\u7D22\u7D22\u5F15\n   */\n  async addSearchIndex(data: Omit<SearchIndexData, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    try {\n      const id = crypto.randomUUID();\n      \n      await this.db\n        .prepare(`\n          INSERT INTO search_index (\n            id, content_type, content_id, title, description, content, \n            keywords, language, relevance_score, search_count\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `)\n        .bind(\n          id,\n          data.contentType,\n          data.contentId,\n          data.title,\n          data.description || '',\n          data.content || '',\n          data.keywords || '',\n          data.language,\n          data.relevanceScore,\n          data.searchCount\n        )\n        .run();\n\n      return id;\n    } catch (error) {\n      console.error('\u6DFB\u52A0\u641C\u7D22\u7D22\u5F15\u5931\u8D25:', error);\n      throw new Error('\u6DFB\u52A0\u641C\u7D22\u7D22\u5F15\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u641C\u7D22\u7D22\u5F15\n   */\n  async updateSearchIndex(id: string, data: Partial<SearchIndexData>): Promise<void> {\n    try {\n      const updates: string[] = [];\n      const values: any[] = [];\n\n      if (data.title !== undefined) {\n        updates.push('title = ?');\n        values.push(data.title);\n      }\n      if (data.description !== undefined) {\n        updates.push('description = ?');\n        values.push(data.description);\n      }\n      if (data.content !== undefined) {\n        updates.push('content = ?');\n        values.push(data.content);\n      }\n      if (data.keywords !== undefined) {\n        updates.push('keywords = ?');\n        values.push(data.keywords);\n      }\n      if (data.relevanceScore !== undefined) {\n        updates.push('relevance_score = ?');\n        values.push(data.relevanceScore);\n      }\n\n      if (updates.length === 0) return;\n\n      updates.push('updated_at = CURRENT_TIMESTAMP');\n      values.push(id);\n\n      await this.db\n        .prepare(`\n          UPDATE search_index \n          SET ${updates.join(', ')}\n          WHERE id = ?\n        `)\n        .bind(...values)\n        .run();\n    } catch (error) {\n      console.error(`\u66F4\u65B0\u641C\u7D22\u7D22\u5F15\u5931\u8D25:`, error);\n      throw new Error('\u66F4\u65B0\u641C\u7D22\u7D22\u5F15\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5220\u9664\u641C\u7D22\u7D22\u5F15\n   */\n  async deleteSearchIndex(id: string): Promise<void> {\n    try {\n      await this.db\n        .prepare('DELETE FROM search_index WHERE id = ?')\n        .bind(id)\n        .run();\n    } catch (error) {\n      console.error(`\u5220\u9664\u641C\u7D22\u7D22\u5F15\u5931\u8D25:`, error);\n      throw new Error('\u5220\u9664\u641C\u7D22\u7D22\u5F15\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5C06\u6570\u636E\u5E93\u884C\u6620\u5C04\u4E3ASearchResult\u5BF9\u8C61\n   */\n  // private mapDatabaseRowToSearchResult(row: any): SearchResult { // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n  //   return {\n  //     id: row.id as string,\n  //     contentType: row.content_type as string,\n  //     contentId: row.content_id as string,\n  //     title: row.title as string,\n  //     description: row.description as string,\n  //     relevanceScore: row.relevance_score as number,\n  //     searchCount: row.search_count as number,\n  //   };\n  // }\n}\n", "/**\n * \u641C\u7D22\u529F\u80FDAPI\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u641C\u7D22API\u5B9E\u73B0\n */\n\nimport { Hono } from \"hono\";\nimport { SearchIndexModel } from \"../../models/SearchIndexModel\";\nimport { AnalyticsEventModel } from \"../../models/AnalyticsEventModel\";\nimport type { AppContext } from \"../../types/env\";\n\nconst searchRoutes = new Hono<AppContext>();\n\n// \u641C\u7D22\u5185\u5BB9\nsearchRoutes.get(\"/\", async (c) => {\n  try {\n    const query = c.req.query(\"q\");\n    const language = c.req.query(\"lang\") || \"zh-CN\";\n    const limit = parseInt(c.req.query(\"limit\") || \"20\");\n\n    if (!query || query.trim().length === 0) {\n      return c.json({\n        success: false,\n        error: \"\u641C\u7D22\u5173\u952E\u8BCD\u4E0D\u80FD\u4E3A\u7A7A\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      }, 400);\n    }\n\n    const dbService = c.get(\"dbService\");\n    const searchModel = new SearchIndexModel(dbService.env);\n    const analyticsModel = new AnalyticsEventModel(dbService.env);\n\n    // \u6267\u884C\u641C\u7D22\n    const results = await searchModel.search(query.trim(), language, limit);\n\n    // \u8BB0\u5F55\u641C\u7D22\u4E8B\u4EF6\n    await analyticsModel.create({\n      eventType: \"search_query\",\n      eventData: {\n        query: query.trim(),\n        language,\n        resultCount: results.length,\n        limit,\n      },\n      userAgent: c.req.header(\"User-Agent\") || \"\",\n      ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n    });\n\n    // \u8BB0\u5F55\u641C\u7D22\u5173\u952E\u8BCD\n    await searchModel.recordSearchKeyword(query.trim(), language);\n\n    return c.json({\n      success: true,\n      data: {\n        query: query.trim(),\n        results,\n        total: results.length,\n        language,\n      },\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error: any) {\n    console.error(\"\u641C\u7D22\u5931\u8D25:\", error);\n    console.error(\"\u9519\u8BEF\u8BE6\u60C5:\", {\n      message: error.message,\n      stack: error.stack,\n      name: error.name\n    });\n    return c.json({\n      success: false,\n      error: \"\u641C\u7D22\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\nsearchRoutes.get(\"/suggestions\", async (c) => {\n  try {\n    const query = c.req.query(\"q\");\n    const language = c.req.query(\"lang\") || \"zh-CN\";\n    const limit = parseInt(c.req.query(\"limit\") || \"10\");\n\n    if (!query || query.trim().length === 0) {\n      return c.json({\n        success: true,\n        data: [],\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      });\n    }\n\n    const dbService = c.get(\"dbService\");\n    const searchModel = new SearchIndexModel(dbService.env);\n\n    const suggestions = await searchModel.getSearchSuggestions(query.trim(), language, limit);\n\n    return c.json({\n      success: true,\n      data: suggestions,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u641C\u7D22\u5EFA\u8BAE\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u70ED\u95E8\u641C\u7D22\u5173\u952E\u8BCD\nsearchRoutes.get(\"/popular\", async (c) => {\n  try {\n    const language = c.req.query(\"lang\") || \"zh-CN\";\n    const limit = parseInt(c.req.query(\"limit\") || \"10\");\n\n    const dbService = c.get(\"dbService\");\n    const searchModel = new SearchIndexModel(dbService.env);\n\n    const keywords = await searchModel.getPopularKeywords(language, limit);\n\n    return c.json({\n      success: true,\n      data: keywords,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u70ED\u95E8\u5173\u952E\u8BCD\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u70ED\u95E8\u5173\u952E\u8BCD\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u641C\u7D22\u7EDF\u8BA1\u4FE1\u606F\nsearchRoutes.get(\"/stats\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    \n    // \u83B7\u53D6\u641C\u7D22\u76F8\u5173\u7EDF\u8BA1\n    const totalSearches = await dbService.db\n      .prepare(\"SELECT COUNT(*) as count FROM analytics_events WHERE event_type LIKE 'search_%'\")\n      .first();\n\n    const totalKeywords = await dbService.db\n      .prepare(\"SELECT COUNT(*) as count FROM popular_search_keywords\")\n      .first();\n\n    const recentSearches = await dbService.db\n      .prepare(`\n        SELECT event_data, timestamp \n        FROM analytics_events \n        WHERE event_type = 'search_query' \n        ORDER BY timestamp DESC \n        LIMIT 10\n      `)\n      .all();\n\n    const stats = {\n      totalSearches: totalSearches?.count as number || 0,\n      totalKeywords: totalKeywords?.count as number || 0,\n      recentSearches: recentSearches.results?.map((row: any) => ({\n        data: JSON.parse(row.event_data as string),\n        timestamp: row.timestamp,\n      })) || [],\n    };\n\n    return c.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u641C\u7D22\u7EDF\u8BA1\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u641C\u7D22\u7EDF\u8BA1\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u589E\u52A0\u641C\u7D22\u7ED3\u679C\u70B9\u51FB\u6B21\u6570\nsearchRoutes.post(\"/click\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { searchIndexId, resultType, resultId } = body;\n\n    if (!searchIndexId) {\n      return c.json({\n        success: false,\n        error: \"\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      }, 400);\n    }\n\n    const dbService = c.get(\"dbService\");\n    const searchModel = new SearchIndexModel(dbService.env);\n    const analyticsModel = new AnalyticsEventModel(dbService.env);\n\n    // \u589E\u52A0\u641C\u7D22\u6B21\u6570\n    await searchModel.incrementSearchCount(searchIndexId);\n\n    // \u8BB0\u5F55\u70B9\u51FB\u4E8B\u4EF6\n    await analyticsModel.create({\n      eventType: \"search_result_click\",\n      eventData: {\n        searchIndexId,\n        resultType,\n        resultId,\n      },\n      userAgent: c.req.header(\"User-Agent\") || \"\",\n      ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n    });\n\n    return c.json({\n      success: true,\n      message: \"\u70B9\u51FB\u8BB0\u5F55\u6210\u529F\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u8BB0\u5F55\u641C\u7D22\u7ED3\u679C\u70B9\u51FB\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u8BB0\u5F55\u70B9\u51FB\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\nexport { searchRoutes };\n", "/**\n * \u7528\u6237\u504F\u597D\u8BBE\u7F6E\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684Cookies\u7BA1\u7406\u5B9E\u73B0\n */\n\nimport { BaseModel } from './BaseModel';\n// import type { UserPreferences } from '../../../shared/types/homepage'; // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n\nexport interface UserPreferencesData {\n  id: string;\n  sessionId?: string;\n  language: string;\n  theme: string;\n  cookiesConsent: boolean;\n  analyticsConsent: boolean;\n  marketingConsent: boolean;\n  notificationEnabled: boolean;\n  searchHistoryEnabled: boolean;\n  personalizedContent: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface CookiesConsentData {\n  sessionId?: string;\n  cookiesConsent: boolean;\n  analyticsConsent: boolean;\n  marketingConsent: boolean;\n  timestamp: Date;\n}\n\nexport class UserPreferencesModel extends BaseModel {\n  constructor(env: any) {\n    super(env, 'user_preferences');\n  }\n\n  /**\n   * \u521B\u5EFA\u6216\u66F4\u65B0\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  async upsertPreferences(preferences: Omit<UserPreferencesData, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    try {\n      const id = crypto.randomUUID();\n      \n      await this.db\n        .prepare(`\n          INSERT OR REPLACE INTO user_preferences (\n            id, session_id, language, theme, cookies_consent, analytics_consent,\n            marketing_consent, notification_enabled, search_history_enabled, \n            personalized_content, created_at, updated_at\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n        `)\n        .bind(\n          id,\n          preferences.sessionId || null,\n          preferences.language,\n          preferences.theme,\n          preferences.cookiesConsent ? 1 : 0,\n          preferences.analyticsConsent ? 1 : 0,\n          preferences.marketingConsent ? 1 : 0,\n          preferences.notificationEnabled ? 1 : 0,\n          preferences.searchHistoryEnabled ? 1 : 0,\n          preferences.personalizedContent ? 1 : 0\n        )\n        .run();\n\n      return id;\n    } catch (error) {\n      console.error('\u521B\u5EFA\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:', error);\n      throw new Error('\u521B\u5EFA\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u6839\u636E\u4F1A\u8BDDID\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  async getPreferencesBySessionId(sessionId: string): Promise<UserPreferencesData | null> {\n    try {\n      const result = await this.db\n        .prepare('SELECT * FROM user_preferences WHERE session_id = ?')\n        .bind(sessionId)\n        .first();\n\n      return result ? this.mapDatabaseRowToPreferences(result) : null;\n    } catch (error) {\n      console.error(`\u83B7\u53D6\u4F1A\u8BDD${sessionId}\u7684\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:`, error);\n      throw new Error('\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u66F4\u65B0Cookies\u540C\u610F\u72B6\u6001\n   */\n  async updateCookiesConsent(sessionId: string, consent: CookiesConsentData): Promise<void> {\n    try {\n      await this.db\n        .prepare(`\n          INSERT OR REPLACE INTO user_preferences (\n            id, session_id, cookies_consent, analytics_consent, marketing_consent, \n            language, theme, notification_enabled, search_history_enabled, \n            personalized_content, created_at, updated_at\n          ) VALUES (\n            ?, ?, ?, ?, ?, 'zh-CN', 'auto', 1, 1, 1, \n            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP\n          )\n        `)\n        .bind(\n          crypto.randomUUID(),\n          sessionId,\n          consent.cookiesConsent ? 1 : 0,\n          consent.analyticsConsent ? 1 : 0,\n          consent.marketingConsent ? 1 : 0\n        )\n        .run();\n    } catch (error) {\n      console.error(`\u66F4\u65B0\u4F1A\u8BDD${sessionId}\u7684Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25:`, error);\n      throw new Error('\u66F4\u65B0Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6Cookies\u540C\u610F\u7EDF\u8BA1\n   */\n  async getCookiesConsentStats(): Promise<{\n    totalUsers: number;\n    cookiesConsent: number;\n    analyticsConsent: number;\n    marketingConsent: number;\n    consentRate: number;\n  }> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT \n            COUNT(*) as total_users,\n            SUM(cookies_consent) as cookies_consent,\n            SUM(analytics_consent) as analytics_consent,\n            SUM(marketing_consent) as marketing_consent\n          FROM user_preferences\n        `)\n        .first();\n\n      if (!result) {\n        return {\n          totalUsers: 0,\n          cookiesConsent: 0,\n          analyticsConsent: 0,\n          marketingConsent: 0,\n          consentRate: 0,\n        };\n      }\n\n      const totalUsers = result['total_users'] as number;\n      const cookiesConsent = result['cookies_consent'] as number || 0;\n      const analyticsConsent = result['analytics_consent'] as number || 0;\n      const marketingConsent = result['marketing_consent'] as number || 0;\n\n      return {\n        totalUsers,\n        cookiesConsent,\n        analyticsConsent,\n        marketingConsent,\n        consentRate: totalUsers > 0 ? (cookiesConsent / totalUsers) * 100 : 0,\n      };\n    } catch (error) {\n      console.error('\u83B7\u53D6Cookies\u540C\u610F\u7EDF\u8BA1\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6Cookies\u540C\u610F\u7EDF\u8BA1\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u6E05\u7406\u8FC7\u671F\u7684\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  async cleanupExpiredPreferences(daysOld: number = 365): Promise<number> {\n    try {\n      const result = await this.db\n        .prepare(`\n          DELETE FROM user_preferences \n          WHERE updated_at < datetime('now', '-${daysOld} days')\n            AND session_id IS NOT NULL\n        `)\n        .run();\n\n      return result.meta.changes || 0;\n    } catch (error) {\n      console.error('\u6E05\u7406\u8FC7\u671F\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:', error);\n      throw new Error('\u6E05\u7406\u8FC7\u671F\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5217\u8868\n   */\n  async getPreferencesList(limit: number = 100, offset: number = 0): Promise<UserPreferencesData[]> {\n    try {\n      const result = await this.db\n        .prepare(`\n          SELECT * FROM user_preferences \n          ORDER BY updated_at DESC \n          LIMIT ? OFFSET ?\n        `)\n        .bind(limit, offset)\n        .all();\n\n      return result.results?.map(this.mapDatabaseRowToPreferences) || [];\n    } catch (error) {\n      console.error('\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5217\u8868\u5931\u8D25:', error);\n      throw new Error('\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5217\u8868\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5220\u9664\u7528\u6237\u504F\u597D\u8BBE\u7F6E\n   */\n  async deletePreferences(id: string): Promise<void> {\n    try {\n      await this.db\n        .prepare('DELETE FROM user_preferences WHERE id = ?')\n        .bind(id)\n        .run();\n    } catch (error) {\n      console.error(`\u5220\u9664\u7528\u6237\u504F\u597D\u8BBE\u7F6E${id}\u5931\u8D25:`, error);\n      throw new Error('\u5220\u9664\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25');\n    }\n  }\n\n  /**\n   * \u5C06\u6570\u636E\u5E93\u884C\u6620\u5C04\u4E3AUserPreferencesData\u5BF9\u8C61\n   */\n  private mapDatabaseRowToPreferences(row: any): UserPreferencesData {\n    return {\n      id: row.id as string,\n      sessionId: row.session_id as string,\n      language: row.language as string,\n      theme: row.theme as string,\n      cookiesConsent: Boolean(row.cookies_consent),\n      analyticsConsent: Boolean(row.analytics_consent),\n      marketingConsent: Boolean(row.marketing_consent),\n      notificationEnabled: Boolean(row.notification_enabled),\n      searchHistoryEnabled: Boolean(row.search_history_enabled),\n      personalizedContent: Boolean(row.personalized_content),\n      createdAt: new Date(row.created_at as string),\n      updatedAt: new Date(row.updated_at as string),\n    };\n  }\n}\n", "/**\n * Cookies\u7BA1\u7406API\u8DEF\u7531\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684GDPR\u5408\u89C4Cookies\u7BA1\u7406\n */\n\nimport { Hono } from \"hono\";\nimport { UserPreferencesModel } from \"../../models/UserPreferencesModel\";\nimport { AnalyticsEventModel } from \"../../models/AnalyticsEventModel\";\nimport type { AppContext } from \"../../types/env\";\n\nconst cookiesRoutes = new Hono<AppContext>();\n\n// \u83B7\u53D6Cookies\u540C\u610F\u72B6\u6001\ncookiesRoutes.get(\"/consent/:sessionId\", async (c) => {\n  try {\n    const sessionId = c.req.param(\"sessionId\");\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n\n    const preferences = await preferencesModel.getPreferencesBySessionId(sessionId);\n\n    if (!preferences) {\n      return c.json({\n        success: true,\n        data: {\n          cookiesConsent: false,\n          analyticsConsent: false,\n          marketingConsent: false,\n          hasPreferences: false,\n        },\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      });\n    }\n\n    return c.json({\n      success: true,\n      data: {\n        cookiesConsent: preferences.cookiesConsent,\n        analyticsConsent: preferences.analyticsConsent,\n        marketingConsent: preferences.marketingConsent,\n        hasPreferences: true,\n        language: preferences.language,\n        theme: preferences.theme,\n      },\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u66F4\u65B0Cookies\u540C\u610F\u72B6\u6001\ncookiesRoutes.post(\"/consent\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { sessionId, cookiesConsent, analyticsConsent, marketingConsent } = body;\n\n    if (!sessionId || typeof cookiesConsent !== 'boolean') {\n      return c.json({\n        success: false,\n        error: \"\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      }, 400);\n    }\n\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n    const analyticsModel = new AnalyticsEventModel(dbService.env);\n\n    // \u66F4\u65B0\u540C\u610F\u72B6\u6001\n    await preferencesModel.updateCookiesConsent(sessionId, {\n      sessionId,\n      cookiesConsent,\n      analyticsConsent: analyticsConsent || false,\n      marketingConsent: marketingConsent || false,\n      timestamp: new Date(),\n    });\n\n    // \u8BB0\u5F55\u540C\u610F\u4E8B\u4EF6\n    await analyticsModel.create({\n      eventType: \"cookies_consent_updated\",\n      eventData: {\n        sessionId,\n        cookiesConsent,\n        analyticsConsent: analyticsConsent || false,\n        marketingConsent: marketingConsent || false,\n      },\n      userAgent: c.req.header(\"User-Agent\") || \"\",\n      ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n    });\n\n    return c.json({\n      success: true,\n      message: \"Cookies\u540C\u610F\u72B6\u6001\u66F4\u65B0\u6210\u529F\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u66F4\u65B0Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u66F4\u65B0Cookies\u540C\u610F\u72B6\u6001\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\ncookiesRoutes.get(\"/preferences/:sessionId\", async (c) => {\n  try {\n    const sessionId = c.req.param(\"sessionId\");\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n\n    const preferences = await preferencesModel.getPreferencesBySessionId(sessionId);\n\n    if (!preferences) {\n      return c.json({\n        success: false,\n        error: \"\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u4E0D\u5B58\u5728\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      }, 404);\n    }\n\n    return c.json({\n      success: true,\n      data: preferences,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u66F4\u65B0\u7528\u6237\u504F\u597D\u8BBE\u7F6E\ncookiesRoutes.put(\"/preferences/:sessionId\", async (c) => {\n  try {\n    const sessionId = c.req.param(\"sessionId\");\n    const body = await c.req.json();\n    const { language, theme, notificationEnabled, searchHistoryEnabled, personalizedContent } = body;\n\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n\n    // \u83B7\u53D6\u73B0\u6709\u504F\u597D\u8BBE\u7F6E\n    const existingPreferences = await preferencesModel.getPreferencesBySessionId(sessionId);\n    \n    if (!existingPreferences) {\n      return c.json({\n        success: false,\n        error: \"\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u4E0D\u5B58\u5728\",\n        timestamp: new Date().toISOString(),\n        requestId: c.get(\"requestId\"),\n      }, 404);\n    }\n\n    // \u66F4\u65B0\u504F\u597D\u8BBE\u7F6E\n    const updatedPreferences = {\n      ...existingPreferences,\n      language: language || existingPreferences.language,\n      theme: theme || existingPreferences.theme,\n      notificationEnabled: notificationEnabled !== undefined ? notificationEnabled : existingPreferences.notificationEnabled,\n      searchHistoryEnabled: searchHistoryEnabled !== undefined ? searchHistoryEnabled : existingPreferences.searchHistoryEnabled,\n      personalizedContent: personalizedContent !== undefined ? personalizedContent : existingPreferences.personalizedContent,\n    };\n\n    await preferencesModel.upsertPreferences(updatedPreferences);\n\n    return c.json({\n      success: true,\n      message: \"\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u66F4\u65B0\u6210\u529F\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u66F4\u65B0\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u66F4\u65B0\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u83B7\u53D6Cookies\u7EDF\u8BA1\u4FE1\u606F\ncookiesRoutes.get(\"/stats\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n\n    const stats = await preferencesModel.getCookiesConsentStats();\n\n    return c.json({\n      success: true,\n      data: stats,\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u83B7\u53D6Cookies\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u83B7\u53D6Cookies\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u6E05\u7406\u8FC7\u671F\u7684\u7528\u6237\u504F\u597D\u8BBE\u7F6E\ncookiesRoutes.post(\"/cleanup\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { daysOld = 365 } = body;\n\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n\n    const deletedCount = await preferencesModel.cleanupExpiredPreferences(daysOld);\n\n    return c.json({\n      success: true,\n      data: {\n        deletedCount,\n        message: `\u5DF2\u6E05\u7406${daysOld}\u5929\u524D\u7684\u8FC7\u671F\u504F\u597D\u8BBE\u7F6E`,\n      },\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u6E05\u7406\u8FC7\u671F\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u6E05\u7406\u8FC7\u671F\u7528\u6237\u504F\u597D\u8BBE\u7F6E\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\n// \u64A4\u56DECookies\u540C\u610F\ncookiesRoutes.post(\"/withdraw/:sessionId\", async (c) => {\n  try {\n    const sessionId = c.req.param(\"sessionId\");\n    const dbService = c.get(\"dbService\");\n    const preferencesModel = new UserPreferencesModel(dbService.env);\n    const analyticsModel = new AnalyticsEventModel(dbService.env);\n\n    // \u64A4\u56DE\u6240\u6709\u540C\u610F\n    await preferencesModel.updateCookiesConsent(sessionId, {\n      sessionId,\n      cookiesConsent: false,\n      analyticsConsent: false,\n      marketingConsent: false,\n      timestamp: new Date(),\n    });\n\n    // \u8BB0\u5F55\u64A4\u56DE\u4E8B\u4EF6\n    await analyticsModel.create({\n      eventType: \"cookies_consent_withdrawn\",\n      eventData: {\n        sessionId,\n        timestamp: new Date().toISOString(),\n      },\n      userAgent: c.req.header(\"User-Agent\") || \"\",\n      ipAddress: c.req.header(\"CF-Connecting-IP\") || \"\",\n    });\n\n    return c.json({\n      success: true,\n      message: \"Cookies\u540C\u610F\u5DF2\u64A4\u56DE\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    });\n  } catch (error) {\n    console.error(\"\u64A4\u56DECookies\u540C\u610F\u5931\u8D25:\", error);\n    return c.json({\n      success: false,\n      error: \"\u64A4\u56DECookies\u540C\u610F\u5931\u8D25\",\n      timestamp: new Date().toISOString(),\n      requestId: c.get(\"requestId\"),\n    }, 500);\n  }\n});\n\nexport { cookiesRoutes };\n", "/**\n * \u6570\u636E\u5E93\u8FC1\u79FB\u8FD0\u884C\u5668\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u5E93\u8FC1\u79FB\u89C4\u8303\n */\n\nimport type { Env } from '../index'\nimport { ModuleError, ERROR_CODES } from '../../../shared/types/errors'\n\nexport interface Migration {\n  id: string\n  name: string\n  sql: string\n  appliedAt?: string\n}\n\nexport class MigrationRunner {\n  private db: D1Database\n\n  constructor(env: Env) {\n    if (!env.DB) {\n      throw new ModuleError('Database connection not available', ERROR_CODES.DATABASE_ERROR, 500)\n    }\n    this.db = env.DB as D1Database\n  }\n\n  /**\n   * \u521D\u59CB\u5316\u8FC1\u79FB\u8868\n   */\n  private async initMigrationTable(): Promise<void> {\n    const createTableSQL = `\n      CREATE TABLE IF NOT EXISTS migrations (\n        id TEXT PRIMARY KEY,\n        name TEXT NOT NULL,\n        applied_at DATETIME DEFAULT CURRENT_TIMESTAMP\n      )\n    `\n\n    try {\n      const result = await this.db.prepare(createTableSQL).run()\n      if (!result.success) {\n        throw new Error(result.error || 'Failed to create migrations table')\n      }\n    } catch (error) {\n      throw new ModuleError(\n        `Failed to initialize migration table: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u5DF2\u5E94\u7528\u7684\u8FC1\u79FB\n   */\n  private async getAppliedMigrations(): Promise<string[]> {\n    try {\n      const result = await this.db.prepare('SELECT id FROM migrations ORDER BY applied_at ASC').all()\n      \n      if (!result.success) {\n        throw new Error(result.error || 'Failed to fetch applied migrations')\n      }\n\n      return result.results.map((row: any) => row.id)\n    } catch (error) {\n      throw new ModuleError(\n        `Failed to get applied migrations: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u5E94\u7528\u5355\u4E2A\u8FC1\u79FB\n   */\n  private async applyMigration(migration: Migration): Promise<void> {\n    try {\n      // \u6267\u884C\u8FC1\u79FBSQL\n      const migrationResult = await this.db.prepare(migration.sql).run()\n      \n      if (!migrationResult.success) {\n        throw new Error(migrationResult.error || 'Migration SQL execution failed')\n      }\n\n      // \u8BB0\u5F55\u8FC1\u79FB\n      const recordResult = await this.db\n        .prepare('INSERT INTO migrations (id, name, applied_at) VALUES (?, ?, ?)')\n        .bind(migration.id, migration.name, new Date().toISOString())\n        .run()\n\n      if (!recordResult.success) {\n        throw new Error(recordResult.error || 'Failed to record migration')\n      }\n\n      console.log(`Applied migration: ${migration.id} - ${migration.name}`)\n    } catch (error) {\n      throw new ModuleError(\n        `Failed to apply migration ${migration.id}: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u8FD0\u884C\u6240\u6709\u5F85\u5E94\u7528\u7684\u8FC1\u79FB\n   */\n  async runMigrations(migrations: Migration[]): Promise<void> {\n    try {\n      // \u521D\u59CB\u5316\u8FC1\u79FB\u8868\n      await this.initMigrationTable()\n\n      // \u83B7\u53D6\u5DF2\u5E94\u7528\u7684\u8FC1\u79FB\n      const appliedMigrations = await this.getAppliedMigrations()\n\n      // \u8FC7\u6EE4\u51FA\u5F85\u5E94\u7528\u7684\u8FC1\u79FB\n      const pendingMigrations = migrations.filter(\n        migration => !appliedMigrations.includes(migration.id)\n      )\n\n      if (pendingMigrations.length === 0) {\n        console.log('No pending migrations to apply')\n        return\n      }\n\n      console.log(`Applying ${pendingMigrations.length} pending migrations...`)\n\n      // \u6309\u987A\u5E8F\u5E94\u7528\u8FC1\u79FB\n      for (const migration of pendingMigrations) {\n        await this.applyMigration(migration)\n      }\n\n      console.log('All migrations applied successfully')\n    } catch (error) {\n      if (error instanceof ModuleError) {\n        throw error\n      }\n      \n      throw new ModuleError(\n        `Migration runner failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u8FC1\u79FB\u72B6\u6001\n   */\n  async getMigrationStatus(migrations: Migration[]): Promise<{\n    applied: Migration[]\n    pending: Migration[]\n  }> {\n    try {\n      await this.initMigrationTable()\n      const appliedMigrationIds = await this.getAppliedMigrations()\n\n      const applied = migrations.filter(migration => \n        appliedMigrationIds.includes(migration.id)\n      )\n\n      const pending = migrations.filter(migration => \n        !appliedMigrationIds.includes(migration.id)\n      )\n\n      return { applied, pending }\n    } catch (error) {\n      throw new ModuleError(\n        `Failed to get migration status: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        ERROR_CODES.DATABASE_ERROR,\n        500\n      )\n    }\n  }\n}", "/**\n * \u6D4B\u8BD5\u7C7B\u578B\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel'\nimport type { Env } from '../index'\nimport { CACHE_KEYS, DB_TABLES } from '../../../shared/constants'\n\nexport interface TestType {\n  id: string\n  name: string\n  category: string\n  description?: string\n  configData: string // JSON\n  isActive: boolean\n  sortOrder: number\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface TestConfig {\n  questions: any[]\n  scoringType: string\n  scoringRules: any\n  resultTemplates: any\n  timeLimit?: number\n  questionCount: number\n}\n\nexport interface CreateTestTypeData {\n  id: string\n  name: string\n  category: string\n  description?: string\n  config: TestConfig\n  isActive?: boolean\n  sortOrder?: number\n}\n\nexport class TestTypeModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, DB_TABLES.TEST_TYPES)\n  }\n\n  /**\n   * \u521B\u5EFA\u6D4B\u8BD5\u7C7B\u578B\n   */\n  async create(testTypeData: CreateTestTypeData): Promise<string> {\n    this.validateRequired(testTypeData, ['id', 'name', 'category', 'config'])\n\n    const now = this.formatTimestamp()\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, name, category, description, config_data,\n        is_active, sort_order, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `\n\n    const params = [\n      testTypeData.id,\n      testTypeData.name,\n      testTypeData.category,\n      testTypeData.description || null,\n      JSON.stringify(testTypeData.config),\n      testTypeData.isActive !== false ? 1 : 0,\n      testTypeData.sortOrder || 0,\n      now,\n      now,\n    ]\n\n    await this.executeRun(query, params)\n\n    // \u7F13\u5B58\u6D4B\u8BD5\u914D\u7F6E\n    const cacheKey = `${CACHE_KEYS.TEST_CONFIG}${testTypeData.id}`\n    await this.setCache(cacheKey, testTypeData.config, 3600) // 1\u5C0F\u65F6\u7F13\u5B58\n\n    return testTypeData.id\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u6D3B\u8DC3\u7684\u6D4B\u8BD5\u7C7B\u578B\n   */\n  async getAllActive(): Promise<TestType[]> {\n    const cacheKey = 'active_test_types'\n    const cached = await this.getCache<TestType[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE is_active = 1 \n      ORDER BY sort_order ASC, name ASC\n    `\n\n    const results = await this.executeQuery<TestType>(query)\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, results, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return results\n  }\n\n  /**\n   * \u6839\u636EID\u83B7\u53D6\u6D4B\u8BD5\u7C7B\u578B\n   */\n  async findById(id: string): Promise<TestType | null> {\n    const query = `SELECT * FROM ${this.tableName} WHERE id = ?`\n    return this.executeQueryFirst<TestType>(query, [id])\n  }\n\n  /**\n   * \u6839\u636E\u5206\u7C7B\u83B7\u53D6\u6D4B\u8BD5\u7C7B\u578B\n   */\n  async findByCategory(category: string): Promise<TestType[]> {\n    const cacheKey = `test_types_category:${category}`\n    const cached = await this.getCache<TestType[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE category = ? AND is_active = 1 \n      ORDER BY sort_order ASC, name ASC\n    `\n\n    const results = await this.executeQuery<TestType>(query, [category])\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, results, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return results\n  }\n\n  /**\n   * \u83B7\u53D6\u6D4B\u8BD5\u914D\u7F6E\n   */\n  async getConfig(id: string): Promise<TestConfig | null> {\n    const cacheKey = `${CACHE_KEYS.TEST_CONFIG}${id}`\n    const cached = await this.getCache<TestConfig>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const testType = await this.findById(id)\n    \n    if (!testType) {\n      return null\n    }\n\n    try {\n      const config = JSON.parse(testType.configData) as TestConfig\n      \n      // \u7F13\u5B58\u914D\u7F6E\n      await this.setCache(cacheKey, config, 3600) // 1\u5C0F\u65F6\u7F13\u5B58\n      \n      return config\n    } catch (error) {\n      console.error('Failed to parse test config:', error)\n      return null\n    }\n  }\n\n  /**\n   * \u66F4\u65B0\u6D4B\u8BD5\u7C7B\u578B\n   */\n  async update(id: string, updateData: Partial<CreateTestTypeData>): Promise<void> {\n    const now = this.formatTimestamp()\n    const fields: string[] = []\n    const params: any[] = []\n\n    // \u52A8\u6001\u6784\u5EFA\u66F4\u65B0\u5B57\u6BB5\n    if (updateData.name !== undefined) {\n      fields.push('name = ?')\n      params.push(updateData.name)\n    }\n\n    if (updateData.category !== undefined) {\n      fields.push('category = ?')\n      params.push(updateData.category)\n    }\n\n    if (updateData.description !== undefined) {\n      fields.push('description = ?')\n      params.push(updateData.description)\n    }\n\n    if (updateData.config !== undefined) {\n      fields.push('config_data = ?')\n      params.push(JSON.stringify(updateData.config))\n    }\n\n    if (updateData.isActive !== undefined) {\n      fields.push('is_active = ?')\n      params.push(updateData.isActive ? 1 : 0)\n    }\n\n    if (updateData.sortOrder !== undefined) {\n      fields.push('sort_order = ?')\n      params.push(updateData.sortOrder)\n    }\n\n    if (fields.length === 0) {\n      return // \u6CA1\u6709\u9700\u8981\u66F4\u65B0\u7684\u5B57\u6BB5\n    }\n\n    fields.push('updated_at = ?')\n    params.push(now)\n    params.push(id)\n\n    const query = `\n      UPDATE ${this.tableName} \n      SET ${fields.join(', ')} \n      WHERE id = ?\n    `\n\n    await this.executeRun(query, params)\n\n    // \u6E05\u9664\u76F8\u5173\u7F13\u5B58\n    await this.deleteCache(`${CACHE_KEYS.TEST_CONFIG}${id}`)\n    await this.deleteCache('active_test_types')\n  }\n\n  /**\n   * \u5220\u9664\u6D4B\u8BD5\u7C7B\u578B\uFF08\u8F6F\u5220\u9664 - \u8BBE\u7F6E\u4E3A\u4E0D\u6D3B\u8DC3\uFF09\n   */\n  async softDelete(id: string): Promise<void> {\n    await this.update(id, { isActive: false })\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u5206\u7C7B\n   */\n  async getCategories(): Promise<string[]> {\n    const cacheKey = 'test_categories'\n    const cached = await this.getCache<string[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT DISTINCT category \n      FROM ${this.tableName} \n      WHERE is_active = 1 \n      ORDER BY category ASC\n    `\n\n    const results = await this.executeQuery<{ category: string }>(query)\n    const categories = results.map(row => row.category)\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, categories, 3600) // 1\u5C0F\u65F6\u7F13\u5B58\n\n    return categories\n  }\n}", "/**\n * \u6D4B\u8BD5\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel'\nimport type { Env } from '../index'\nimport { CACHE_KEYS, DB_TABLES } from '../../../shared/constants'\n\nasync function hashString(input: string): Promise<string> {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(input)\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data)\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\n}\n\nexport interface TestSession {\n  id: string\n  testTypeId: string\n  answersData: string // JSON\n  resultData: string // JSON\n  userAgent?: string\n  ipAddressHash?: string\n  sessionDuration?: number\n  createdAt: string\n}\n\nexport interface CreateTestSessionData {\n  testTypeId: string\n  answers: any[]\n  result: any\n  userAgent?: string\n  ipAddress?: string\n  sessionDuration?: number\n}\n\nexport interface TestSessionStats {\n  totalSessions: number\n  averageScore: number\n  completionRate: number\n}\n\nexport class TestSessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, DB_TABLES.TEST_SESSIONS)\n  }\n\n  /**\n   * \u521B\u5EFA\u6D4B\u8BD5\u4F1A\u8BDD\n   */\n  async create(sessionData: CreateTestSessionData): Promise<string> {\n    this.validateRequired(sessionData, ['testTypeId', 'answers', 'result'])\n\n    const id = this.generateId()\n    const now = this.formatTimestamp()\n    \n    // \u54C8\u5E0CIP\u5730\u5740\u4EE5\u4FDD\u62A4\u9690\u79C1\n    const ipAddressHash = sessionData.ipAddress \n      ? await hashString(sessionData.ipAddress)\n      : null\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, test_type_id, answers_data, result_data,\n        user_agent, ip_address_hash, session_duration, created_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `\n\n    const params = [\n      id,\n      sessionData.testTypeId,\n      JSON.stringify(sessionData.answers),\n      JSON.stringify(sessionData.result),\n      sessionData.userAgent || null,\n      ipAddressHash,\n      sessionData.sessionDuration || null,\n      now,\n    ]\n\n    await this.executeRun(query, params)\n\n    // \u7F13\u5B58\u6D4B\u8BD5\u7ED3\u679C\n    const cacheKey = `${CACHE_KEYS.TEST_RESULT}${id}`\n    await this.setCache(cacheKey, {\n      id,\n      testTypeId: sessionData.testTypeId,\n      result: sessionData.result,\n      createdAt: now,\n    }, 86400) // 24\u5C0F\u65F6\u7F13\u5B58\n\n    return id\n  }\n\n  /**\n   * \u6839\u636EID\u83B7\u53D6\u6D4B\u8BD5\u4F1A\u8BDD\n   */\n  async findById(id: string): Promise<TestSession | null> {\n    // \u5148\u5C1D\u8BD5\u4ECE\u7F13\u5B58\u83B7\u53D6\n    const cacheKey = `${CACHE_KEYS.TEST_RESULT}${id}`\n    const cached = await this.getCache<TestSession>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `SELECT * FROM ${this.tableName} WHERE id = ?`\n    const result = await this.executeQueryFirst<TestSession>(query, [id])\n\n    if (result) {\n      // \u7F13\u5B58\u7ED3\u679C\n      await this.setCache(cacheKey, result, 3600) // 1\u5C0F\u65F6\u7F13\u5B58\n    }\n\n    return result\n  }\n\n  /**\n   * \u6839\u636E\u6D4B\u8BD5\u7C7B\u578B\u83B7\u53D6\u7EDF\u8BA1\u6570\u636E\n   */\n  async getStatsByTestType(testTypeId: string): Promise<TestSessionStats> {\n    const cacheKey = `test_stats:${testTypeId}`\n    const cached = await this.getCache<TestSessionStats>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT \n        COUNT(*) as total_sessions,\n        AVG(CAST(json_extract(result_data, '$.overallScore') AS REAL)) as avg_score,\n        COUNT(CASE WHEN json_extract(result_data, '$.completed') = 'true' THEN 1 END) * 100.0 / COUNT(*) as completion_rate\n      FROM ${this.tableName} \n      WHERE test_type_id = ?\n    `\n\n    const result = await this.executeQueryFirst<any>(query, [testTypeId])\n\n    const stats: TestSessionStats = {\n      totalSessions: result?.total_sessions || 0,\n      averageScore: result?.avg_score || 0,\n      completionRate: result?.completion_rate || 0,\n    }\n\n    // \u7F13\u5B58\u7EDF\u8BA1\u6570\u636E\n    await this.setCache(cacheKey, stats, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return stats\n  }\n\n  /**\n   * \u83B7\u53D6\u6700\u8FD1\u7684\u6D4B\u8BD5\u4F1A\u8BDD\n   */\n  async getRecentSessions(limit: number = 10): Promise<TestSession[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      ORDER BY created_at DESC \n      LIMIT ?\n    `\n\n    return this.executeQuery<TestSession>(query, [limit])\n  }\n\n  /**\n   * \u6839\u636E\u65F6\u95F4\u8303\u56F4\u83B7\u53D6\u4F1A\u8BDD\u6570\u91CF\n   */\n  async getSessionCountByDateRange(\n    startDate: string,\n    endDate: string,\n    testTypeId?: string\n  ): Promise<number> {\n    let query = `\n      SELECT COUNT(*) as count \n      FROM ${this.tableName} \n      WHERE created_at BETWEEN ? AND ?\n    `\n    const params = [startDate, endDate]\n\n    if (testTypeId) {\n      query += ' AND test_type_id = ?'\n      params.push(testTypeId)\n    }\n\n    const result = await this.executeQueryFirst<{ count: number }>(query, params)\n    return result?.count || 0\n  }\n\n  /**\n   * \u5220\u9664\u8FC7\u671F\u7684\u6D4B\u8BD5\u4F1A\u8BDD\uFF08\u6570\u636E\u6E05\u7406\uFF09\n   */\n  async deleteExpiredSessions(daysOld: number = 90): Promise<number> {\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - daysOld)\n    const cutoffTimestamp = this.formatTimestamp(cutoffDate)\n\n    const query = `DELETE FROM ${this.tableName} WHERE created_at < ?`\n    const result = await this.executeRun(query, [cutoffTimestamp])\n\n    return (result as any).changes || 0\n  }\n\n  /**\n   * \u66F4\u65B0\u4F1A\u8BDD\u6301\u7EED\u65F6\u95F4\n   */\n  async updateSessionDuration(id: string, duration: number): Promise<void> {\n    const query = `\n      UPDATE ${this.tableName} \n      SET session_duration = ? \n      WHERE id = ?\n    `\n\n    await this.executeRun(query, [duration, id])\n\n    // \u6E05\u9664\u76F8\u5173\u7F13\u5B58\n    const cacheKey = `${CACHE_KEYS.TEST_RESULT}${id}`\n    await this.deleteCache(cacheKey)\n  }\n}", "/**\n * \u535A\u5BA2\u6587\u7AE0\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel'\nimport type { Env } from '../index'\nimport { CACHE_KEYS, DB_TABLES } from '../../../shared/constants'\n\nexport interface BlogArticle {\n  id: string\n  title: string\n  content: string\n  excerpt?: string\n  category?: string\n  tagsData: string // JSON\n  viewCount: number\n  likeCount: number\n  isPublished: boolean\n  isFeatured: boolean\n  publishedAt?: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface CreateBlogArticleData {\n  title: string\n  content: string\n  excerpt?: string\n  category?: string\n  tags?: string[]\n  isPublished?: boolean\n  isFeatured?: boolean\n  publishedAt?: string\n}\n\nexport interface BlogArticleListItem {\n  id: string\n  title: string\n  excerpt?: string\n  category?: string\n  tags: string[]\n  viewCount: number\n  likeCount: number\n  publishedAt?: string\n  createdAt: string\n}\n\nexport interface PaginationResult<T> {\n  data: T[]\n  pagination: {\n    page: number\n    limit: number\n    total: number\n    totalPages: number\n    hasNext: boolean\n    hasPrev: boolean\n  }\n}\n\nexport class BlogArticleModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, DB_TABLES.BLOG_ARTICLES)\n  }\n\n  /**\n   * \u521B\u5EFA\u535A\u5BA2\u6587\u7AE0\n   */\n  async create(articleData: CreateBlogArticleData): Promise<string> {\n    this.validateRequired(articleData, ['title', 'content'])\n\n    const id = this.generateId()\n    const now = this.formatTimestamp()\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, title, content, excerpt, category, tags_data,\n        view_count, like_count, is_published, is_featured,\n        published_at, created_at, updated_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `\n\n    const params = [\n      id,\n      articleData.title,\n      articleData.content,\n      articleData.excerpt || null,\n      articleData.category || null,\n      JSON.stringify(articleData.tags || []),\n      0, // view_count\n      0, // like_count\n      articleData.isPublished !== false ? 1 : 0,\n      articleData.isFeatured === true ? 1 : 0,\n      articleData.publishedAt || (articleData.isPublished !== false ? now : null),\n      now,\n      now,\n    ]\n\n    await this.executeRun(query, params)\n\n    // \u6E05\u9664\u5217\u8868\u7F13\u5B58\n    await this.deleteCache('blog_articles_list')\n    await this.deleteCache('featured_articles')\n\n    return id\n  }\n\n  /**\n   * \u83B7\u53D6\u6587\u7AE0\u5217\u8868\uFF08\u5206\u9875\uFF09\n   */\n  async getList(\n    page: number = 1,\n    limit: number = 10,\n    category?: string\n  ): Promise<PaginationResult<BlogArticleListItem>> {\n    const offset = (page - 1) * limit\n    const cacheKey = `blog_list:${page}:${limit}:${category || 'all'}`\n    const cached = await this.getCache<PaginationResult<BlogArticleListItem>>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    // \u6784\u5EFA\u67E5\u8BE2\u6761\u4EF6\n    let whereClause = 'WHERE is_published = 1'\n    const params: any[] = []\n\n    if (category) {\n      whereClause += ' AND category = ?'\n      params.push(category)\n    }\n\n    // \u83B7\u53D6\u603B\u6570\n    const countQuery = `SELECT COUNT(*) as total FROM ${this.tableName} ${whereClause}`\n    const countResult = await this.executeQueryFirst<{ total: number }>(countQuery, params)\n    const total = countResult?.total || 0\n\n    // \u83B7\u53D6\u6587\u7AE0\u5217\u8868\n    const listQuery = `\n      SELECT \n        id, title, excerpt, category, tags_data,\n        view_count, like_count, published_at, created_at\n      FROM ${this.tableName} \n      ${whereClause}\n      ORDER BY published_at DESC, created_at DESC\n      LIMIT ? OFFSET ?\n    `\n\n    const articles = await this.executeQuery<any>(listQuery, [...params, limit, offset])\n\n    // \u8F6C\u6362\u6570\u636E\u683C\u5F0F\n    const data: BlogArticleListItem[] = articles.map(article => ({\n      id: article.id,\n      title: article.title,\n      excerpt: article.excerpt,\n      category: article.category,\n      tags: JSON.parse(article.tags_data || '[]'),\n      viewCount: article.view_count,\n      likeCount: article.like_count,\n      publishedAt: article.published_at,\n      createdAt: article.created_at,\n    }))\n\n    const totalPages = Math.ceil(total / limit)\n    const result: PaginationResult<BlogArticleListItem> = {\n      data,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages,\n        hasNext: page < totalPages,\n        hasPrev: page > 1,\n      },\n    }\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, result, 900) // 15\u5206\u949F\u7F13\u5B58\n\n    return result\n  }\n\n  /**\n   * \u6839\u636EID\u83B7\u53D6\u6587\u7AE0\u8BE6\u60C5\n   */\n  async findById(id: string): Promise<BlogArticle | null> {\n    const cacheKey = `${CACHE_KEYS.BLOG_ARTICLE}${id}`\n    const cached = await this.getCache<BlogArticle>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `SELECT * FROM ${this.tableName} WHERE id = ? AND is_published = 1`\n    const result = await this.executeQueryFirst<BlogArticle>(query, [id])\n\n    if (result) {\n      // \u7F13\u5B58\u7ED3\u679C\n      await this.setCache(cacheKey, result, 1800) // 30\u5206\u949F\u7F13\u5B58\n    }\n\n    return result\n  }\n\n  /**\n   * \u589E\u52A0\u6587\u7AE0\u6D4F\u89C8\u91CF\n   */\n  async incrementViewCount(id: string): Promise<void> {\n    const query = `\n      UPDATE ${this.tableName} \n      SET view_count = view_count + 1 \n      WHERE id = ?\n    `\n\n    await this.executeRun(query, [id])\n\n    // \u6E05\u9664\u76F8\u5173\u7F13\u5B58\n    await this.deleteCache(`${CACHE_KEYS.BLOG_ARTICLE}${id}`)\n  }\n\n  /**\n   * \u589E\u52A0\u6587\u7AE0\u70B9\u8D5E\u6570\n   */\n  async incrementLikeCount(id: string): Promise<void> {\n    const query = `\n      UPDATE ${this.tableName} \n      SET like_count = like_count + 1 \n      WHERE id = ?\n    `\n\n    await this.executeRun(query, [id])\n\n    // \u6E05\u9664\u76F8\u5173\u7F13\u5B58\n    await this.deleteCache(`${CACHE_KEYS.BLOG_ARTICLE}${id}`)\n  }\n\n  /**\n   * \u83B7\u53D6\u7CBE\u9009\u6587\u7AE0\n   */\n  async getFeaturedArticles(limit: number = 5): Promise<BlogArticleListItem[]> {\n    const cacheKey = 'featured_articles'\n    const cached = await this.getCache<BlogArticleListItem[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT \n        id, title, excerpt, category, tags_data,\n        view_count, like_count, published_at, created_at\n      FROM ${this.tableName} \n      WHERE is_published = 1 AND is_featured = 1\n      ORDER BY published_at DESC\n      LIMIT ?\n    `\n\n    const articles = await this.executeQuery<any>(query, [limit])\n\n    // \u8F6C\u6362\u6570\u636E\u683C\u5F0F\n    const data: BlogArticleListItem[] = articles.map(article => ({\n      id: article.id,\n      title: article.title,\n      excerpt: article.excerpt,\n      category: article.category,\n      tags: JSON.parse(article.tags_data || '[]'),\n      viewCount: article.view_count,\n      likeCount: article.like_count,\n      publishedAt: article.published_at,\n      createdAt: article.created_at,\n    }))\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, data, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return data\n  }\n\n  /**\n   * \u83B7\u53D6\u70ED\u95E8\u6587\u7AE0\n   */\n  async getPopularArticles(limit: number = 5): Promise<BlogArticleListItem[]> {\n    const cacheKey = 'popular_articles'\n    const cached = await this.getCache<BlogArticleListItem[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT \n        id, title, excerpt, category, tags_data,\n        view_count, like_count, published_at, created_at\n      FROM ${this.tableName} \n      WHERE is_published = 1\n      ORDER BY view_count DESC, like_count DESC\n      LIMIT ?\n    `\n\n    const articles = await this.executeQuery<any>(query, [limit])\n\n    // \u8F6C\u6362\u6570\u636E\u683C\u5F0F\n    const data: BlogArticleListItem[] = articles.map(article => ({\n      id: article.id,\n      title: article.title,\n      excerpt: article.excerpt,\n      category: article.category,\n      tags: JSON.parse(article.tags_data || '[]'),\n      viewCount: article.view_count,\n      likeCount: article.like_count,\n      publishedAt: article.published_at,\n      createdAt: article.created_at,\n    }))\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, data, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return data\n  }\n\n  /**\n   * \u83B7\u53D6\u6240\u6709\u5206\u7C7B\n   */\n  async getCategories(): Promise<string[]> {\n    const cacheKey = 'blog_categories'\n    const cached = await this.getCache<string[]>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT DISTINCT category \n      FROM ${this.tableName} \n      WHERE is_published = 1 AND category IS NOT NULL\n      ORDER BY category ASC\n    `\n\n    const results = await this.executeQuery<{ category: string }>(query)\n    const categories = results.map(row => row.category)\n\n    // \u7F13\u5B58\u7ED3\u679C\n    await this.setCache(cacheKey, categories, 3600) // 1\u5C0F\u65F6\u7F13\u5B58\n\n    return categories\n  }\n\n  /**\n   * \u641C\u7D22\u6587\u7AE0\n   */\n  async search(\n    keyword: string,\n    page: number = 1,\n    limit: number = 10\n  ): Promise<PaginationResult<BlogArticleListItem>> {\n    const offset = (page - 1) * limit\n    const searchTerm = `%${keyword}%`\n\n    // \u83B7\u53D6\u603B\u6570\n    const countQuery = `\n      SELECT COUNT(*) as total \n      FROM ${this.tableName} \n      WHERE is_published = 1 \n      AND (title LIKE ? OR content LIKE ? OR excerpt LIKE ?)\n    `\n    const countResult = await this.executeQueryFirst<{ total: number }>(\n      countQuery, \n      [searchTerm, searchTerm, searchTerm]\n    )\n    const total = countResult?.total || 0\n\n    // \u83B7\u53D6\u641C\u7D22\u7ED3\u679C\n    const searchQuery = `\n      SELECT \n        id, title, excerpt, category, tags_data,\n        view_count, like_count, published_at, created_at\n      FROM ${this.tableName} \n      WHERE is_published = 1 \n      AND (title LIKE ? OR content LIKE ? OR excerpt LIKE ?)\n      ORDER BY published_at DESC\n      LIMIT ? OFFSET ?\n    `\n\n    const articles = await this.executeQuery<any>(\n      searchQuery, \n      [searchTerm, searchTerm, searchTerm, limit, offset]\n    )\n\n    // \u8F6C\u6362\u6570\u636E\u683C\u5F0F\n    const data: BlogArticleListItem[] = articles.map(article => ({\n      id: article.id,\n      title: article.title,\n      excerpt: article.excerpt,\n      category: article.category,\n      tags: JSON.parse(article.tags_data || '[]'),\n      viewCount: article.view_count,\n      likeCount: article.like_count,\n      publishedAt: article.published_at,\n      createdAt: article.created_at,\n    }))\n\n    const totalPages = Math.ceil(total / limit)\n    return {\n      data,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages,\n        hasNext: page < totalPages,\n        hasPrev: page > 1,\n      },\n    }\n  }\n}", "/**\n * \u7528\u6237\u53CD\u9988\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from './BaseModel'\nimport type { Env } from '../index'\nimport { DB_TABLES } from '../../../shared/constants'\n\nexport interface UserFeedback {\n  id: string\n  sessionId?: string\n  feedbackType: 'like' | 'dislike' | 'comment'\n  content?: string\n  rating?: number\n  createdAt: string\n}\n\nexport interface CreateUserFeedbackData {\n  sessionId?: string\n  feedbackType: 'like' | 'dislike' | 'comment'\n  content?: string\n  rating?: number\n}\n\nexport interface FeedbackStats {\n  totalFeedback: number\n  positiveCount: number\n  negativeCount: number\n  averageRating: number\n  commentCount: number\n}\n\nexport class UserFeedbackModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, DB_TABLES.USER_FEEDBACK)\n  }\n\n  /**\n   * \u521B\u5EFA\u7528\u6237\u53CD\u9988\n   */\n  async create(feedbackData: CreateUserFeedbackData): Promise<string> {\n    this.validateRequired(feedbackData, ['feedbackType'])\n\n    const id = this.generateId()\n    const now = this.formatTimestamp()\n\n    const query = `\n      INSERT INTO ${this.tableName} (\n        id, session_id, feedback_type, content, rating, created_at\n      ) VALUES (?, ?, ?, ?, ?, ?)\n    `\n\n    const params = [\n      id,\n      feedbackData.sessionId || null,\n      feedbackData.feedbackType,\n      feedbackData.content || null,\n      feedbackData.rating || null,\n      now,\n    ]\n\n    await this.executeRun(query, params)\n\n    // \u6E05\u9664\u7EDF\u8BA1\u7F13\u5B58\n    await this.deleteCache('feedback_stats')\n\n    return id\n  }\n\n  /**\n   * \u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\n   */\n  async getStats(): Promise<FeedbackStats> {\n    const cacheKey = 'feedback_stats'\n    const cached = await this.getCache<FeedbackStats>(cacheKey)\n    \n    if (cached) {\n      return cached\n    }\n\n    const query = `\n      SELECT \n        COUNT(*) as total_feedback,\n        COUNT(CASE WHEN feedback_type = 'like' THEN 1 END) as positive_count,\n        COUNT(CASE WHEN feedback_type = 'dislike' THEN 1 END) as negative_count,\n        AVG(CASE WHEN rating IS NOT NULL THEN rating END) as average_rating,\n        COUNT(CASE WHEN feedback_type = 'comment' THEN 1 END) as comment_count\n      FROM ${this.tableName}\n    `\n\n    const result = await this.executeQueryFirst<any>(query)\n\n    const stats: FeedbackStats = {\n      totalFeedback: result?.total_feedback || 0,\n      positiveCount: result?.positive_count || 0,\n      negativeCount: result?.negative_count || 0,\n      averageRating: result?.average_rating || 0,\n      commentCount: result?.comment_count || 0,\n    }\n\n    // \u7F13\u5B58\u7EDF\u8BA1\u6570\u636E\n    await this.setCache(cacheKey, stats, 1800) // 30\u5206\u949F\u7F13\u5B58\n\n    return stats\n  }\n\n  /**\n   * \u6839\u636E\u4F1A\u8BDDID\u83B7\u53D6\u53CD\u9988\n   */\n  async findBySessionId(sessionId: string): Promise<UserFeedback[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE session_id = ? \n      ORDER BY created_at DESC\n    `\n\n    return this.executeQuery<UserFeedback>(query, [sessionId])\n  }\n\n  /**\n   * \u83B7\u53D6\u6700\u8FD1\u7684\u53CD\u9988\n   */\n  async getRecentFeedback(limit: number = 20): Promise<UserFeedback[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      ORDER BY created_at DESC \n      LIMIT ?\n    `\n\n    return this.executeQuery<UserFeedback>(query, [limit])\n  }\n\n  /**\n   * \u83B7\u53D6\u8BC4\u8BBA\u53CD\u9988\n   */\n  async getComments(limit: number = 50): Promise<UserFeedback[]> {\n    const query = `\n      SELECT * FROM ${this.tableName} \n      WHERE feedback_type = 'comment' AND content IS NOT NULL\n      ORDER BY created_at DESC \n      LIMIT ?\n    `\n\n    return this.executeQuery<UserFeedback>(query, [limit])\n  }\n\n  /**\n   * \u6839\u636E\u65F6\u95F4\u8303\u56F4\u83B7\u53D6\u53CD\u9988\u7EDF\u8BA1\n   */\n  async getStatsByDateRange(\n    startDate: string,\n    endDate: string\n  ): Promise<FeedbackStats> {\n    const query = `\n      SELECT \n        COUNT(*) as total_feedback,\n        COUNT(CASE WHEN feedback_type = 'like' THEN 1 END) as positive_count,\n        COUNT(CASE WHEN feedback_type = 'dislike' THEN 1 END) as negative_count,\n        AVG(CASE WHEN rating IS NOT NULL THEN rating END) as average_rating,\n        COUNT(CASE WHEN feedback_type = 'comment' THEN 1 END) as comment_count\n      FROM ${this.tableName}\n      WHERE created_at BETWEEN ? AND ?\n    `\n\n    const result = await this.executeQueryFirst<any>(query, [startDate, endDate])\n\n    return {\n      totalFeedback: result?.total_feedback || 0,\n      positiveCount: result?.positive_count || 0,\n      negativeCount: result?.negative_count || 0,\n      averageRating: result?.average_rating || 0,\n      commentCount: result?.comment_count || 0,\n    }\n  }\n\n  /**\n   * \u5220\u9664\u8FC7\u671F\u7684\u53CD\u9988\uFF08\u6570\u636E\u6E05\u7406\uFF09\n   */\n  async deleteExpiredFeedback(daysOld: number = 365): Promise<number> {\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - daysOld)\n    const cutoffTimestamp = this.formatTimestamp(cutoffDate)\n\n    const query = `DELETE FROM ${this.tableName} WHERE created_at < ?`\n    const result = await this.executeRun(query, [cutoffTimestamp])\n\n    // \u6E05\u9664\u7EDF\u8BA1\u7F13\u5B58\n    await this.deleteCache('feedback_stats')\n\n    return (result as any).changes || 0\n  }\n}", "/**\n * \u5FC3\u7406\u6D4B\u8BD5\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface PsychologySessionData {\n  id: string;\n  testSessionId: string;\n  testSubtype: \"mbti\" | \"big_five\" | \"phq9\" | \"happiness\";\n  personalityType?: string;\n  dimensionScores?: Record<string, number>;\n  riskLevel?: \"minimal\" | \"mild\" | \"moderate\" | \"moderately_severe\" | \"severe\";\n  happinessDomains?: Record<string, number>;\n  createdAt: Date;\n}\n\nexport interface CreatePsychologySessionData {\n  testSessionId: string;\n  testSubtype: \"mbti\" | \"big_five\" | \"phq9\" | \"happiness\";\n  personalityType?: string;\n  dimensionScores?: Record<string, number>;\n  riskLevel?: \"minimal\" | \"mild\" | \"moderate\" | \"moderately_severe\" | \"severe\";\n  happinessDomains?: Record<string, number>;\n}\n\nexport class PsychologySessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"psychology_sessions\");\n  }\n\n  async create(data: CreatePsychologySessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO psychology_sessions (\n          id, test_session_id, test_subtype, personality_type,\n          dimension_scores, risk_level, happiness_domains, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.testSubtype,\n        data.personalityType || null,\n        data.dimensionScores ? JSON.stringify(data.dimensionScores) : null,\n        data.riskLevel || null,\n        data.happinessDomains ? JSON.stringify(data.happinessDomains) : null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create psychology session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<PsychologySessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM psychology_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySubtype(subtype: string): Promise<PsychologySessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM psychology_sessions WHERE test_subtype = ? ORDER BY created_at DESC\")\n      .bind(subtype)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getStatsBySubtype(subtype: string): Promise<{\n    totalSessions: number;\n    averageScores?: Record<string, number>;\n    personalityTypeDistribution?: Record<string, number>;\n  }> {\n    const totalResult = await this.db\n      .prepare(\"SELECT COUNT(*) as total FROM psychology_sessions WHERE test_subtype = ?\")\n      .bind(subtype)\n      .first();\n\n    const stats = {\n              totalSessions: (totalResult?.['total'] as number) || 0,\n    };\n\n    if (subtype === \"mbti\") {\n      const typeDistribution = await this.db\n        .prepare(`\n          SELECT personality_type, COUNT(*) as count \n          FROM psychology_sessions \n          WHERE test_subtype = ? AND personality_type IS NOT NULL\n          GROUP BY personality_type\n        `)\n        .bind(subtype)\n        .all();\n\n      const distribution: Record<string, number> = {};\n      typeDistribution.results.forEach((row: any) => {\n        distribution[row.personality_type] = row.count;\n      });\n\n      return { ...stats, personalityTypeDistribution: distribution };\n    }\n\n    return stats;\n  }\n\n  private mapToData(row: any): PsychologySessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      testSubtype: row.test_subtype as \"mbti\" | \"big_five\" | \"phq9\" | \"happiness\",\n      personalityType: (row.personality_type as string) ?? \"\",\n      dimensionScores: row.dimension_scores ? JSON.parse(row.dimension_scores as string) : undefined,\n      riskLevel: (row.risk_level as \"minimal\" | \"mild\" | \"moderate\" | \"moderately_severe\" | \"severe\") ?? \"minimal\",\n      happinessDomains: row.happiness_domains ? JSON.parse(row.happiness_domains as string) : undefined,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u5360\u661F\u5206\u6790\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface AstrologySessionData {\n  id: string;\n  testSessionId: string;\n  birthDate: Date;\n  birthTime?: string;\n  birthLocation?: string;\n  sunSign: string;\n  moonSign?: string;\n  risingSign?: string;\n  planetaryPositions?: Record<string, any>;\n  housePositions?: Record<string, any>;\n  aspects?: Record<string, any>;\n  createdAt: Date;\n}\n\nexport interface CreateAstrologySessionData {\n  testSessionId: string;\n  birthDate: Date;\n  birthTime?: string;\n  birthLocation?: string;\n  sunSign: string;\n  moonSign?: string;\n  risingSign?: string;\n  planetaryPositions?: Record<string, any>;\n  housePositions?: Record<string, any>;\n  aspects?: Record<string, any>;\n}\n\nexport class AstrologySessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"astrology_sessions\");\n  }\n\n  async create(data: CreateAstrologySessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO astrology_sessions (\n          id, test_session_id, birth_date, birth_time, birth_location,\n          sun_sign, moon_sign, rising_sign, planetary_positions,\n          house_positions, aspects, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.birthDate.toISOString().split('T')[0], // YYYY-MM-DD format\n        data.birthTime || null,\n        data.birthLocation || null,\n        data.sunSign,\n        data.moonSign || null,\n        data.risingSign || null,\n        data.planetaryPositions ? JSON.stringify(data.planetaryPositions) : null,\n        data.housePositions ? JSON.stringify(data.housePositions) : null,\n        data.aspects ? JSON.stringify(data.aspects) : null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create astrology session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<AstrologySessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM astrology_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySunSign(sunSign: string): Promise<AstrologySessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM astrology_sessions WHERE sun_sign = ? ORDER BY created_at DESC\")\n      .bind(sunSign)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getSunSignDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT sun_sign, COUNT(*) as count \n        FROM astrology_sessions \n        GROUP BY sun_sign\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.sun_sign] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async findByBirthDateRange(startDate: Date, endDate: Date): Promise<AstrologySessionData[]> {\n    const results = await this.db\n      .prepare(`\n        SELECT * FROM astrology_sessions \n        WHERE birth_date BETWEEN ? AND ? \n        ORDER BY birth_date DESC\n      `)\n      .bind(\n        startDate.toISOString().split('T')[0],\n        endDate.toISOString().split('T')[0]\n      )\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  private mapToData(row: any): AstrologySessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      birthDate: new Date(row.birth_date as string),\n      birthTime: (row.birth_time as string) ?? \"\",\n      birthLocation: (row.birth_location as string) ?? \"\",\n      sunSign: row.sun_sign as string,\n      moonSign: (row.moon_sign as string) ?? \"\",\n      risingSign: (row.rising_sign as string) ?? \"\",\n      planetaryPositions: row.planetary_positions ? JSON.parse(row.planetary_positions as string) : undefined,\n      housePositions: row.house_positions ? JSON.parse(row.house_positions as string) : undefined,\n      aspects: row.aspects ? JSON.parse(row.aspects as string) : undefined,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u5854\u7F57\u724C\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface TarotCard {\n  id: string;\n  name: string;\n  suit?: string;\n  number?: number;\n  isReversed: boolean;\n  meaning: string;\n  reversedMeaning?: string;\n}\n\nexport interface TarotSessionData {\n  id: string;\n  testSessionId: string;\n  spreadType: \"single\" | \"three_card\" | \"celtic_cross\" | \"relationship\" | \"career\";\n  cardsDrawn: TarotCard[];\n  cardPositions?: Record<string, any>;\n  interpretationTheme?: string;\n  questionCategory?: \"love\" | \"career\" | \"finance\" | \"health\" | \"spiritual\" | \"general\";\n  createdAt: Date;\n}\n\nexport interface CreateTarotSessionData {\n  testSessionId: string;\n  spreadType: \"single\" | \"three_card\" | \"celtic_cross\" | \"relationship\" | \"career\";\n  cardsDrawn: TarotCard[];\n  cardPositions?: Record<string, any>;\n  interpretationTheme?: string;\n  questionCategory?: \"love\" | \"career\" | \"finance\" | \"health\" | \"spiritual\" | \"general\";\n}\n\nexport class TarotSessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"tarot_sessions\");\n  }\n\n  async create(data: CreateTarotSessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO tarot_sessions (\n          id, test_session_id, spread_type, cards_drawn,\n          card_positions, interpretation_theme, question_category, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.spreadType,\n        JSON.stringify(data.cardsDrawn),\n        data.cardPositions ? JSON.stringify(data.cardPositions) : null,\n        data.interpretationTheme || null,\n        data.questionCategory || null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create tarot session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<TarotSessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM tarot_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySpreadType(spreadType: string): Promise<TarotSessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM tarot_sessions WHERE spread_type = ? ORDER BY created_at DESC\")\n      .bind(spreadType)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async findByQuestionCategory(category: string): Promise<TarotSessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM tarot_sessions WHERE question_category = ? ORDER BY created_at DESC\")\n      .bind(category)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getSpreadTypeStats(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT spread_type, COUNT(*) as count \n        FROM tarot_sessions \n        GROUP BY spread_type\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const stats: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      stats[row.spread_type] = row.count;\n    });\n\n    return stats;\n  }\n\n  async getPopularCards(limit: number = 10): Promise<Array<{ cardName: string; count: number }>> {\n    // \u8FD9\u9700\u8981\u66F4\u590D\u6742\u7684\u67E5\u8BE2\u6765\u5206\u6790JSON\u6570\u7EC4\u4E2D\u7684\u5361\u724C\n    // \u7B80\u5316\u7248\u672C\uFF0C\u5B9E\u9645\u5B9E\u73B0\u53EF\u80FD\u9700\u8981\u66F4\u590D\u6742\u7684JSON\u67E5\u8BE2\n    const results = await this.db\n      .prepare(`\n        SELECT cards_drawn, COUNT(*) as session_count\n        FROM tarot_sessions \n        GROUP BY cards_drawn\n        ORDER BY session_count DESC\n        LIMIT ?\n      `)\n      .bind(limit)\n      .all();\n\n    const cardCounts: Record<string, number> = {};\n    \n    results.results.forEach((row: any) => {\n      try {\n        const cards = JSON.parse(row.cards_drawn as string) as TarotCard[];\n        cards.forEach(card => {\n          cardCounts[card.name] = (cardCounts[card.name] || 0) + 1;\n        });\n      } catch (error) {\n        console.warn(\"Failed to parse cards_drawn JSON:\", error);\n      }\n    });\n\n    return Object.entries(cardCounts)\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, limit)\n      .map(([cardName, count]) => ({ cardName, count }));\n  }\n\n  private mapToData(row: any): TarotSessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      spreadType: row.spread_type as \"single\" | \"three_card\" | \"celtic_cross\" | \"relationship\" | \"career\",\n      cardsDrawn: JSON.parse(row.cards_drawn as string) as TarotCard[],\n      cardPositions: row.card_positions ? JSON.parse(row.card_positions as string) : undefined,\n      interpretationTheme: (row.interpretation_theme as string) ?? \"\",\n      questionCategory: (row.question_category as \"love\" | \"career\" | \"finance\" | \"health\" | \"spiritual\" | \"general\") ?? \"general\",\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u804C\u4E1A\u53D1\u5C55\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface CareerSessionData {\n  id: string;\n  testSessionId: string;\n  testSubtype: \"holland\" | \"career_values\" | \"skills_assessment\";\n  hollandCode?: string;\n  interestScores?: Record<string, number>;\n  valuesRanking?: string[];\n  skillsProfile?: Record<string, number>;\n  careerMatches?: Array<{\n    title: string;\n    matchScore: number;\n    description: string;\n    requirements: string[];\n  }>;\n  createdAt: Date;\n}\n\nexport interface CreateCareerSessionData {\n  testSessionId: string;\n  testSubtype: \"holland\" | \"career_values\" | \"skills_assessment\";\n  hollandCode?: string;\n  interestScores?: Record<string, number>;\n  valuesRanking?: string[];\n  skillsProfile?: Record<string, number>;\n  careerMatches?: Array<{\n    title: string;\n    matchScore: number;\n    description: string;\n    requirements: string[];\n  }>;\n}\n\nexport class CareerSessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"career_sessions\");\n  }\n\n  async create(data: CreateCareerSessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO career_sessions (\n          id, test_session_id, test_subtype, holland_code,\n          interest_scores, values_ranking, skills_profile,\n          career_matches, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.testSubtype,\n        data.hollandCode || null,\n        data.interestScores ? JSON.stringify(data.interestScores) : null,\n        data.valuesRanking ? JSON.stringify(data.valuesRanking) : null,\n        data.skillsProfile ? JSON.stringify(data.skillsProfile) : null,\n        data.careerMatches ? JSON.stringify(data.careerMatches) : null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create career session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<CareerSessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM career_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySubtype(subtype: string): Promise<CareerSessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM career_sessions WHERE test_subtype = ? ORDER BY created_at DESC\")\n      .bind(subtype)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getHollandCodeDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT holland_code, COUNT(*) as count \n        FROM career_sessions \n        WHERE holland_code IS NOT NULL\n        GROUP BY holland_code\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.holland_code] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getPopularCareers(limit: number = 20): Promise<Array<{ title: string; count: number }>> {\n    const results = await this.db\n      .prepare(\"SELECT career_matches FROM career_sessions WHERE career_matches IS NOT NULL\")\n      .all();\n\n    const careerCounts: Record<string, number> = {};\n\n    results.results.forEach((row: any) => {\n      try {\n        const matches = JSON.parse(row.career_matches as string) as Array<{\n          title: string;\n          matchScore: number;\n          description: string;\n          requirements: string[];\n        }>;\n        \n        matches.forEach(match => {\n          careerCounts[match.title] = (careerCounts[match.title] || 0) + 1;\n        });\n      } catch (error) {\n        console.warn(\"Failed to parse career_matches JSON:\", error);\n      }\n    });\n\n    return Object.entries(careerCounts)\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, limit)\n      .map(([title, count]) => ({ title, count }));\n  }\n\n  async getAverageInterestScores(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(\"SELECT interest_scores FROM career_sessions WHERE interest_scores IS NOT NULL\")\n      .all();\n\n    const scoreTotals: Record<string, { sum: number; count: number }> = {};\n\n    results.results.forEach((row: any) => {\n      try {\n        const scores = JSON.parse(row.interest_scores as string) as Record<string, number>;\n        \n        Object.entries(scores).forEach(([interest, score]) => {\n          if (!scoreTotals[interest]) {\n            scoreTotals[interest] = { sum: 0, count: 0 };\n          }\n          scoreTotals[interest].sum += score;\n          scoreTotals[interest].count += 1;\n        });\n      } catch (error) {\n        console.warn(\"Failed to parse interest_scores JSON:\", error);\n      }\n    });\n\n    const averages: Record<string, number> = {};\n    Object.entries(scoreTotals).forEach(([interest, { sum, count }]) => {\n      averages[interest] = Math.round((sum / count) * 100) / 100;\n    });\n\n    return averages;\n  }\n\n  private mapToData(row: any): CareerSessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      testSubtype: row.test_subtype as \"holland\" | \"career_values\" | \"skills_assessment\",\n      hollandCode: (row.holland_code as string) ?? \"\",\n      interestScores: row.interest_scores ? JSON.parse(row.interest_scores as string) : undefined,\n      valuesRanking: row.values_ranking ? JSON.parse(row.values_ranking as string) : undefined,\n      skillsProfile: row.skills_profile ? JSON.parse(row.skills_profile as string) : undefined,\n      careerMatches: row.career_matches ? JSON.parse(row.career_matches as string) : undefined,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u5B66\u4E60\u80FD\u529B\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface LearningSessionData {\n  id: string;\n  testSessionId: string;\n  testSubtype: \"vark\" | \"raven\" | \"learning_strategies\";\n  learningStyle?: \"visual\" | \"auditory\" | \"reading\" | \"kinesthetic\" | \"multimodal\";\n  cognitiveScore?: number;\n  percentileRank?: number;\n  learningPreferences?: Record<string, number>;\n  strategyRecommendations?: string[];\n  createdAt: Date;\n}\n\nexport interface CreateLearningSessionData {\n  testSessionId: string;\n  testSubtype: \"vark\" | \"raven\" | \"learning_strategies\";\n  learningStyle?: \"visual\" | \"auditory\" | \"reading\" | \"kinesthetic\" | \"multimodal\";\n  cognitiveScore?: number;\n  percentileRank?: number;\n  learningPreferences?: Record<string, number>;\n  strategyRecommendations?: string[];\n}\n\nexport class LearningSessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"learning_sessions\");\n  }\n\n  async create(data: CreateLearningSessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO learning_sessions (\n          id, test_session_id, test_subtype, learning_style,\n          cognitive_score, percentile_rank, learning_preferences,\n          strategy_recommendations, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.testSubtype,\n        data.learningStyle || null,\n        data.cognitiveScore || null,\n        data.percentileRank || null,\n        data.learningPreferences ? JSON.stringify(data.learningPreferences) : null,\n        data.strategyRecommendations ? JSON.stringify(data.strategyRecommendations) : null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create learning session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<LearningSessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM learning_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySubtype(subtype: string): Promise<LearningSessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM learning_sessions WHERE test_subtype = ? ORDER BY created_at DESC\")\n      .bind(subtype)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getLearningStyleDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT learning_style, COUNT(*) as count \n        FROM learning_sessions \n        WHERE learning_style IS NOT NULL\n        GROUP BY learning_style\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.learning_style] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getCognitiveScoreStats(): Promise<{\n    average: number;\n    median: number;\n    min: number;\n    max: number;\n    count: number;\n  }> {\n    const results = await this.db\n      .prepare(`\n        SELECT \n          AVG(cognitive_score) as avg_score,\n          MIN(cognitive_score) as min_score,\n          MAX(cognitive_score) as max_score,\n          COUNT(*) as count\n        FROM learning_sessions \n        WHERE cognitive_score IS NOT NULL\n      `)\n      .first();\n\n    // \u83B7\u53D6\u4E2D\u4F4D\u6570\u9700\u8981\u989D\u5916\u67E5\u8BE2\n    const medianResult = await this.db\n      .prepare(`\n        SELECT cognitive_score\n        FROM learning_sessions \n        WHERE cognitive_score IS NOT NULL\n        ORDER BY cognitive_score\n        LIMIT 1 OFFSET (\n          SELECT (COUNT(*) - 1) / 2 \n          FROM learning_sessions \n          WHERE cognitive_score IS NOT NULL\n        )\n      `)\n      .first();\n\n    return {\n              average: Math.round((results?.['avg_score'] as number || 0) * 100) / 100,\n        median: medianResult?.['cognitive_score'] as number || 0,\n        min: results?.['min_score'] as number || 0,\n        max: results?.['max_score'] as number || 0,\n        count: results?.['count'] as number || 0,\n    };\n  }\n\n  async getPercentileDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT \n          CASE \n            WHEN percentile_rank >= 90 THEN '90-100'\n            WHEN percentile_rank >= 75 THEN '75-89'\n            WHEN percentile_rank >= 50 THEN '50-74'\n            WHEN percentile_rank >= 25 THEN '25-49'\n            ELSE '0-24'\n          END as percentile_range,\n          COUNT(*) as count\n        FROM learning_sessions \n        WHERE percentile_rank IS NOT NULL\n        GROUP BY percentile_range\n        ORDER BY percentile_range DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.percentile_range] = row.count;\n    });\n\n    return distribution;\n  }\n\n  private mapToData(row: any): LearningSessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      testSubtype: row.test_subtype as \"vark\" | \"raven\" | \"learning_strategies\",\n      learningStyle: (row.learning_style as \"visual\" | \"auditory\" | \"reading\" | \"kinesthetic\" | \"multimodal\") ?? \"visual\",\n      cognitiveScore: (row.cognitive_score as number) ?? 0,\n      percentileRank: (row.percentile_rank as number) ?? 0,\n      learningPreferences: row.learning_preferences ? JSON.parse(row.learning_preferences as string) : undefined,\n      strategyRecommendations: row.strategy_recommendations ? JSON.parse(row.strategy_recommendations as string) : undefined,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u60C5\u611F\u5173\u7CFB\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface RelationshipSessionData {\n  id: string;\n  testSessionId: string;\n  testSubtype: \"love_languages\" | \"attachment_style\" | \"relationship_skills\";\n  primaryLoveLanguage?: \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\";\n  secondaryLoveLanguage?: \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\";\n  attachmentStyle?: \"secure\" | \"anxious\" | \"avoidant\" | \"disorganized\";\n  relationshipSkills?: Record<string, number>;\n  communicationStyle?: \"assertive\" | \"passive\" | \"aggressive\" | \"passive_aggressive\";\n  createdAt: Date;\n}\n\nexport interface CreateRelationshipSessionData {\n  testSessionId: string;\n  testSubtype: \"love_languages\" | \"attachment_style\" | \"relationship_skills\";\n  primaryLoveLanguage?: \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\";\n  secondaryLoveLanguage?: \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\";\n  attachmentStyle?: \"secure\" | \"anxious\" | \"avoidant\" | \"disorganized\";\n  relationshipSkills?: Record<string, number>;\n  communicationStyle?: \"assertive\" | \"passive\" | \"aggressive\" | \"passive_aggressive\";\n}\n\nexport class RelationshipSessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"relationship_sessions\");\n  }\n\n  async create(data: CreateRelationshipSessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO relationship_sessions (\n          id, test_session_id, test_subtype, primary_love_language,\n          secondary_love_language, attachment_style, relationship_skills,\n          communication_style, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.testSubtype,\n        data.primaryLoveLanguage || null,\n        data.secondaryLoveLanguage || null,\n        data.attachmentStyle || null,\n        data.relationshipSkills ? JSON.stringify(data.relationshipSkills) : null,\n        data.communicationStyle || null,\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create relationship session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<RelationshipSessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM relationship_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findBySubtype(subtype: string): Promise<RelationshipSessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM relationship_sessions WHERE test_subtype = ? ORDER BY created_at DESC\")\n      .bind(subtype)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getLoveLanguageDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT primary_love_language, COUNT(*) as count \n        FROM relationship_sessions \n        WHERE primary_love_language IS NOT NULL\n        GROUP BY primary_love_language\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.primary_love_language] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getAttachmentStyleDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT attachment_style, COUNT(*) as count \n        FROM relationship_sessions \n        WHERE attachment_style IS NOT NULL\n        GROUP BY attachment_style\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.attachment_style] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getCommunicationStyleDistribution(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT communication_style, COUNT(*) as count \n        FROM relationship_sessions \n        WHERE communication_style IS NOT NULL\n        GROUP BY communication_style\n        ORDER BY count DESC\n      `)\n      .all();\n\n    const distribution: Record<string, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.communication_style] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getAverageRelationshipSkills(): Promise<Record<string, number>> {\n    const results = await this.db\n      .prepare(\"SELECT relationship_skills FROM relationship_sessions WHERE relationship_skills IS NOT NULL\")\n      .all();\n\n    const skillTotals: Record<string, { sum: number; count: number }> = {};\n\n    results.results.forEach((row: any) => {\n      try {\n        const skills = JSON.parse(row.relationship_skills as string) as Record<string, number>;\n        \n        Object.entries(skills).forEach(([skill, score]) => {\n          if (!skillTotals[skill]) {\n            skillTotals[skill] = { sum: 0, count: 0 };\n          }\n          skillTotals[skill].sum += score;\n          skillTotals[skill].count += 1;\n        });\n      } catch (error) {\n        console.warn(\"Failed to parse relationship_skills JSON:\", error);\n      }\n    });\n\n    const averages: Record<string, number> = {};\n    Object.entries(skillTotals).forEach(([skill, { sum, count }]) => {\n      averages[skill] = Math.round((sum / count) * 100) / 100;\n    });\n\n    return averages;\n  }\n\n  async findCompatiblePairs(): Promise<Array<{\n    loveLanguage: string;\n    attachmentStyle: string;\n    count: number;\n  }>> {\n    const results = await this.db\n      .prepare(`\n        SELECT \n          primary_love_language,\n          attachment_style,\n          COUNT(*) as count\n        FROM relationship_sessions \n        WHERE primary_love_language IS NOT NULL \n          AND attachment_style IS NOT NULL\n        GROUP BY primary_love_language, attachment_style\n        ORDER BY count DESC\n        LIMIT 10\n      `)\n      .all();\n\n    return results.results.map((row: any) => ({\n      loveLanguage: row.primary_love_language,\n      attachmentStyle: row.attachment_style,\n      count: row.count,\n    }));\n  }\n\n  private mapToData(row: any): RelationshipSessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      testSubtype: row.test_subtype as \"love_languages\" | \"attachment_style\" | \"relationship_skills\",\n      primaryLoveLanguage: row.primary_love_language as \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\" || undefined,\n      secondaryLoveLanguage: row.secondary_love_language as \"words_of_affirmation\" | \"acts_of_service\" | \"receiving_gifts\" | \"quality_time\" | \"physical_touch\" || undefined,\n      attachmentStyle: row.attachment_style as \"secure\" | \"anxious\" | \"avoidant\" | \"disorganized\" || undefined,\n      relationshipSkills: row.relationship_skills ? JSON.parse(row.relationship_skills as string) : undefined,\n      communicationStyle: row.communication_style as \"assertive\" | \"passive\" | \"aggressive\" | \"passive_aggressive\" || undefined,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u547D\u7406\u5206\u6790\u4F1A\u8BDD\u6570\u636E\u6A21\u578B\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u6A21\u578B\u89C4\u8303\n */\n\nimport { BaseModel } from \"./BaseModel\";\nimport type { Env } from \"../index\";\n\nexport interface NumerologyChart {\n  lifePathNumber: number;\n  destinyNumber: number;\n  soulUrgeNumber: number;\n  personalityNumber: number;\n  birthDayNumber: number;\n  challengeNumbers: number[];\n  pinnacleNumbers: number[];\n  personalYearNumber?: number;\n  karmicDebtNumbers?: number[];\n  masterNumbers?: number[];\n}\n\nexport interface NumerologySessionData {\n  id: string;\n  testSessionId: string;\n  birthDate: Date;\n  fullName: string;\n  lifePathNumber: number;\n  destinyNumber: number;\n  soulUrgeNumber: number;\n  personalityNumber: number;\n  birthDayNumber: number;\n  numerologyChart: NumerologyChart;\n  createdAt: Date;\n}\n\nexport interface CreateNumerologySessionData {\n  testSessionId: string;\n  birthDate: Date;\n  fullName: string;\n  lifePathNumber: number;\n  destinyNumber: number;\n  soulUrgeNumber: number;\n  personalityNumber: number;\n  birthDayNumber: number;\n  numerologyChart: NumerologyChart;\n}\n\nexport class NumerologySessionModel extends BaseModel {\n  constructor(env: Env) {\n    super(env, \"numerology_sessions\");\n  }\n\n  async create(data: CreateNumerologySessionData): Promise<string> {\n    const id = this.generateId();\n\n    const result = await this.db\n      .prepare(`\n        INSERT INTO numerology_sessions (\n          id, test_session_id, birth_date, full_name,\n          life_path_number, destiny_number, soul_urge_number,\n          personality_number, birth_day_number, numerology_chart, created_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n      .bind(\n        id,\n        data.testSessionId,\n        data.birthDate.toISOString().split('T')[0], // YYYY-MM-DD format\n        data.fullName,\n        data.lifePathNumber,\n        data.destinyNumber,\n        data.soulUrgeNumber,\n        data.personalityNumber,\n        data.birthDayNumber,\n        JSON.stringify(data.numerologyChart),\n        new Date().toISOString(),\n      )\n      .run();\n\n    if (!result.success) {\n      throw this.createError(\"Failed to create numerology session\", \"DATABASE_ERROR\");\n    }\n\n    return id;\n  }\n\n  async findByTestSessionId(testSessionId: string): Promise<NumerologySessionData | null> {\n    const result = await this.db\n      .prepare(\"SELECT * FROM numerology_sessions WHERE test_session_id = ?\")\n      .bind(testSessionId)\n      .first();\n\n    if (!result) {\n      return null;\n    }\n\n    return this.mapToData(result);\n  }\n\n  async findByLifePathNumber(lifePathNumber: number): Promise<NumerologySessionData[]> {\n    const results = await this.db\n      .prepare(\"SELECT * FROM numerology_sessions WHERE life_path_number = ? ORDER BY created_at DESC\")\n      .bind(lifePathNumber)\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getLifePathDistribution(): Promise<Record<number, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT life_path_number, COUNT(*) as count \n        FROM numerology_sessions \n        GROUP BY life_path_number\n        ORDER BY life_path_number\n      `)\n      .all();\n\n    const distribution: Record<number, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.life_path_number] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async getDestinyNumberDistribution(): Promise<Record<number, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT destiny_number, COUNT(*) as count \n        FROM numerology_sessions \n        GROUP BY destiny_number\n        ORDER BY destiny_number\n      `)\n      .all();\n\n    const distribution: Record<number, number> = {};\n    results.results.forEach((row: any) => {\n      distribution[row.destiny_number] = row.count;\n    });\n\n    return distribution;\n  }\n\n  async findByBirthDateRange(startDate: Date, endDate: Date): Promise<NumerologySessionData[]> {\n    const results = await this.db\n      .prepare(`\n        SELECT * FROM numerology_sessions \n        WHERE birth_date BETWEEN ? AND ? \n        ORDER BY birth_date DESC\n      `)\n      .bind(\n        startDate.toISOString().split('T')[0],\n        endDate.toISOString().split('T')[0]\n      )\n      .all();\n\n    return results.results.map(result => this.mapToData(result));\n  }\n\n  async getMasterNumberStats(): Promise<{\n    masterNumber11: number;\n    masterNumber22: number;\n    masterNumber33: number;\n    totalMasterNumbers: number;\n  }> {\n    const results = await this.db\n      .prepare(`\n        SELECT numerology_chart FROM numerology_sessions\n      `)\n      .all();\n\n    let masterNumber11 = 0;\n    let masterNumber22 = 0;\n    let masterNumber33 = 0;\n\n    results.results.forEach((row: any) => {\n      try {\n        const chart = JSON.parse(row.numerology_chart as string) as NumerologyChart;\n        if (chart.masterNumbers) {\n          if (chart.masterNumbers.includes(11)) masterNumber11++;\n          if (chart.masterNumbers.includes(22)) masterNumber22++;\n          if (chart.masterNumbers.includes(33)) masterNumber33++;\n        }\n      } catch (error) {\n        console.warn(\"Failed to parse numerology_chart JSON:\", error);\n      }\n    });\n\n    return {\n      masterNumber11,\n      masterNumber22,\n      masterNumber33,\n      totalMasterNumbers: masterNumber11 + masterNumber22 + masterNumber33,\n    };\n  }\n\n  async getKarmicDebtStats(): Promise<Record<number, number>> {\n    const results = await this.db\n      .prepare(`\n        SELECT numerology_chart FROM numerology_sessions\n      `)\n      .all();\n\n    const karmicDebtCounts: Record<number, number> = {\n      13: 0,\n      14: 0,\n      16: 0,\n      19: 0,\n    };\n\n    results.results.forEach((row: any) => {\n      try {\n        const chart = JSON.parse(row.numerology_chart as string) as NumerologyChart;\n        if (chart.karmicDebtNumbers) {\n          chart.karmicDebtNumbers.forEach((number) => {\n            if (Object.prototype.hasOwnProperty.call(karmicDebtCounts, number)) {\n              karmicDebtCounts[number] = (karmicDebtCounts[number] || 0) + 1;\n            }\n          });\n        }\n      } catch (error) {\n        console.warn(\"Failed to parse numerology_chart JSON:\", error);\n      }\n    });\n\n    return karmicDebtCounts;\n  }\n\n  async getBirthDatePatterns(): Promise<Array<{\n    month: number;\n    count: number;\n  }>> {\n    const results = await this.db\n      .prepare(`\n        SELECT \n          CAST(strftime('%m', birth_date) AS INTEGER) as month,\n          COUNT(*) as count\n        FROM numerology_sessions \n        GROUP BY month\n        ORDER BY month\n      `)\n      .all();\n\n    return results.results.map((row: any) => ({\n      month: row.month,\n      count: row.count,\n    }));\n  }\n\n  private mapToData(row: any): NumerologySessionData {\n    return {\n      id: row.id as string,\n      testSessionId: row.test_session_id as string,\n      birthDate: new Date(row.birth_date as string),\n      fullName: row.full_name as string,\n      lifePathNumber: row.life_path_number as number,\n      destinyNumber: row.destiny_number as number,\n      soulUrgeNumber: row.soul_urge_number as number,\n      personalityNumber: row.personality_number as number,\n      birthDayNumber: row.birth_day_number as number,\n      numerologyChart: JSON.parse(row.numerology_chart as string) as NumerologyChart,\n      createdAt: new Date(row.created_at as string),\n    };\n  }\n}", "/**\n * \u7EDF\u4E00\u6570\u636E\u5E93\u670D\u52A1\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684\u6570\u636E\u8BBF\u95EE\u5C42\u89C4\u8303\n */\n\nimport type { Env } from \"../index\";\n// import { DatabaseManager } from \"../utils/databaseManager\"; // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\nimport { MigrationRunner } from \"../utils/migrationRunner\";\nimport { ModuleError, ERROR_CODES } from \"../../../shared/types/errors\";\nimport {\n  TestTypeModel,\n  TestSessionModel,\n  BlogArticleModel,\n  UserFeedbackModel,\n  AnalyticsEventModel,\n  PsychologySessionModel,\n  AstrologySessionModel,\n  TarotSessionModel,\n  CareerSessionModel,\n  LearningSessionModel,\n  RelationshipSessionModel,\n  NumerologySessionModel,\n} from \"../models\";\n\nexport class DatabaseService {\n  // private dbManager: DatabaseManager; // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n  private migrationRunner: MigrationRunner;\n  \n  // \u66B4\u9732\u6570\u636E\u5E93\u8FDE\u63A5\u4F9B\u8DEF\u7531\u4F7F\u7528\n  public get db(): D1Database {\n    if (!this.env.DB) {\n      throw new Error('Database connection not available');\n    }\n    return this.env.DB;\n  }\n\n  // \u6A21\u578B\u5B9E\u4F8B\n  public testTypes: TestTypeModel;\n  public testSessions: TestSessionModel;\n  public blogArticles: BlogArticleModel;\n  public userFeedback: UserFeedbackModel;\n  public analyticsEvents: AnalyticsEventModel;\n  public psychologySessions: PsychologySessionModel;\n  public astrologySessions: AstrologySessionModel;\n  public tarotSessions: TarotSessionModel;\n  public careerSessions: CareerSessionModel;\n  public learningSessions: LearningSessionModel;\n  public relationshipSessions: RelationshipSessionModel;\n  public numerologySessions: NumerologySessionModel;\n\n  constructor(private env: Env) {\n    // this.dbManager = new DatabaseManager(env); // \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n    this.migrationRunner = new MigrationRunner(env);\n\n    // \u521D\u59CB\u5316\u6240\u6709\u6A21\u578B\u5B9E\u4F8B\n    this.testTypes = new TestTypeModel(env);\n    this.testSessions = new TestSessionModel(env);\n    this.blogArticles = new BlogArticleModel(env);\n    this.userFeedback = new UserFeedbackModel(env);\n    this.analyticsEvents = new AnalyticsEventModel(env);\n    this.psychologySessions = new PsychologySessionModel(env);\n    this.astrologySessions = new AstrologySessionModel(env);\n    this.tarotSessions = new TarotSessionModel(env);\n    this.careerSessions = new CareerSessionModel(env);\n    this.learningSessions = new LearningSessionModel(env);\n    this.relationshipSessions = new RelationshipSessionModel(env);\n    this.numerologySessions = new NumerologySessionModel(env);\n  }\n\n  /**\n   * \u521D\u59CB\u5316\u6570\u636E\u5E93\n   * \u8FD0\u884C\u6240\u6709\u5F85\u6267\u884C\u7684\u8FC1\u79FB\n   */\n  async initialize(): Promise<void> {\n    try {\n      // \u6682\u65E0\u8FC1\u79FB\u5217\u8868\uFF0C\u4F20\u5165\u7A7A\u6570\u7EC4\uFF0C\u6EE1\u8DB3\u7B7E\u540D\n      await this.migrationRunner.runMigrations([]);\n      console.log(\"Database initialized successfully\");\n    } catch (error) {\n      console.error(\"Database initialization failed:\", error);\n      throw new ModuleError(\n        \"Failed to initialize database\",\n        ERROR_CODES.DATABASE_ERROR,\n        500,\n        error\n      );\n    }\n  }\n\n  /**\n   * \u68C0\u67E5\u6570\u636E\u5E93\u5065\u5EB7\u72B6\u6001\n   */\n  async healthCheck(): Promise<{\n    status: \"healthy\" | \"unhealthy\";\n    details: {\n      connection: boolean;\n      migrations: boolean;\n      tables: string[];\n    };\n  }> {\n    try {\n      const connectionTest = await this.db.prepare(\"SELECT 1\").first();\n      const connectionHealthy = connectionTest !== null;\n\n      const migrationsHealthy = true;\n\n      const tablesResult = await this.db.prepare(`\n        SELECT name FROM sqlite_master \n        WHERE type='table' AND name NOT LIKE 'sqlite_%'\n        ORDER BY name\n      `).all();\n      const tables = (tablesResult.success ? tablesResult.results : []).map((row: any) => row.name);\n\n      const requiredTables = [\n        \"test_types\",\n        \"test_sessions\",\n        \"blog_articles\",\n        \"user_feedback\",\n        \"analytics_events\",\n        \"sys_configs\",\n      ];\n      const tablesHealthy = requiredTables.every(table => tables.includes(table));\n\n      const isHealthy = connectionHealthy && migrationsHealthy && tablesHealthy;\n\n      return {\n        status: isHealthy ? \"healthy\" : \"unhealthy\",\n        details: {\n          connection: connectionHealthy,\n          migrations: migrationsHealthy,\n          tables,\n        },\n      };\n    } catch (error) {\n      console.error(\"Database health check failed:\", error);\n      return {\n        status: \"unhealthy\",\n        details: {\n          connection: false,\n          migrations: false,\n          tables: [],\n        },\n      };\n    }\n  }\n\n  /**\n   * \u83B7\u53D6\u6570\u636E\u5E93\u7EDF\u8BA1\u4FE1\u606F\n   */\n  async getStatistics(): Promise<{\n    totalTestSessions: number;\n    totalBlogArticles: number;\n    totalFeedback: number;\n    totalAnalyticsEvents: number;\n    moduleSessionCounts: Record<string, number>;\n    recentActivity: {\n      testsLast24h: number;\n      feedbackLast24h: number;\n      articlesLast7d: number;\n    };\n  }> {\n    try {\n      const [\n        testSessionsCount,\n        blogArticlesCount,\n        feedbackCount,\n        analyticsEventsCount,\n        psychologyCount,\n        astrologyCount,\n        tarotCount,\n        careerCount,\n        learningCount,\n        relationshipCount,\n        numerologyCount,\n        recentTests,\n        recentFeedback,\n        recentArticles,\n      ] = await Promise.all([\n        this.testSessions.count(),\n        this.blogArticles.count(),\n        this.userFeedback.count(),\n        this.analyticsEvents.count(),\n        this.psychologySessions.count(),\n        this.astrologySessions.count(),\n        this.tarotSessions.count(),\n        this.careerSessions.count(),\n        this.learningSessions.count(),\n        this.relationshipSessions.count(),\n        this.numerologySessions.count(),\n        this.getRecentTestsCount(24), // 24\u5C0F\u65F6\u5185\n        this.getRecentFeedbackCount(24), // 24\u5C0F\u65F6\u5185\n        this.getRecentArticlesCount(7), // 7\u5929\u5185\n      ]);\n\n      return {\n        totalTestSessions: testSessionsCount,\n        totalBlogArticles: blogArticlesCount,\n        totalFeedback: feedbackCount,\n        totalAnalyticsEvents: analyticsEventsCount,\n        moduleSessionCounts: {\n          psychology: psychologyCount,\n          astrology: astrologyCount,\n          tarot: tarotCount,\n          career: careerCount,\n          learning: learningCount,\n          relationship: relationshipCount,\n          numerology: numerologyCount,\n        },\n        recentActivity: {\n          testsLast24h: recentTests,\n          feedbackLast24h: recentFeedback,\n          articlesLast7d: recentArticles,\n        },\n      };\n    } catch (error) {\n      console.error(\"Failed to get database statistics:\", error);\n      throw new ModuleError(\n        \"Failed to retrieve database statistics\",\n        ERROR_CODES.DATABASE_ERROR,\n        500,\n        error\n      );\n    }\n  }\n\n  /**\n   * \u6E05\u7406\u8FC7\u671F\u6570\u636E\n   */\n  async cleanupExpiredData(retentionDays: number = 90): Promise<{\n    deletedSessions: number;\n    deletedEvents: number;\n    deletedFeedback: number;\n  }> {\n    try {\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - retentionDays);\n      const cutoffISO = cutoffDate.toISOString();\n\n      const deletedSessions = await this.db\n        .prepare(\"DELETE FROM test_sessions WHERE created_at < ?\")\n        .bind(cutoffISO)\n        .run();\n\n      const deletedEvents = await this.db\n        .prepare(\"DELETE FROM analytics_events WHERE timestamp < ?\")\n        .bind(cutoffISO)\n        .run();\n\n      const feedbackCutoff = new Date();\n      feedbackCutoff.setDate(feedbackCutoff.getDate() - 30);\n      const deletedFeedback = await this.db\n        .prepare(\"DELETE FROM user_feedback WHERE created_at < ?\")\n        .bind(feedbackCutoff.toISOString())\n        .run();\n\n      return {\n        deletedSessions: (deletedSessions as any).changes || 0,\n        deletedEvents: (deletedEvents as any).changes || 0,\n        deletedFeedback: (deletedFeedback as any).changes || 0,\n      };\n    } catch (error) {\n      console.error(\"Failed to cleanup expired data:\", error);\n      throw new ModuleError(\n        \"Failed to cleanup expired data\",\n        ERROR_CODES.DATABASE_ERROR,\n        500,\n        error\n      );\n    }\n  }\n\n  /**\n   * \u5907\u4EFD\u6570\u636E\u5E93\n   */\n  async createBackup(): Promise<{\n    backupId: string;\n    timestamp: string;\n    size: number;\n  }> {\n    try {\n      const backupId = `backup_${Date.now()}`;\n      const timestamp = new Date().toISOString();\n\n      // \u8FD9\u91CC\u5E94\u8BE5\u5B9E\u73B0\u5B9E\u9645\u7684\u5907\u4EFD\u903B\u8F91\n      // \u5728Cloudflare\u73AF\u5883\u4E2D\uFF0C\u53EF\u80FD\u9700\u8981\u4F7F\u7528R2\u5B58\u50A8\n      console.log(`Creating backup: ${backupId} at ${timestamp}`);\n\n      return {\n        backupId,\n        timestamp,\n        size: 0, // \u5B9E\u9645\u5B9E\u73B0\u65F6\u5E94\u8BE5\u8FD4\u56DE\u5907\u4EFD\u6587\u4EF6\u5927\u5C0F\n      };\n    } catch (error) {\n      console.error(\"Failed to create backup:\", error);\n      throw new ModuleError(\n        \"Failed to create database backup\",\n        ERROR_CODES.DATABASE_ERROR,\n        500,\n        error\n      );\n    }\n  }\n\n  // \u79C1\u6709\u8F85\u52A9\u65B9\u6CD5\n  private async getRecentTestsCount(hours: number): Promise<number> {\n    const cutoffDate = new Date();\n    cutoffDate.setHours(cutoffDate.getHours() - hours);\n    const result = await this.db\n      .prepare(\"SELECT COUNT(*) as count FROM test_sessions WHERE created_at > ?\")\n      .bind(cutoffDate.toISOString())\n      .first();\n    return (result?.['count'] as number) || 0;\n  }\n\n  private async getRecentFeedbackCount(hours: number): Promise<number> {\n    const cutoffDate = new Date();\n    cutoffDate.setHours(cutoffDate.getHours() - hours);\n    const result = await this.db\n      .prepare(\"SELECT COUNT(*) as count FROM user_feedback WHERE created_at > ?\")\n      .bind(cutoffDate.toISOString())\n      .first();\n    return (result?.['count'] as number) || 0;\n  }\n\n  private async getRecentArticlesCount(days: number): Promise<number> {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    const result = await this.db\n      .prepare(\"SELECT COUNT(*) as count FROM blog_articles WHERE created_at > ?\")\n      .bind(cutoffDate.toISOString())\n      .first();\n    return (result?.['count'] as number) || 0;\n  }\n\n  // \u63D0\u4F9B\u6700\u5C0F\u5316count\u5B9E\u73B0\uFF0C\u4F9B\u7EDF\u8BA1\u4F7F\u7528 - \u672A\u4F7F\u7528\uFF0C\u6682\u65F6\u6CE8\u91CA\n  // private async countTable(_tableName: string): Promise<number> {\n  //   const result = await this.db\n  //     .prepare(`SELECT COUNT(*) as count FROM ${_tableName}`)\n  //     .first();\n  //   return (result?.['count'] as number) || 0;\n  // }\n}", "/**\n * Cloudflare Workers \u4E3B\u5165\u53E3\u6587\u4EF6\n * \u9075\u5FAA\u7EDF\u4E00\u5F00\u53D1\u6807\u51C6\u7684API\u67B6\u6784\n */\n\nimport { Hono } from \"hono\";\nimport { cors } from \"hono/cors\";\nimport { logger } from \"hono/logger\";\nimport { secureHeaders } from \"hono/secure-headers\";\nimport { errorHandler } from \"./middleware/errorHandler\";\nimport { requestValidator } from \"./middleware/requestValidator\";\nimport { testRoutes } from \"./routes/tests\";\nimport { blogRoutes } from \"./routes/blog\";\nimport { feedbackRoutes } from \"./routes/feedback\";\nimport { analyticsRoutes } from \"./routes/analytics\";\nimport { systemRoutes } from \"./routes/system\";\nimport { homepageRoutes } from \"./routes/homepage\";\nimport { searchRoutes } from \"./routes/search\";\nimport { cookiesRoutes } from \"./routes/cookies\";\nimport { DatabaseService } from \"./services/DatabaseService\";\n\nimport type { APIResponse } from \"../../shared/types/apiResponse\";\nimport type { AppContext } from \"./types/env\";\n\n// Cloudflare Workers \u73AF\u5883\u7C7B\u578B\u5B9A\u4E49\nexport interface Env {\n  DB?: D1Database; // \u53EF\u9009\uFF0C\u652F\u6301\u672C\u5730\u5F00\u53D1\n  KV?: KVNamespace; // \u53EF\u9009\uFF0C\u652F\u6301\u672C\u5730\u5F00\u53D1\n  BUCKET?: R2Bucket; // \u53EF\u9009\uFF0C\u652F\u6301\u672C\u5730\u5F00\u53D1\n  ENVIRONMENT: string;\n  [key: string]: any; // \u6DFB\u52A0\u7D22\u5F15\u7B7E\u540D\n}\n\n\n\nconst app = new Hono<AppContext>();\n\n// \u5B89\u5168\u5934\u4E2D\u95F4\u4EF6\napp.use(\"*\", secureHeaders({\n  xFrameOptions: \"DENY\",\n  xContentTypeOptions: \"nosniff\",\n  referrerPolicy: \"strict-origin-when-cross-origin\",\n  crossOriginEmbedderPolicy: false, // Cloudflare Workers\u4E0D\u652F\u6301\n}));\n\n// CORS\u4E2D\u95F4\u4EF6\napp.use(\"*\", cors({\n  origin: (origin) => {\n    // \u5141\u8BB8\u7684\u57DF\u540D\u5217\u8868\n    const allowedOrigins = [\n      \"http://localhost:3000\",\n      \"http://localhost:5173\",\n      \"https://*.pages.dev\",\n      \"https://*.cloudflare.com\",\n    ];\n    \n    if (!origin) return origin; // \u5141\u8BB8\u65E0origin\u7684\u8BF7\u6C42\uFF08\u5982Postman\uFF09\uFF0C\u8FD4\u56DEnull/undefined\u8868\u793A\u5141\u8BB8\n    \n    const allowed = allowedOrigins.some(allowed => {\n      if (allowed.includes(\"*\")) {\n        const pattern = allowed.replace(\"*\", \".*\");\n        return new RegExp(pattern).test(origin);\n      }\n      return allowed === origin;\n    });\n    return allowed ? origin : null;\n  },\n  allowMethods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\", \"HEAD\"],\n  allowHeaders: [\n    \"Content-Type\", \n    \"Authorization\", \n    \"X-Request-ID\",\n    \"X-API-Key\",\n    \"Cache-Control\",\n  ],\n  credentials: true,\n  maxAge: 86400, // 24\u5C0F\u65F6\n}));\n\n// \u8BF7\u6C42\u65E5\u5FD7\u4E2D\u95F4\u4EF6\napp.use(\"*\", logger());\n\n// \u8BF7\u6C42\u9A8C\u8BC1\u4E2D\u95F4\u4EF6\napp.use(\"*\", requestValidator);\n\n// \u670D\u52A1\u521D\u59CB\u5316\u4E2D\u95F4\u4EF6\napp.use(\"*\", async (c, next) => {\n  // \u751F\u6210\u8BF7\u6C42ID\n  const requestId = c.req.header(\"X-Request-ID\") || crypto.randomUUID();\n  \n  // \u521D\u59CB\u5316\u6570\u636E\u5E93\u670D\u52A1 - \u4F7F\u7528Cloudflare D1\n  const dbService = new DatabaseService(c.env);\n  \n  // \u8BBE\u7F6E\u4E0A\u4E0B\u6587\u53D8\u91CF\n  c.set(\"requestId\", requestId);\n  c.set(\"dbService\", dbService);\n  \n  await next();\n});\n\n// \u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\napp.onError(errorHandler);\n\n// \u7CFB\u7EDF\u5065\u5EB7\u68C0\u67E5\u548C\u7BA1\u7406\u7AEF\u70B9\napp.route(\"/api/system\", systemRoutes);\n\n// \u8C03\u8BD5\u7AEF\u70B9 - \u68C0\u67E5\u73AF\u5883\u53D8\u91CF\napp.get(\"/debug/env\", async (c) => {\n  return c.json({\n    success: true,\n    data: {\n      hasDB: !!c.env.DB,\n      hasKV: !!c.env.KV,\n      hasBUCKET: !!c.env?.['BUCKET'],\n      environment: c.env.ENVIRONMENT,\n      envKeys: Object.keys(c.env),\n    },\n    timestamp: new Date().toISOString(),\n  });\n});\n\n// \u589E\u5F3A\u7684\u5065\u5EB7\u68C0\u67E5\u7AEF\u70B9\napp.get(\"/health\", async (c) => {\n  try {\n    const dbService = c.get(\"dbService\");\n    const healthCheck = await dbService.healthCheck();\n    \n    const response: APIResponse = {\n      success: true,\n      data: {\n        status: healthCheck.status,\n        timestamp: new Date().toISOString(),\n        environment: c.env.ENVIRONMENT,\n        version: \"1.0.0\",\n        services: {\n          database: healthCheck.status,\n          cache: \"healthy\", // \u7B80\u5316\u7248\u672C\uFF0C\u5B9E\u9645\u5E94\u8BE5\u68C0\u67E5KV\n          storage: \"healthy\", // \u7B80\u5316\u7248\u672C\uFF0C\u5B9E\u9645\u5E94\u8BE5\u68C0\u67E5R2\n        },\n      },\n      timestamp: new Date().toISOString(),\n      requestId: (c.get(\"requestId\") as string) || \"\",\n    };\n\n    return c.json(response, healthCheck.status === \"healthy\" ? 200 : 503);\n  } catch (error) {\n    const response: APIResponse = {\n      success: false,\n      error: \"Health check failed\",\n      timestamp: new Date().toISOString(),\n      requestId: (c.get(\"requestId\") as string) || \"\",\n    };\n    \n    return c.json(response, 503);\n  }\n});\n\n// API\u8DEF\u7531\napp.route(\"/api/tests\", testRoutes);\napp.route(\"/api/blog\", blogRoutes);\napp.route(\"/api/feedback\", feedbackRoutes);\napp.route(\"/api/analytics\", analyticsRoutes);\napp.route(\"/api/homepage\", homepageRoutes);\napp.route(\"/api/search\", searchRoutes);\napp.route(\"/api/cookies\", cookiesRoutes);\n// app.route(\"/api/recommendations\", recommendationsRoutes); // \u6682\u65F6\u6CE8\u91CA\uFF0C\u672A\u5B9A\u4E49\n// app.route(\"/api/seo\", seoRoutes); // \u6682\u65F6\u6CE8\u91CA\uFF0C\u672A\u5B9A\u4E49\n\n// API\u7248\u672C\u4FE1\u606F\napp.get(\"/api\", (c) => {\n  const response: APIResponse = {\n    success: true,\n    data: {\n      name: \"\u7EFC\u5408\u6D4B\u8BD5\u5E73\u53F0 API\",\n      version: \"1.0.0\",\n      description: \"\u4E13\u4E1A\u7684\u5FC3\u7406\u6D4B\u8BD5\u3001\u5360\u661F\u5206\u6790\u3001\u5854\u7F57\u5360\u535C\u7B49\u5728\u7EBF\u6D4B\u8BD5\u670D\u52A1API\",\n              endpoints: {\n          tests: \"/api/tests\",\n          blog: \"/api/blog\", \n          feedback: \"/api/feedback\",\n          analytics: \"/api/analytics\",\n          homepage: \"/api/homepage\",\n          search: \"/api/search\",\n          cookies: \"/api/cookies\",\n          // recommendations: \"/api/recommendations\", // \u6682\u65F6\u6CE8\u91CA\n          // seo: \"/api/seo\", // \u6682\u65F6\u6CE8\u91CA\n          system: \"/api/system\",\n        },\n      documentation: \"https://docs.example.com/api\",\n    },\n    timestamp: new Date().toISOString(),\n    requestId: (c.get(\"requestId\") as string) || \"\",\n  };\n  \n  return c.json(response);\n});\n\n// 404\u5904\u7406\napp.notFound((c) => {\n  const response: APIResponse = {\n    success: false,\n    error: \"Not Found\",\n    message: \"The requested resource was not found\",\n    timestamp: new Date().toISOString(),\n    requestId: (c.get(\"requestId\") as string) || \"\",\n  };\n  \n  return c.json(response, 404);\n});\n\n// 405 Method Not Allowed\u5904\u7406\napp.all(\"*\", (c) => {\n  const response: APIResponse = {\n    success: false,\n    error: \"Method Not Allowed\",\n    message: `Method ${c.req.method} is not allowed for this endpoint`,\n    timestamp: new Date().toISOString(),\n    requestId: (c.get(\"requestId\") as string) || \"\",\n  };\n  \n  return c.json(response, 405);\n});\n\nexport default app;", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/.wrangler/tmp/bundle-FY8UX0/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/.wrangler/tmp/bundle-FY8UX0/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/meowz/project/Web/getyourluck/comprehensive-testing-platform/backend/.wrangler/tmp/bundle-FY8UX0/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;;;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS,CAAC;AAAA;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;AC5BD,IAAI,YAAY,wBAAC,SAAS;AACxB,QAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,MAAI,MAAM,CAAC,MAAM,IAAI;AACnB,UAAM,MAAM;AAAA,EACd;AACA,SAAO;AACT,GANgB;AAOhB,IAAI,mBAAmB,wBAAC,cAAc;AACpC,QAAM,EAAE,QAAQ,KAAK,IAAI,sBAAsB,SAAS;AACxD,QAAM,QAAQ,UAAU,IAAI;AAC5B,SAAO,kBAAkB,OAAO,MAAM;AACxC,GAJuB;AAKvB,IAAI,wBAAwB,wBAAC,SAAS;AACpC,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,QAAQ,cAAc,CAAC,OAAO,UAAU;AAClD,UAAM,OAAO,IAAI,KAAK;AACtB,WAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,WAAO;AAAA,EACT,CAAC;AACD,SAAO,EAAE,QAAQ,KAAK;AACxB,GAR4B;AAS5B,IAAI,oBAAoB,wBAAC,OAAO,WAAW;AACzC,WAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,UAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,aAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,UAAI,MAAM,CAAC,EAAE,SAAS,IAAI,GAAG;AAC3B,cAAM,CAAC,IAAI,MAAM,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,GAXwB;AAYxB,IAAI,eAAe,CAAC;AACpB,IAAI,aAAa,wBAAC,UAAU;AAC1B,MAAI,UAAU,KAAK;AACjB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,MAAM,MAAM,6BAA6B;AACvD,MAAI,OAAO;AACT,QAAI,CAAC,aAAa,KAAK,GAAG;AACxB,UAAI,MAAM,CAAC,GAAG;AACZ,qBAAa,KAAK,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI,OAAO,MAAM,MAAM,CAAC,IAAI,GAAG,CAAC;AAAA,MAC1E,OAAO;AACL,qBAAa,KAAK,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI;AAAA,MAC9C;AAAA,IACF;AACA,WAAO,aAAa,KAAK;AAAA,EAC3B;AACA,SAAO;AACT,GAhBiB;AAiBjB,IAAI,UAAU,wBAAC,YAAY;AACzB,QAAM,QAAQ,QAAQ,IAAI,MAAM,4BAA4B;AAC5D,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC5B,GAHc;AAId,IAAI,kBAAkB,wBAAC,QAAQ;AAC7B,QAAM,aAAa,IAAI,QAAQ,KAAK,CAAC;AACrC,SAAO,eAAe,KAAK,KAAK,MAAM,IAAI,MAAM,aAAa,CAAC;AAChE,GAHsB;AAItB,IAAI,kBAAkB,wBAAC,YAAY;AACjC,QAAM,SAAS,QAAQ,OAAO;AAC9B,SAAO,OAAO,SAAS,KAAK,OAAO,OAAO,SAAS,CAAC,MAAM,MAAM,OAAO,MAAM,GAAG,EAAE,IAAI;AACxF,GAHsB;AAItB,IAAI,YAAY,2BAAI,UAAU;AAC5B,MAAI,IAAI;AACR,MAAI,gBAAgB;AACpB,WAAS,QAAQ,OAAO;AACtB,QAAI,EAAE,EAAE,SAAS,CAAC,MAAM,KAAK;AAC3B,UAAI,EAAE,MAAM,GAAG,EAAE;AACjB,sBAAgB;AAAA,IAClB;AACA,QAAI,KAAK,CAAC,MAAM,KAAK;AACnB,aAAO,IAAI,IAAI;AAAA,IACjB;AACA,QAAI,SAAS,OAAO,eAAe;AACjC,UAAI,GAAG,CAAC;AAAA,IACV,WAAW,SAAS,KAAK;AACvB,UAAI,GAAG,CAAC,GAAG,IAAI;AAAA,IACjB;AACA,QAAI,SAAS,OAAO,MAAM,IAAI;AAC5B,UAAI;AAAA,IACN;AAAA,EACF;AACA,SAAO;AACT,GArBgB;AAsBhB,IAAI,yBAAyB,wBAAC,SAAS;AACrC,MAAI,CAAC,KAAK,MAAM,SAAS,GAAG;AAC1B,WAAO;AAAA,EACT;AACA,QAAM,WAAW,KAAK,MAAM,GAAG;AAC/B,QAAM,UAAU,CAAC;AACjB,MAAI,WAAW;AACf,WAAS,QAAQ,CAAC,YAAY;AAC5B,QAAI,YAAY,MAAM,CAAC,KAAK,KAAK,OAAO,GAAG;AACzC,kBAAY,MAAM;AAAA,IACpB,WAAW,KAAK,KAAK,OAAO,GAAG;AAC7B,UAAI,KAAK,KAAK,OAAO,GAAG;AACtB,YAAI,QAAQ,WAAW,KAAK,aAAa,IAAI;AAC3C,kBAAQ,KAAK,GAAG;AAAA,QAClB,OAAO;AACL,kBAAQ,KAAK,QAAQ;AAAA,QACvB;AACA,cAAM,kBAAkB,QAAQ,QAAQ,KAAK,EAAE;AAC/C,oBAAY,MAAM;AAClB,gBAAQ,KAAK,QAAQ;AAAA,MACvB,OAAO;AACL,oBAAY,MAAM;AAAA,MACpB;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO,QAAQ,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AACvD,GA1B6B;AA2B7B,IAAI,aAAa,wBAAC,UAAU;AAC1B,MAAI,CAAC,OAAO,KAAK,KAAK,GAAG;AACvB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,YAAQ,MAAM,QAAQ,OAAO,GAAG;AAAA,EAClC;AACA,SAAO,IAAI,KAAK,KAAK,IAAI,oBAAoB,KAAK,IAAI;AACxD,GARiB;AASjB,IAAI,iBAAiB,wBAAC,KAAK,KAAK,aAAa;AAC3C,MAAI;AACJ,MAAI,CAAC,YAAY,OAAO,CAAC,OAAO,KAAK,GAAG,GAAG;AACzC,QAAI,YAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AACxC,QAAI,cAAc,IAAI;AACpB,kBAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AAAA,IACtC;AACA,WAAO,cAAc,IAAI;AACvB,YAAM,kBAAkB,IAAI,WAAW,YAAY,IAAI,SAAS,CAAC;AACjE,UAAI,oBAAoB,IAAI;AAC1B,cAAM,aAAa,YAAY,IAAI,SAAS;AAC5C,cAAM,WAAW,IAAI,QAAQ,KAAK,UAAU;AAC5C,eAAO,WAAW,IAAI,MAAM,YAAY,aAAa,KAAK,SAAS,QAAQ,CAAC;AAAA,MAC9E,WAAW,mBAAmB,MAAM,MAAM,eAAe,GAAG;AAC1D,eAAO;AAAA,MACT;AACA,kBAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,YAAY,CAAC;AAAA,IAClD;AACA,cAAU,OAAO,KAAK,GAAG;AACzB,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,IACT;AAAA,EACF;AACA,QAAM,UAAU,CAAC;AACjB,cAAY,UAAU,OAAO,KAAK,GAAG;AACrC,MAAI,WAAW,IAAI,QAAQ,KAAK,CAAC;AACjC,SAAO,aAAa,IAAI;AACtB,UAAM,eAAe,IAAI,QAAQ,KAAK,WAAW,CAAC;AAClD,QAAI,aAAa,IAAI,QAAQ,KAAK,QAAQ;AAC1C,QAAI,aAAa,gBAAgB,iBAAiB,IAAI;AACpD,mBAAa;AAAA,IACf;AACA,QAAI,OAAO,IAAI;AAAA,MACb,WAAW;AAAA,MACX,eAAe,KAAK,iBAAiB,KAAK,SAAS,eAAe;AAAA,IACpE;AACA,QAAI,SAAS;AACX,aAAO,WAAW,IAAI;AAAA,IACxB;AACA,eAAW;AACX,QAAI,SAAS,IAAI;AACf;AAAA,IACF;AACA,QAAI;AACJ,QAAI,eAAe,IAAI;AACrB,cAAQ;AAAA,IACV,OAAO;AACL,cAAQ,IAAI,MAAM,aAAa,GAAG,iBAAiB,KAAK,SAAS,YAAY;AAC7E,UAAI,SAAS;AACX,gBAAQ,WAAW,KAAK;AAAA,MAC1B;AAAA,IACF;AACA,QAAI,UAAU;AACZ,UAAI,EAAE,QAAQ,IAAI,KAAK,MAAM,QAAQ,QAAQ,IAAI,CAAC,IAAI;AACpD,gBAAQ,IAAI,IAAI,CAAC;AAAA,MACnB;AACA;AACA,cAAQ,IAAI,EAAE,KAAK,KAAK;AAAA,IAC1B,OAAO;AACL,cAAQ,IAAI,MAAM,QAAQ,IAAI,IAAI;AAAA,IACpC;AAAA,EACF;AACA,SAAO,MAAM,QAAQ,GAAG,IAAI;AAC9B,GA/DqB;AAgErB,IAAI,gBAAgB;AACpB,IAAI,iBAAiB,wBAAC,KAAK,QAAQ;AACjC,SAAO,eAAe,KAAK,KAAK,IAAI;AACtC,GAFqB;AAGrB,IAAI,sBAAsB;;;ACtK1B,IAAI,uBAAuB;AAC3B,IAAI,wBAAwB;AAC5B,IAAI,QAAQ,wBAAC,QAAQ,SAAS;AAC5B,QAAM,QAAQ,OAAO,KAAK,EAAE,MAAM,GAAG;AACrC,SAAO,MAAM,OAAO,CAAC,cAAc,YAAY;AAC7C,cAAU,QAAQ,KAAK;AACvB,UAAM,gBAAgB,QAAQ,QAAQ,GAAG;AACzC,QAAI,kBAAkB,IAAI;AACxB,aAAO;AAAA,IACT;AACA,UAAM,aAAa,QAAQ,UAAU,GAAG,aAAa,EAAE,KAAK;AAC5D,QAAI,QAAQ,SAAS,cAAc,CAAC,qBAAqB,KAAK,UAAU,GAAG;AACzE,aAAO;AAAA,IACT;AACA,QAAI,cAAc,QAAQ,UAAU,gBAAgB,CAAC,EAAE,KAAK;AAC5D,QAAI,YAAY,WAAW,GAAG,KAAK,YAAY,SAAS,GAAG,GAAG;AAC5D,oBAAc,YAAY,MAAM,GAAG,EAAE;AAAA,IACvC;AACA,QAAI,sBAAsB,KAAK,WAAW,GAAG;AAC3C,mBAAa,UAAU,IAAI,oBAAoB,WAAW;AAAA,IAC5D;AACA,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP,GArBY;AAwCZ,IAAI,aAAa,wBAAC,MAAM,OAAO,MAAM,CAAC,MAAM;AAC1C,MAAI,SAAS,GAAG,IAAI,IAAI,KAAK;AAC7B,MAAI,OAAO,OAAO,IAAI,WAAW,YAAY,IAAI,UAAU,GAAG;AAC5D,cAAU,aAAa,KAAK,MAAM,IAAI,MAAM,CAAC;AAAA,EAC/C;AACA,MAAI,IAAI,QAAQ;AACd,cAAU,YAAY,IAAI,MAAM;AAAA,EAClC;AACA,MAAI,IAAI,MAAM;AACZ,cAAU,UAAU,IAAI,IAAI;AAAA,EAC9B;AACA,MAAI,IAAI,SAAS;AACf,cAAU,aAAa,IAAI,QAAQ,YAAY,CAAC;AAAA,EAClD;AACA,MAAI,IAAI,UAAU;AAChB,cAAU;AAAA,EACZ;AACA,MAAI,IAAI,QAAQ;AACd,cAAU;AAAA,EACZ;AACA,MAAI,IAAI,UAAU;AAChB,cAAU,cAAc,IAAI,QAAQ;AAAA,EACtC;AACA,MAAI,IAAI,aAAa;AACnB,cAAU;AAAA,EACZ;AACA,SAAO;AACT,GA3BiB;AA4BjB,IAAI,YAAY,wBAAC,MAAM,OAAO,MAAM,CAAC,MAAM;AACzC,UAAQ,mBAAmB,KAAK;AAChC,SAAO,WAAW,MAAM,OAAO,GAAG;AACpC,GAHgB;;;AC7FhB,IAAI,2BAA2B;AAAA,EAC7B,WAAW;AAAA,EACX,cAAc;AAAA,EACd,QAAQ;AACV;AACA,IAAI,MAAM,wBAAC,OAAO,cAAc;AAC9B,QAAM,gBAAgB,IAAI,OAAO,KAAK;AACtC,gBAAc,YAAY;AAC1B,gBAAc,YAAY;AAC1B,SAAO;AACT,GALU;AAqEV,IAAI,kBAAkB,8BAAO,KAAK,OAAO,mBAAmB,SAAS,WAAW;AAC9E,QAAM,YAAY,IAAI;AACtB,MAAI,CAAC,WAAW,QAAQ;AACtB,WAAO,QAAQ,QAAQ,GAAG;AAAA,EAC5B;AACA,MAAI,QAAQ;AACV,WAAO,CAAC,KAAK;AAAA,EACf,OAAO;AACL,aAAS,CAAC,GAAG;AAAA,EACf;AACA,QAAM,SAAS,QAAQ,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,QAAQ,QAAQ,CAAC,CAAC,CAAC,EAAE;AAAA,IAC9E,CAAC,QAAQ,QAAQ;AAAA,MACf,IAAI,OAAO,OAAO,EAAE,IAAI,CAAC,SAAS,gBAAgB,MAAM,OAAO,OAAO,SAAS,MAAM,CAAC;AAAA,IACxF,EAAE,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,EACxB;AACA,MAAI,mBAAmB;AACrB,WAAO,IAAI,MAAM,QAAQ,SAAS;AAAA,EACpC,OAAO;AACL,WAAO;AAAA,EACT;AACF,GApBsB;;;AC1EtB,IAAI,eAAe,MAAM;AAAA,EADzB,OACyB;AAAA;AAAA;AAAA,EACvB,YAAY,UAAU,WAAW;AAC/B,SAAK,mBAAmB,CAAC;AACzB,SAAK,WAAW;AAChB,SAAK,SAAS,SAAS,UAAU;AACjC,SAAK,UAAU,IAAI,YAAY;AAC/B,UAAM,SAAS,UAAU,UAAU;AACnC,SAAK,mBAAmB,IAAI,eAAe;AAAA,MACzC,MAAM,KAAK,YAAY;AACrB,cAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,eAAO,WAAW,MAAM,IAAI,WAAW,QAAQ,KAAK;AAAA,MACtD;AAAA,MACA,QAAQ,6BAAM;AACZ,aAAK,iBAAiB,QAAQ,CAAC,eAAe,WAAW,CAAC;AAAA,MAC5D,GAFQ;AAAA,IAGV,CAAC;AAAA,EACH;AAAA,EACA,MAAM,MAAM,OAAO;AACjB,QAAI;AACF,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ,KAAK,QAAQ,OAAO,KAAK;AAAA,MACnC;AACA,YAAM,KAAK,OAAO,MAAM,KAAK;AAAA,IAC/B,SAAS,GAAG;AAAA,IACZ;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,QAAQ,OAAO;AACnB,UAAM,KAAK,MAAM,QAAQ,IAAI;AAC7B,WAAO;AAAA,EACT;AAAA,EACA,MAAM,IAAI;AACR,WAAO,IAAI,QAAQ,CAAC,QAAQ,WAAW,KAAK,EAAE,CAAC;AAAA,EACjD;AAAA,EACA,MAAM,QAAQ;AACZ,QAAI;AACF,YAAM,KAAK,OAAO,MAAM;AAAA,IAC1B,SAAS,GAAG;AAAA,IACZ;AAAA,EACF;AAAA,EACA,MAAM,KAAK,MAAM;AACf,SAAK,OAAO,YAAY;AACxB,UAAM,KAAK,OAAO,KAAK,UAAU,EAAE,cAAc,KAAK,CAAC;AACvD,SAAK,SAAS,KAAK,SAAS,UAAU;AAAA,EACxC;AAAA,EACA,MAAM,QAAQ,UAAU;AACtB,SAAK,iBAAiB,KAAK,QAAQ;AAAA,EACrC;AACF;;;ACjDA,IAAI,gBAAgB,wBAAC,KAAK,QAAQ,QAAQ;AACxC,MAAI,CAAC,OAAO,IAAI,GAAG;AACjB,UAAM,UAAU,YAAY,GAAG;AACnC,GAHoB;AAIpB,IAAI,eAAe,wBAAC,KAAK,QAAQ,WAAW;AAC1C,gBAAc,KAAK,QAAQ,yBAAyB;AACpD,SAAO,SAAS,OAAO,KAAK,GAAG,IAAI,OAAO,IAAI,GAAG;AACnD,GAHmB;AAInB,IAAI,eAAe,wBAAC,KAAK,QAAQ,UAAU;AACzC,MAAI,OAAO,IAAI,GAAG;AAChB,UAAM,UAAU,mDAAmD;AACrE,oBAAkB,UAAU,OAAO,IAAI,GAAG,IAAI,OAAO,IAAI,KAAK,KAAK;AACrE,GAJmB;AAKnB,IAAI,eAAe,wBAAC,KAAK,QAAQ,OAAO,WAAW;AACjD,gBAAc,KAAK,QAAQ,wBAAwB;AACnD,WAAS,OAAO,KAAK,KAAK,KAAK,IAAI,OAAO,IAAI,KAAK,KAAK;AACxD,SAAO;AACT,GAJmB;AAUnB,IAAI,aAAa;AACjB,IAAI,aAAa,wBAAC,SAAS,MAAM,CAAC,MAAM;AACtC,SAAO,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM,QAAQ,IAAI,KAAK,KAAK,CAAC;AACrE,SAAO;AACT,GAHiB;AAIjB,IAAI;AAAJ,IAAa;AAAb,IAA4B;AAA5B,IAAsC;AAAtC,IAAwD;AAAxD,IAA8D;AAC9D,IAAI,UAAU,MAAM;AAAA,EA7BpB,OA6BoB;AAAA;AAAA;AAAA,EAClB,YAAY,KAAK,SAAS;AACxB,SAAK,MAAM,CAAC;AACZ,SAAK,OAAO,CAAC;AACb,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,iBAAa,MAAM,SAAS,GAAG;AAC/B,iBAAa,MAAM,eAAe,MAAM;AACxC,iBAAa,MAAM,UAAU,MAAM;AACnC,iBAAa,MAAM,kBAAkB,MAAM;AAC3C,iBAAa,MAAM,MAAM,MAAM;AAC/B,iBAAa,MAAM,UAAU,IAAI;AACjC,SAAK,WAAW,CAAC,YAAY,KAAK,KAAK,OAAO;AAC9C,SAAK,kBAAkB,MAAM,IAAI,SAAS;AAC1C,SAAK,SAAS,IAAI,SAAS,KAAK,SAAS,GAAG,IAAI;AAChD,SAAK,cAAc,CAAC,aAAa;AAC/B,WAAK,WAAW;AAAA,IAClB;AACA,SAAK,SAAS,CAAC,MAAM,OAAOA,aAAY;AACtC,UAAI,UAAU,QAAQ;AACpB,YAAI,aAAa,MAAM,QAAQ,GAAG;AAChC,uBAAa,MAAM,QAAQ,EAAE,OAAO,IAAI;AAAA,QAC1C,WAAW,aAAa,MAAM,gBAAgB,GAAG;AAC/C,iBAAO,aAAa,MAAM,gBAAgB,EAAE,KAAK,kBAAkB,CAAC;AAAA,QACtE;AACA,YAAI,KAAK,WAAW;AAClB,eAAK,IAAI,QAAQ,OAAO,IAAI;AAAA,QAC9B;AACA;AAAA,MACF;AACA,UAAIA,UAAS,QAAQ;AACnB,YAAI,CAAC,aAAa,MAAM,QAAQ,GAAG;AACjC,uBAAa,MAAM,UAAU,KAAK;AAClC,uBAAa,MAAM,UAAU,IAAI,QAAQ,aAAa,MAAM,gBAAgB,CAAC,CAAC;AAC9E,uBAAa,MAAM,kBAAkB,CAAC,CAAC;AAAA,QACzC;AACA,qBAAa,MAAM,QAAQ,EAAE,OAAO,MAAM,KAAK;AAAA,MACjD,OAAO;AACL,YAAI,aAAa,MAAM,QAAQ,GAAG;AAChC,uBAAa,MAAM,QAAQ,EAAE,IAAI,MAAM,KAAK;AAAA,QAC9C,OAAO;AACL,uBAAa,MAAM,gBAAgB,KAAK,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC/E,uBAAa,MAAM,gBAAgB,EAAE,KAAK,YAAY,CAAC,IAAI;AAAA,QAC7D;AAAA,MACF;AACA,UAAI,KAAK,WAAW;AAClB,YAAIA,UAAS,QAAQ;AACnB,eAAK,IAAI,QAAQ,OAAO,MAAM,KAAK;AAAA,QACrC,OAAO;AACL,eAAK,IAAI,QAAQ,IAAI,MAAM,KAAK;AAAA,QAClC;AAAA,MACF;AAAA,IACF;AACA,SAAK,SAAS,CAAC,WAAW;AACxB,mBAAa,MAAM,UAAU,KAAK;AAClC,mBAAa,MAAM,SAAS,MAAM;AAAA,IACpC;AACA,SAAK,MAAM,CAAC,KAAK,UAAU;AACzB,WAAK,SAAS,KAAK,OAAO,CAAC;AAC3B,WAAK,KAAK,GAAG,IAAI;AAAA,IACnB;AACA,SAAK,MAAM,CAAC,QAAQ;AAClB,aAAO,KAAK,OAAO,KAAK,KAAK,GAAG,IAAI;AAAA,IACtC;AACA,SAAK,cAAc,CAAC,MAAM,KAAK,YAAY;AACzC,UAAI,aAAa,MAAM,QAAQ,KAAK,CAAC,WAAW,CAAC,OAAO,aAAa,MAAM,OAAO,MAAM,KAAK;AAC3F,eAAO,IAAI,SAAS,MAAM;AAAA,UACxB,SAAS,aAAa,MAAM,gBAAgB;AAAA,QAC9C,CAAC;AAAA,MACH;AACA,UAAI,OAAO,OAAO,QAAQ,UAAU;AAClC,cAAM,WAAW,WAAW,IAAI,QAAQ,IAAI,OAAO,GAAG,aAAa,MAAM,gBAAgB,CAAC;AAC1F,eAAO,IAAI,SAAS,MAAM;AAAA,UACxB,SAAS;AAAA,UACT,QAAQ,IAAI;AAAA,QACd,CAAC;AAAA,MACH;AACA,YAAM,SAAS,OAAO,QAAQ,WAAW,MAAM,aAAa,MAAM,OAAO;AACzE,mBAAa,MAAM,gBAAgB,KAAK,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC/E,mBAAa,MAAM,QAAQ,KAAK,aAAa,MAAM,UAAU,IAAI,QAAQ,CAAC;AAC1E,iBAAW,aAAa,MAAM,QAAQ,GAAG,aAAa,MAAM,gBAAgB,CAAC;AAC7E,UAAI,aAAa,MAAM,IAAI,GAAG;AAC5B,qBAAa,MAAM,IAAI,EAAE,QAAQ,QAAQ,CAAC,GAAG,MAAM;AACjD,uBAAa,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC;AAAA,QACxC,CAAC;AACD,mBAAW,aAAa,MAAM,QAAQ,GAAG,aAAa,MAAM,gBAAgB,CAAC;AAAA,MAC/E;AACA,kBAAY,UAAU,CAAC;AACvB,iBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC5C,YAAI,OAAO,MAAM,UAAU;AACzB,uBAAa,MAAM,QAAQ,EAAE,IAAI,GAAG,CAAC;AAAA,QACvC,OAAO;AACL,uBAAa,MAAM,QAAQ,EAAE,OAAO,CAAC;AACrC,qBAAW,MAAM,GAAG;AAClB,yBAAa,MAAM,QAAQ,EAAE,OAAO,GAAG,EAAE;AAAA,UAC3C;AAAA,QACF;AAAA,MACF;AACA,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB;AAAA,QACA,SAAS,aAAa,MAAM,QAAQ;AAAA,MACtC,CAAC;AAAA,IACH;AACA,SAAK,OAAO,CAAC,MAAM,KAAK,YAAY;AAClC,aAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,MAAM,KAAK,OAAO,IAAI,KAAK,YAAY,MAAM,GAAG;AAAA,IACpG;AACA,SAAK,OAAO,CAAC,MAAM,KAAK,YAAY;AAClC,UAAI,CAAC,aAAa,MAAM,gBAAgB,GAAG;AACzC,YAAI,aAAa,MAAM,QAAQ,KAAK,CAAC,WAAW,CAAC,KAAK;AACpD,iBAAO,IAAI,SAAS,IAAI;AAAA,QAC1B;AACA,qBAAa,MAAM,kBAAkB,CAAC,CAAC;AAAA,MACzC;AACA,mBAAa,MAAM,gBAAgB,EAAE,cAAc,IAAI;AACvD,aAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,MAAM,KAAK,OAAO,IAAI,KAAK,YAAY,MAAM,GAAG;AAAA,IACpG;AACA,SAAK,OAAO,CAAC,QAAQ,KAAK,YAAY;AACpC,YAAM,OAAO,KAAK,UAAU,MAAM;AAClC,mBAAa,MAAM,gBAAgB,KAAK,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC/E,mBAAa,MAAM,gBAAgB,EAAE,cAAc,IAAI;AACvD,aAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,MAAM,KAAK,OAAO,IAAI,KAAK,YAAY,MAAM,GAAG;AAAA,IACpG;AACA,SAAK,QAAQ,CAAC,QAAQ,KAAK,YAAY;AACrC,aAAO,KAAK,KAAK,QAAQ,KAAK,OAAO;AAAA,IACvC;AACA,SAAK,OAAO,CAAC,MAAM,KAAK,YAAY;AAClC,mBAAa,MAAM,gBAAgB,KAAK,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC/E,mBAAa,MAAM,gBAAgB,EAAE,cAAc,IAAI;AACvD,UAAI,OAAO,SAAS,UAAU;AAC5B,YAAI,EAAE,gBAAgB,UAAU;AAC9B,iBAAO,KAAK,SAAS;AAAA,QACvB;AACA,YAAI,gBAAgB,SAAS;AAC3B,iBAAO,KAAK,KAAK,CAAC,UAAU,gBAAgB,OAAO,yBAAyB,WAAW,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU;AACjH,mBAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,OAAO,KAAK,OAAO,IAAI,KAAK,YAAY,OAAO,GAAG;AAAA,UACtG,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,MAAM,KAAK,OAAO,IAAI,KAAK,YAAY,MAAM,GAAG;AAAA,IACpG;AACA,SAAK,WAAW,CAAC,UAAU,SAAS,QAAQ;AAC1C,mBAAa,MAAM,QAAQ,KAAK,aAAa,MAAM,UAAU,IAAI,QAAQ,CAAC;AAC1E,mBAAa,MAAM,QAAQ,EAAE,IAAI,YAAY,QAAQ;AACrD,aAAO,KAAK,YAAY,MAAM,MAAM;AAAA,IACtC;AACA,SAAK,aAAa,CAAC,IAAI,KAAK,YAAY;AACtC,kBAAY,UAAU,CAAC;AACvB,WAAK,OAAO,gBAAgB,UAAU;AACtC,WAAK,OAAO,0BAA0B,SAAS;AAC/C,WAAK,OAAO,qBAAqB,SAAS;AAC1C,aAAO,KAAK,OAAO,IAAI,KAAK,OAAO;AAAA,IACrC;AACA,SAAK,SAAS,CAAC,IAAI,KAAK,YAAY;AAClC,YAAM,EAAE,UAAU,SAAS,IAAI,IAAI,gBAAgB;AACnD,YAAM,SAAS,IAAI,aAAa,UAAU,QAAQ;AAClD,SAAG,MAAM,EAAE,QAAQ,MAAM,OAAO,MAAM,CAAC;AACvC,aAAO,OAAO,QAAQ,WAAW,KAAK,YAAY,OAAO,kBAAkB,KAAK,OAAO,IAAI,KAAK,YAAY,OAAO,kBAAkB,GAAG;AAAA,IAC1I;AACA,SAAK,SAAS,CAAC,MAAM,OAAO,QAAQ;AAClC,YAAM,SAAS,UAAU,MAAM,OAAO,GAAG;AACzC,WAAK,OAAO,cAAc,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAAA,IACpD;AACA,SAAK,WAAW,MAAM;AACpB,aAAO,KAAK,gBAAgB,IAAI;AAAA,IAClC;AACA,SAAK,MAAM;AACX,QAAI,SAAS;AACX,mBAAa,MAAM,eAAe,QAAQ,YAAY;AACtD,WAAK,MAAM,QAAQ;AACnB,UAAI,QAAQ,iBAAiB;AAC3B,aAAK,kBAAkB,QAAQ;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAAA,EACA,IAAI,QAAQ;AACV,QAAI,aAAa,MAAM,aAAa,KAAK,iBAAiB,aAAa,MAAM,aAAa,GAAG;AAC3F,aAAO,aAAa,MAAM,aAAa;AAAA,IACzC,OAAO;AACL,YAAM,MAAM,gCAAgC;AAAA,IAC9C;AAAA,EACF;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,aAAa,MAAM,aAAa,GAAG;AACrC,aAAO,aAAa,MAAM,aAAa;AAAA,IACzC,OAAO;AACL,YAAM,MAAM,sCAAsC;AAAA,IACpD;AAAA,EACF;AAAA,EACA,IAAI,MAAM;AACR,iBAAa,MAAM,UAAU,KAAK;AAClC,WAAO,aAAa,MAAM,IAAI,KAAK,aAAa,MAAM,MAAM,IAAI,SAAS,iBAAiB,EAAE,QAAQ,IAAI,CAAC,CAAC;AAAA,EAC5G;AAAA,EACA,IAAI,IAAI,OAAO;AACb,iBAAa,MAAM,UAAU,KAAK;AAClC,QAAI,aAAa,MAAM,IAAI,KAAK,OAAO;AACrC,mBAAa,MAAM,IAAI,EAAE,QAAQ,OAAO,cAAc;AACtD,iBAAW,CAAC,GAAG,CAAC,KAAK,aAAa,MAAM,IAAI,EAAE,QAAQ,QAAQ,GAAG;AAC/D,YAAI,MAAM,cAAc;AACtB,gBAAM,UAAU,aAAa,MAAM,IAAI,EAAE,QAAQ,aAAa;AAC9D,gBAAM,QAAQ,OAAO,YAAY;AACjC,qBAAW,UAAU,SAAS;AAC5B,kBAAM,QAAQ,OAAO,cAAc,MAAM;AAAA,UAC3C;AAAA,QACF,OAAO;AACL,gBAAM,QAAQ,IAAI,GAAG,CAAC;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AACA,iBAAa,MAAM,MAAM,KAAK;AAC9B,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,IAAI,MAAM;AACR,WAAO,EAAE,GAAG,KAAK,KAAK;AAAA,EACxB;AAAA,EACA,IAAI,UAAU;AACZ,UAAM,SAAS;AACf,QAAI,QAAQ,SAAS,QAAQ;AAC3B,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,QAAQ,QAAQ;AAC1B,aAAO;AAAA,IACT;AACA,QAAI,OAAO,QAAQ,kBAAkB,YAAY;AAC/C,aAAO;AAAA,IACT;AACA,QAAI,OAAO,QAAQ,gBAAgB,UAAU;AAC3C,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,WAAW,QAAQ;AAC7B,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,cAAc,QAAQ;AAChC,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,SAAS,SAAS,SAAS,QAAQ;AAC7C,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACF;AACA,UAAU,oBAAI,QAAQ;AACtB,gBAAgB,oBAAI,QAAQ;AAC5B,WAAW,oBAAI,QAAQ;AACvB,mBAAmB,oBAAI,QAAQ;AAC/B,OAAO,oBAAI,QAAQ;AACnB,WAAW,oBAAI,QAAQ;;;AChRvB,IAAI,UAAU,wBAAC,YAAY,SAAS,eAAe;AACjD,SAAO,CAAC,SAAS,SAAS;AACxB,QAAI,QAAQ;AACZ,WAAO,SAAS,CAAC;AACjB,mBAAe,SAAS,GAAG;AACzB,UAAI,KAAK,OAAO;AACd,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AACA,cAAQ;AACR,UAAI;AACJ,UAAI,UAAU;AACd,UAAI;AACJ,UAAI,WAAW,CAAC,GAAG;AACjB,kBAAU,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC;AAC5B,YAAI,mBAAmB,SAAS;AAC9B,kBAAQ,IAAI,aAAa;AAAA,QAC3B;AAAA,MACF,OAAO;AACL,kBAAU,MAAM,WAAW,UAAU,QAAQ;AAAA,MAC/C;AACA,UAAI,CAAC,SAAS;AACZ,YAAI,mBAAmB,WAAW,QAAQ,cAAc,SAAS,YAAY;AAC3E,gBAAM,MAAM,WAAW,OAAO;AAAA,QAChC;AAAA,MACF,OAAO;AACL,YAAI;AACF,gBAAM,MAAM,QAAQ,SAAS,MAAM;AACjC,mBAAO,SAAS,IAAI,CAAC;AAAA,UACvB,CAAC;AAAA,QACH,SAAS,KAAK;AACZ,cAAI,eAAe,SAAS,mBAAmB,WAAW,SAAS;AACjE,oBAAQ,QAAQ;AAChB,kBAAM,MAAM,QAAQ,KAAK,OAAO;AAChC,sBAAU;AAAA,UACZ,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AACA,UAAI,QAAQ,QAAQ,cAAc,SAAS,UAAU;AACnD,gBAAQ,MAAM;AAAA,MAChB;AACA,aAAO;AAAA,IACT;AAvCe;AAAA,EAwCjB;AACF,GA7Cc;;;ACDd,IAAI,gBAAgB,cAAc,MAAM;AAAA,EADxC,OACwC;AAAA;AAAA;AAAA,EACtC,YAAY,SAAS,KAAK,SAAS;AACjC,UAAM,SAAS,OAAO;AACtB,SAAK,MAAM,SAAS;AACpB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,cAAc;AACZ,QAAI,KAAK,KAAK;AACZ,aAAO,KAAK;AAAA,IACd;AACA,WAAO,IAAI,SAAS,KAAK,SAAS;AAAA,MAChC,QAAQ,KAAK;AAAA,IACf,CAAC;AAAA,EACH;AACF;;;ACdA,IAAI,YAAY,8BAAO,SAAS,UAAU,EAAE,KAAK,MAAM,MAAM;AAC3D,QAAM,cAAc,QAAQ,QAAQ,IAAI,cAAc;AACtD,MAAI,kBAAkB,WAAW,GAAG;AAClC,WAAO,cAAc,SAAS,OAAO;AAAA,EACvC;AACA,SAAO,CAAC;AACV,GANgB;AAOhB,SAAS,kBAAkB,aAAa;AACtC,MAAI,gBAAgB,MAAM;AACxB,WAAO;AAAA,EACT;AACA,SAAO,YAAY,WAAW,qBAAqB,KAAK,YAAY,WAAW,mCAAmC;AACpH;AALS;AAMT,eAAe,cAAc,SAAS,SAAS;AAC7C,QAAM,WAAW,MAAM,QAAQ,SAAS;AACxC,MAAI,UAAU;AACZ,WAAO,0BAA0B,UAAU,OAAO;AAAA,EACpD;AACA,SAAO,CAAC;AACV;AANe;AAOf,SAAS,0BAA0B,UAAU,SAAS;AACpD,QAAM,OAAO,CAAC;AACd,WAAS,QAAQ,CAAC,OAAO,QAAQ;AAC/B,UAAM,uBAAuB,QAAQ,OAAO,IAAI,SAAS,IAAI;AAC7D,QAAI,CAAC,sBAAsB;AACzB,WAAK,GAAG,IAAI;AAAA,IACd,OAAO;AACL,6BAAuB,MAAM,KAAK,KAAK;AAAA,IACzC;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAXS;AAYT,IAAI,yBAAyB,wBAAC,MAAM,KAAK,UAAU;AACjD,MAAI,KAAK,GAAG,KAAK,aAAa,KAAK,GAAG,CAAC,GAAG;AACxC,0BAAsB,KAAK,GAAG,GAAG,KAAK;AAAA,EACxC,WAAW,KAAK,GAAG,GAAG;AACpB,sBAAkB,MAAM,KAAK,KAAK;AAAA,EACpC,OAAO;AACL,SAAK,GAAG,IAAI;AAAA,EACd;AACF,GAR6B;AAS7B,SAAS,aAAa,OAAO;AAC3B,SAAO,MAAM,QAAQ,KAAK;AAC5B;AAFS;AAGT,IAAI,wBAAwB,wBAAC,KAAK,UAAU;AAC1C,MAAI,KAAK,KAAK;AAChB,GAF4B;AAG5B,IAAI,oBAAoB,wBAAC,MAAM,KAAK,UAAU;AAC5C,OAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,KAAK;AAC/B,GAFwB;;;AChDxB,IAAIC,iBAAgB,wBAAC,KAAK,QAAQ,QAAQ;AACxC,MAAI,CAAC,OAAO,IAAI,GAAG;AACjB,UAAM,UAAU,YAAY,GAAG;AACnC,GAHoB;AAIpB,IAAIC,gBAAe,wBAAC,KAAK,QAAQ,WAAW;AAC1C,EAAAD,eAAc,KAAK,QAAQ,yBAAyB;AACpD,SAAO,SAAS,OAAO,KAAK,GAAG,IAAI,OAAO,IAAI,GAAG;AACnD,GAHmB;AAInB,IAAIE,gBAAe,wBAAC,KAAK,QAAQ,UAAU;AACzC,MAAI,OAAO,IAAI,GAAG;AAChB,UAAM,UAAU,mDAAmD;AACrE,oBAAkB,UAAU,OAAO,IAAI,GAAG,IAAI,OAAO,IAAI,KAAK,KAAK;AACrE,GAJmB;AAKnB,IAAIC,gBAAe,wBAAC,KAAK,QAAQ,OAAO,WAAW;AACjD,EAAAH,eAAc,KAAK,QAAQ,wBAAwB;AACnD,WAAS,OAAO,KAAK,KAAK,KAAK,IAAI,OAAO,IAAI,KAAK,KAAK;AACxD,SAAO;AACT,GAJmB;AAUnB,IAAI;AAAJ,IAAoB;AACpB,IAAI,cAAc,MAAM;AAAA,EAxBxB,OAwBwB;AAAA;AAAA;AAAA,EACtB,YAAY,SAAS,OAAO,KAAK,cAAc,CAAC,CAAC,CAAC,GAAG;AACnD,IAAAE,cAAa,MAAM,gBAAgB,MAAM;AACzC,IAAAA,cAAa,MAAM,cAAc,MAAM;AACvC,SAAK,aAAa;AAClB,SAAK,YAAY,CAAC;AAClB,SAAK,aAAa,CAAC,QAAQ;AACzB,YAAM,EAAE,WAAW,KAAAE,KAAI,IAAI;AAC3B,YAAM,aAAa,UAAU,GAAG;AAChC,UAAI,YAAY;AACd,eAAO;AAAA,MACT;AACA,UAAI,UAAU,aAAa;AACzB,gBAAQ,YAAY;AAClB,iBAAO,MAAM,IAAI,SAAS,UAAU,WAAW,EAAE,GAAG,EAAE;AAAA,QACxD,GAAG;AAAA,MACL;AACA,aAAO,UAAU,GAAG,IAAIA,KAAI,GAAG,EAAE;AAAA,IACnC;AACA,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,IAAAD,cAAa,MAAM,cAAc,WAAW;AAC5C,IAAAA,cAAa,MAAM,gBAAgB,CAAC,CAAC;AAAA,EACvC;AAAA,EACA,MAAM,KAAK;AACT,WAAO,MAAM,KAAK,gBAAgB,GAAG,IAAI,KAAK,oBAAoB;AAAA,EACpE;AAAA,EACA,gBAAgB,KAAK;AACnB,UAAM,WAAWF,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG;AAC5E,UAAM,QAAQ,KAAK,cAAc,QAAQ;AACzC,WAAO,QAAQ,KAAK,KAAK,KAAK,IAAI,oBAAoB,KAAK,IAAI,QAAQ;AAAA,EACzE;AAAA,EACA,sBAAsB;AACpB,UAAM,UAAU,CAAC;AACjB,UAAM,OAAO,OAAO,KAAKA,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,CAAC;AAChF,eAAW,OAAO,MAAM;AACtB,YAAM,QAAQ,KAAK,cAAcA,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC;AAC7F,UAAI,SAAS,OAAO,UAAU,UAAU;AACtC,gBAAQ,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,oBAAoB,KAAK,IAAI;AAAA,MACjE;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc,UAAU;AACtB,WAAOA,cAAa,MAAM,YAAY,EAAE,CAAC,IAAIA,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,QAAQ,IAAI;AAAA,EAC/F;AAAA,EACA,MAAM,KAAK;AACT,WAAO,cAAc,KAAK,KAAK,GAAG;AAAA,EACpC;AAAA,EACA,QAAQ,KAAK;AACX,WAAO,eAAe,KAAK,KAAK,GAAG;AAAA,EACrC;AAAA,EACA,OAAO,MAAM;AACX,QAAI,MAAM;AACR,aAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,YAAY,CAAC,KAAK;AAAA,IACrD;AACA,UAAM,aAAa,CAAC;AACpB,SAAK,IAAI,QAAQ,QAAQ,CAAC,OAAO,QAAQ;AACvC,iBAAW,GAAG,IAAI;AAAA,IACpB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,OAAO,KAAK;AACV,UAAM,SAAS,KAAK,IAAI,QAAQ,IAAI,QAAQ;AAC5C,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AACA,UAAM,MAAM,MAAM,MAAM;AACxB,QAAI,KAAK;AACP,YAAM,QAAQ,IAAI,GAAG;AACrB,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,MAAM,UAAU,SAAS;AACvB,QAAI,KAAK,UAAU,YAAY;AAC7B,aAAO,KAAK,UAAU;AAAA,IACxB;AACA,UAAM,aAAa,MAAM,UAAU,MAAM,OAAO;AAChD,SAAK,UAAU,aAAa;AAC5B,WAAO;AAAA,EACT;AAAA,EACA,OAAO;AACL,WAAO,KAAK,WAAW,MAAM;AAAA,EAC/B;AAAA,EACA,OAAO;AACL,WAAO,KAAK,WAAW,MAAM;AAAA,EAC/B;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,WAAW,aAAa;AAAA,EACtC;AAAA,EACA,OAAO;AACL,WAAO,KAAK,WAAW,MAAM;AAAA,EAC/B;AAAA,EACA,WAAW;AACT,WAAO,KAAK,WAAW,UAAU;AAAA,EACnC;AAAA,EACA,iBAAiB,QAAQ,MAAM;AAC7B,IAAAA,cAAa,MAAM,cAAc,EAAE,MAAM,IAAI;AAAA,EAC/C;AAAA,EACA,MAAM,QAAQ;AACZ,WAAOA,cAAa,MAAM,cAAc,EAAE,MAAM;AAAA,EAClD;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,gBAAgB;AAClB,WAAOA,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK;AAAA,EACvE;AAAA,EACA,IAAI,YAAY;AACd,WAAOA,cAAa,MAAM,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,EAAE,KAAK,UAAU,EAAE;AAAA,EAC1F;AAAA,EACA,IAAI,UAAU;AACZ,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,WAAW;AACb,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,IAAI;AAAA,EAClB;AACF;AACA,iBAAiB,oBAAI,QAAQ;AAC7B,eAAe,oBAAI,QAAQ;;;AClK3B,IAAI,kBAAkB;AACtB,IAAI,4BAA4B;AAChC,IAAI,UAAU,CAAC,OAAO,QAAQ,OAAO,UAAU,WAAW,OAAO;AACjE,IAAI,mCAAmC;AACvC,IAAI,uBAAuB,cAAc,MAAM;AAAA,EAL/C,OAK+C;AAAA;AAAA;AAC/C;;;ACNA,IAAII,iBAAgB,wBAAC,KAAK,QAAQ,QAAQ;AACxC,MAAI,CAAC,OAAO,IAAI,GAAG;AACjB,UAAM,UAAU,YAAY,GAAG;AACnC,GAHoB;AAIpB,IAAIC,gBAAe,wBAAC,KAAK,QAAQ,WAAW;AAC1C,EAAAD,eAAc,KAAK,QAAQ,yBAAyB;AACpD,SAAO,SAAS,OAAO,KAAK,GAAG,IAAI,OAAO,IAAI,GAAG;AACnD,GAHmB;AAInB,IAAIE,gBAAe,wBAAC,KAAK,QAAQ,UAAU;AACzC,MAAI,OAAO,IAAI,GAAG;AAChB,UAAM,UAAU,mDAAmD;AACrE,oBAAkB,UAAU,OAAO,IAAI,GAAG,IAAI,OAAO,IAAI,KAAK,KAAK;AACrE,GAJmB;AAKnB,IAAIC,gBAAe,wBAAC,KAAK,QAAQ,OAAO,WAAW;AACjD,EAAAH,eAAc,KAAK,QAAQ,wBAAwB;AACnD,WAAS,OAAO,KAAK,KAAK,KAAK,IAAI,OAAO,IAAI,KAAK,KAAK;AACxD,SAAO;AACT,GAJmB;AAanB,IAAI,mBAAmB,OAAO,iBAAiB;AAC/C,SAAS,qBAAqB;AAC5B,SAAO,MAAM;AAAA,EACb;AACF;AAHS;AAIT,IAAI,kBAAkB,wBAAC,MAAM;AAC3B,SAAO,EAAE,KAAK,iBAAiB,GAAG;AACpC,GAFsB;AAGtB,IAAI,eAAe,wBAAC,KAAK,MAAM;AAC7B,MAAI,eAAe,eAAe;AAChC,WAAO,IAAI,YAAY;AAAA,EACzB;AACA,UAAQ,MAAM,GAAG;AACjB,QAAM,UAAU;AAChB,SAAO,EAAE,KAAK,SAAS,GAAG;AAC5B,GAPmB;AAQnB,IAAI;AACJ,IAAI,QAAQ,cAAc,mBAAmB,EAAE;AAAA,EA3C/C,OA2C+C;AAAA;AAAA;AAAA,EAC7C,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM;AACN,SAAK,YAAY;AACjB,IAAAE,cAAa,MAAM,OAAO,GAAG;AAC7B,SAAK,SAAS,CAAC;AACf,SAAK,kBAAkB;AACvB,SAAK,eAAe;AACpB,SAAK,UAAU,CAAC,YAAY;AAC1B,WAAK,eAAe;AACpB,aAAO;AAAA,IACT;AACA,SAAK,WAAW,CAAC,YAAY;AAC3B,WAAK,kBAAkB;AACvB,aAAO;AAAA,IACT;AACA,SAAK,OAAO,MAAM;AAChB,cAAQ,KAAK,iFAAiF;AAC9F,aAAO;AAAA,IACT;AACA,SAAK,cAAc,CAAC,UAAU;AAC5B,aAAO,KAAK,SAAS,MAAM,SAAS,OAAO,QAAQ,MAAM,QAAQ,MAAM;AAAA,IACzE;AACA,SAAK,QAAQ,CAAC,SAAS,KAAK,iBAAiB;AAC3C,aAAO,KAAK,SAAS,SAAS,cAAc,KAAK,QAAQ,MAAM;AAAA,IACjE;AACA,SAAK,UAAU,CAAC,OAAO,aAAa,KAAK,iBAAiB;AACxD,UAAI,iBAAiB,SAAS;AAC5B,YAAI,gBAAgB,QAAQ;AAC1B,kBAAQ,IAAI,QAAQ,OAAO,WAAW;AAAA,QACxC;AACA,eAAO,KAAK,MAAM,OAAO,KAAK,YAAY;AAAA,MAC5C;AACA,cAAQ,MAAM,SAAS;AACvB,YAAM,OAAO,eAAe,KAAK,KAAK,IAAI,QAAQ,mBAAmB,UAAU,KAAK,KAAK,CAAC;AAC1F,YAAM,MAAM,IAAI,QAAQ,MAAM,WAAW;AACzC,aAAO,KAAK,MAAM,KAAK,KAAK,YAAY;AAAA,IAC1C;AACA,SAAK,OAAO,MAAM;AAChB,uBAAiB,SAAS,CAAC,UAAU;AACnC,cAAM,YAAY,KAAK,SAAS,MAAM,SAAS,OAAO,QAAQ,MAAM,QAAQ,MAAM,CAAC;AAAA,MACrF,CAAC;AAAA,IACH;AACA,UAAM,aAAa,CAAC,GAAG,SAAS,yBAAyB;AACzD,eAAW,IAAI,CAAC,WAAW;AACzB,WAAK,MAAM,IAAI,CAAC,UAAU,SAAS;AACjC,YAAI,OAAO,UAAU,UAAU;AAC7B,UAAAC,cAAa,MAAM,OAAO,KAAK;AAAA,QACjC,OAAO;AACL,eAAK,SAAS,QAAQF,cAAa,MAAM,KAAK,GAAG,KAAK;AAAA,QACxD;AACA,aAAK,IAAI,CAAC,YAAY;AACpB,cAAI,OAAO,YAAY,UAAU;AAC/B,iBAAK,SAAS,QAAQA,cAAa,MAAM,KAAK,GAAG,OAAO;AAAA,UAC1D;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,SAAK,KAAK,CAAC,QAAQ,SAAS,aAAa;AACvC,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AACA,MAAAE,cAAa,MAAM,OAAO,IAAI;AAC9B,iBAAW,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG;AAC/B,iBAAS,IAAI,CAAC,YAAY;AACxB,eAAK,SAAS,EAAE,YAAY,GAAGF,cAAa,MAAM,KAAK,GAAG,OAAO;AAAA,QACnE,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT;AACA,SAAK,MAAM,CAAC,SAAS,aAAa;AAChC,UAAI,OAAO,SAAS,UAAU;AAC5B,QAAAE,cAAa,MAAM,OAAO,IAAI;AAAA,MAChC,OAAO;AACL,iBAAS,QAAQ,IAAI;AAAA,MACvB;AACA,eAAS,IAAI,CAAC,YAAY;AACxB,aAAK,SAAS,iBAAiBF,cAAa,MAAM,KAAK,GAAG,OAAO;AAAA,MACnE,CAAC;AACD,aAAO;AAAA,IACT;AACA,UAAM,SAAS,QAAQ,UAAU;AACjC,WAAO,QAAQ;AACf,WAAO,OAAO,MAAM,OAAO;AAC3B,SAAK,UAAU,SAAS,QAAQ,WAAW,UAAU;AAAA,EACvD;AAAA,EACA,QAAQ;AACN,UAAM,QAAQ,IAAI,MAAM;AAAA,MACtB,QAAQ,KAAK;AAAA,MACb,SAAS,KAAK;AAAA,IAChB,CAAC;AACD,UAAM,SAAS,KAAK;AACpB,WAAO;AAAA,EACT;AAAA,EACA,MAAM,MAAMG,MAAK;AACf,UAAM,SAAS,KAAK,SAAS,IAAI;AACjC,QAAI,CAACA,MAAK;AACR,aAAO;AAAA,IACT;AACA,IAAAA,KAAI,OAAO,IAAI,CAAC,MAAM;AACpB,UAAI;AACJ,UAAIA,KAAI,iBAAiB,cAAc;AACrC,kBAAU,EAAE;AAAA,MACd,OAAO;AACL,kBAAU,8BAAO,GAAG,UAAU,MAAM,QAAQ,CAAC,GAAGA,KAAI,YAAY,EAAE,GAAG,MAAM,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,KAAtF;AACV,gBAAQ,gBAAgB,IAAI,EAAE;AAAA,MAChC;AACA,aAAO,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO;AAAA,IAC3C,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,SAAS,MAAM;AACb,UAAM,SAAS,KAAK,MAAM;AAC1B,WAAO,YAAY,UAAU,KAAK,WAAW,IAAI;AACjD,WAAO;AAAA,EACT;AAAA,EACA,aAAa;AACX,UAAM,SAAS;AACf,SAAK,OAAO,IAAI,CAAC,UAAU;AACzB,cAAQ;AAAA,QACN,WAAW,MAAM,MAAM,WAAW,IAAI,OAAO,SAAS,MAAM,OAAO,MAAM,CAAC,IAAI,MAAM,IAAI;AAAA,MAC1F;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,MAAM,MAAM,oBAAoB,eAAe;AAC7C,UAAM,aAAa,UAAU,KAAK,WAAW,IAAI;AACjD,UAAM,mBAAmB,eAAe,MAAM,IAAI,WAAW;AAC7D,UAAM,UAAU,8BAAO,GAAG,SAAS;AACjC,UAAI,mBAAmB;AACvB,UAAI;AACF,2BAAmB,EAAE;AAAA,MACvB,QAAQ;AAAA,MACR;AACA,YAAM,UAAU,gBAAgB,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,gBAAgB;AAC3E,YAAM,eAAe,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAChE,YAAM,eAAe,gBAAgB,EAAE,IAAI,GAAG;AAC9C,YAAM,MAAM,MAAM;AAAA,QAChB,IAAI;AAAA,UACF,IAAI,KAAK,EAAE,IAAI,KAAK,MAAM,gBAAgB,KAAK,OAAO,cAAc,EAAE,IAAI,GAAG;AAAA,UAC7E,EAAE,IAAI;AAAA,QACR;AAAA,QACA,GAAG;AAAA,MACL;AACA,UAAI,KAAK;AACP,eAAO;AAAA,MACT;AACA,YAAM,KAAK;AAAA,IACb,GApBgB;AAqBhB,SAAK,SAAS,iBAAiB,UAAU,MAAM,GAAG,GAAG,OAAO;AAC5D,WAAO;AAAA,EACT;AAAA,EACA,IAAI,aAAa;AACf,SAAK,WAAW,OAAO,GAAG;AAC1B,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EACA,SAAS,QAAQ,MAAM,SAAS;AAC9B,aAAS,OAAO,YAAY;AAC5B,WAAO,UAAU,KAAK,WAAW,IAAI;AACrC,UAAM,IAAI,EAAE,MAAM,QAAQ,QAAQ;AAClC,SAAK,OAAO,IAAI,QAAQ,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,SAAK,OAAO,KAAK,CAAC;AAAA,EACpB;AAAA,EACA,WAAW,QAAQ,MAAM;AACvB,WAAO,KAAK,OAAO,MAAM,QAAQ,IAAI;AAAA,EACvC;AAAA,EACA,YAAY,KAAK,GAAG;AAClB,QAAI,eAAe,OAAO;AACxB,aAAO,KAAK,aAAa,KAAK,CAAC;AAAA,IACjC;AACA,UAAM;AAAA,EACR;AAAA,EACA,SAAS,SAAS,cAAc,KAAK,QAAQ;AAC3C,QAAI,WAAW,QAAQ;AACrB,cAAQ,YAAY,IAAI,SAAS,MAAM,MAAM,KAAK,SAAS,SAAS,cAAc,KAAK,KAAK,CAAC,GAAG;AAAA,IAClG;AACA,UAAM,OAAO,KAAK,QAAQ,SAAS,EAAE,IAAI,CAAC;AAC1C,UAAM,cAAc,KAAK,WAAW,QAAQ,IAAI;AAChD,UAAM,IAAI,IAAI,QAAQ,IAAI,YAAY,SAAS,MAAM,WAAW,GAAG;AAAA,MACjE;AAAA,MACA;AAAA,MACA,iBAAiB,KAAK;AAAA,IACxB,CAAC;AACD,QAAI,YAAY,CAAC,EAAE,WAAW,GAAG;AAC/B,UAAI;AACJ,UAAI;AACF,cAAM,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,YAAY;AAC3C,YAAE,MAAM,MAAM,KAAK,gBAAgB,CAAC;AAAA,QACtC,CAAC;AAAA,MACH,SAAS,KAAK;AACZ,eAAO,KAAK,YAAY,KAAK,CAAC;AAAA,MAChC;AACA,aAAO,eAAe,UAAU,IAAI;AAAA,QAClC,CAAC,aAAa,aAAa,EAAE,YAAY,EAAE,MAAM,KAAK,gBAAgB,CAAC;AAAA,MACzE,EAAE,MAAM,CAAC,QAAQ,KAAK,YAAY,KAAK,CAAC,CAAC,IAAI;AAAA,IAC/C;AACA,UAAM,WAAW,QAAQ,YAAY,CAAC,GAAG,KAAK,cAAc,KAAK,eAAe;AAChF,YAAQ,YAAY;AAClB,UAAI;AACF,cAAM,UAAU,MAAM,SAAS,CAAC;AAChC,YAAI,CAAC,QAAQ,WAAW;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,eAAO,QAAQ;AAAA,MACjB,SAAS,KAAK;AACZ,eAAO,KAAK,YAAY,KAAK,CAAC;AAAA,MAChC;AAAA,IACF,GAAG;AAAA,EACL;AACF;AACA,IAAI,OAAO;AACX,QAAQ,oBAAI,QAAQ;;;AC/PpB,IAAI,oBAAoB;AACxB,IAAI,4BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,aAAa,OAAO;AACxB,SAAS,WAAW,GAAG,GAAG;AACxB,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO,EAAE,WAAW,IAAI,IAAI,IAAI,KAAK,IAAI;AAAA,EAC3C;AACA,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,6BAA6B,MAAM,2BAA2B;AACtE,WAAO;AAAA,EACT,WAAW,MAAM,6BAA6B,MAAM,2BAA2B;AAC7E,WAAO;AAAA,EACT;AACA,MAAI,MAAM,mBAAmB;AAC3B,WAAO;AAAA,EACT,WAAW,MAAM,mBAAmB;AAClC,WAAO;AAAA,EACT;AACA,SAAO,EAAE,WAAW,EAAE,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS,EAAE;AAC/D;AAlBS;AAmBT,IAAI,OAAO,MAAM;AAAA,EAxBjB,OAwBiB;AAAA;AAAA;AAAA,EACf,cAAc;AACZ,SAAK,WAAW,CAAC;AAAA,EACnB;AAAA,EACA,OAAO,QAAQ,OAAO,UAAU,SAAS,oBAAoB;AAC3D,QAAI,OAAO,WAAW,GAAG;AACvB,UAAI,KAAK,UAAU,QAAQ;AACzB,cAAM;AAAA,MACR;AACA,UAAI,oBAAoB;AACtB;AAAA,MACF;AACA,WAAK,QAAQ;AACb;AAAA,IACF;AACA,UAAM,CAAC,OAAO,GAAG,UAAU,IAAI;AAC/B,UAAM,UAAU,UAAU,MAAM,WAAW,WAAW,IAAI,CAAC,IAAI,IAAI,yBAAyB,IAAI,CAAC,IAAI,IAAI,iBAAiB,IAAI,UAAU,OAAO,CAAC,IAAI,IAAI,yBAAyB,IAAI,MAAM,MAAM,6BAA6B;AAC9N,QAAI;AACJ,QAAI,SAAS;AACX,YAAM,OAAO,QAAQ,CAAC;AACtB,UAAI,YAAY,QAAQ,CAAC,KAAK;AAC9B,UAAI,QAAQ,QAAQ,CAAC,GAAG;AACtB,oBAAY,UAAU,QAAQ,0BAA0B,KAAK;AAC7D,YAAI,YAAY,KAAK,SAAS,GAAG;AAC/B,gBAAM;AAAA,QACR;AAAA,MACF;AACA,aAAO,KAAK,SAAS,SAAS;AAC9B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAAA,UAC7B,CAAC,MAAM,MAAM,6BAA6B,MAAM;AAAA,QAClD,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,SAAS,SAAS,IAAI,IAAI,KAAK;AAC3C,YAAI,SAAS,IAAI;AACf,eAAK,WAAW,QAAQ;AAAA,QAC1B;AAAA,MACF;AACA,UAAI,CAAC,sBAAsB,SAAS,IAAI;AACtC,iBAAS,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC;AAAA,MACrC;AAAA,IACF,OAAO;AACL,aAAO,KAAK,SAAS,KAAK;AAC1B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAAA,UAC7B,CAAC,MAAM,EAAE,SAAS,KAAK,MAAM,6BAA6B,MAAM;AAAA,QAClE,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,SAAS,KAAK,IAAI,IAAI,KAAK;AAAA,MACzC;AAAA,IACF;AACA,SAAK,OAAO,YAAY,OAAO,UAAU,SAAS,kBAAkB;AAAA,EACtE;AAAA,EACA,iBAAiB;AACf,UAAM,YAAY,OAAO,KAAK,KAAK,QAAQ,EAAE,KAAK,UAAU;AAC5D,UAAM,UAAU,UAAU,IAAI,CAAC,MAAM;AACnC,YAAM,IAAI,KAAK,SAAS,CAAC;AACzB,cAAQ,OAAO,EAAE,aAAa,WAAW,IAAI,CAAC,KAAK,EAAE,QAAQ,KAAK,KAAK,EAAE,eAAe;AAAA,IAC1F,CAAC;AACD,QAAI,OAAO,KAAK,UAAU,UAAU;AAClC,cAAQ,QAAQ,IAAI,KAAK,KAAK,EAAE;AAAA,IAClC;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO,QAAQ,CAAC;AAAA,IAClB;AACA,WAAO,QAAQ,QAAQ,KAAK,GAAG,IAAI;AAAA,EACrC;AACF;;;ACpGA,IAAI,OAAO,MAAM;AAAA,EAFjB,OAEiB;AAAA;AAAA;AAAA,EACf,cAAc;AACZ,SAAK,UAAU,EAAE,UAAU,EAAE;AAC7B,SAAK,OAAO,IAAI,KAAK;AAAA,EACvB;AAAA,EACA,OAAO,MAAM,OAAO,oBAAoB;AACtC,UAAM,aAAa,CAAC;AACpB,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,OAAO;AAClB,UAAI,WAAW;AACf,aAAO,KAAK,QAAQ,cAAc,CAAC,MAAM;AACvC,cAAM,OAAO,MAAM,CAAC;AACpB,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACpB;AACA,mBAAW;AACX,eAAO;AAAA,MACT,CAAC;AACD,UAAI,CAAC,UAAU;AACb;AAAA,MACF;AAAA,IACF;AACA,UAAM,SAAS,KAAK,MAAM,0BAA0B,KAAK,CAAC;AAC1D,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,eAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAI,OAAO,CAAC,EAAE,QAAQ,IAAI,MAAM,IAAI;AAClC,iBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAChD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,SAAK,KAAK,OAAO,QAAQ,OAAO,YAAY,KAAK,SAAS,kBAAkB;AAC5E,WAAO;AAAA,EACT;AAAA,EACA,cAAc;AACZ,QAAI,SAAS,KAAK,KAAK,eAAe;AACtC,QAAI,WAAW,IAAI;AACjB,aAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,IACtB;AACA,QAAI,eAAe;AACnB,UAAM,sBAAsB,CAAC;AAC7B,UAAM,sBAAsB,CAAC;AAC7B,aAAS,OAAO,QAAQ,yBAAyB,CAAC,GAAG,cAAc,eAAe;AAChF,UAAI,OAAO,iBAAiB,aAAa;AACvC,4BAAoB,EAAE,YAAY,IAAI,OAAO,YAAY;AACzD,eAAO;AAAA,MACT;AACA,UAAI,OAAO,eAAe,aAAa;AACrC,4BAAoB,OAAO,UAAU,CAAC,IAAI,EAAE;AAC5C,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC;AACD,WAAO,CAAC,IAAI,OAAO,IAAI,MAAM,EAAE,GAAG,qBAAqB,mBAAmB;AAAA,EAC5E;AACF;;;AC/CA,IAAI,cAAc,CAAC,iBAAiB,GAAG,OAAO,EAAE,IAAI,CAAC,WAAW,OAAO,YAAY,CAAC;AACpF,IAAI,aAAa,CAAC;AAClB,IAAI,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC/B,IAAI,sBAAsB,CAAC;AAC3B,SAAS,oBAAoB,MAAM;AACjC,SAAO,oBAAoB,IAAI,MAAM,oBAAoB,IAAI,IAAI,IAAI;AAAA,IACnE,SAAS,MAAM,KAAK,IAAI,KAAK,QAAQ,QAAQ,UAAU,CAAC;AAAA,EAC1D;AACF;AAJS;AAKT,SAAS,2BAA2B;AAClC,wBAAsB,CAAC;AACzB;AAFS;AAGT,SAAS,mCAAmC,QAAQ;AAClD,QAAM,OAAO,IAAI,KAAK;AACtB,QAAM,cAAc,CAAC;AACrB,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AACA,QAAM,2BAA2B,OAAO;AAAA,IACtC,CAAC,UAAU,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK;AAAA,EAChD,EAAE;AAAA,IACA,CAAC,CAAC,WAAW,KAAK,GAAG,CAAC,WAAW,KAAK,MAAM,YAAY,IAAI,YAAY,KAAK,MAAM,SAAS,MAAM;AAAA,EACpG;AACA,QAAM,YAAY,CAAC;AACnB,WAAS,IAAI,GAAG,IAAI,IAAI,MAAM,yBAAyB,QAAQ,IAAI,KAAK,KAAK;AAC3E,UAAM,CAAC,oBAAoB,MAAM,QAAQ,IAAI,yBAAyB,CAAC;AACvE,QAAI,oBAAoB;AACtB,gBAAU,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU;AAAA,IAC/D,OAAO;AACL;AAAA,IACF;AACA,QAAI;AACJ,QAAI;AACF,mBAAa,KAAK,OAAO,MAAM,GAAG,kBAAkB;AAAA,IACtD,SAAS,GAAG;AACV,YAAM,MAAM,aAAa,IAAI,qBAAqB,IAAI,IAAI;AAAA,IAC5D;AACA,QAAI,oBAAoB;AACtB;AAAA,IACF;AACA,gBAAY,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG,UAAU,MAAM;AACjD,YAAM,gBAAgB,CAAC;AACvB,oBAAc;AACd,aAAO,cAAc,GAAG,cAAc;AACpC,cAAM,CAAC,KAAK,KAAK,IAAI,WAAW,UAAU;AAC1C,sBAAc,GAAG,IAAI;AAAA,MACvB;AACA,aAAO,CAAC,GAAG,aAAa;AAAA,IAC1B,CAAC;AAAA,EACH;AACA,QAAM,CAAC,QAAQ,qBAAqB,mBAAmB,IAAI,KAAK,YAAY;AAC5E,WAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACtD,aAAS,IAAI,GAAG,OAAO,YAAY,CAAC,EAAE,QAAQ,IAAI,MAAM,KAAK;AAC3D,YAAM,MAAM,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC;AACjC,UAAI,CAAC,KAAK;AACR;AAAA,MACF;AACA,YAAM,OAAO,OAAO,KAAK,GAAG;AAC5B,eAAS,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,KAAK;AACjD,YAAI,KAAK,CAAC,CAAC,IAAI,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AACA,QAAM,aAAa,CAAC;AACpB,aAAW,KAAK,qBAAqB;AACnC,eAAW,CAAC,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAAA,EACpD;AACA,SAAO,CAAC,QAAQ,YAAY,SAAS;AACvC;AAxDS;AAyDT,SAAS,eAAe,YAAY,MAAM;AACxC,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACT;AACA,aAAW,KAAK,OAAO,KAAK,UAAU,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM,GAAG;AAC3E,QAAI,oBAAoB,CAAC,EAAE,KAAK,IAAI,GAAG;AACrC,aAAO,CAAC,GAAG,WAAW,CAAC,CAAC;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AAVS;AAWT,IAAI,eAAe,MAAM;AAAA,EA1FzB,OA0FyB;AAAA;AAAA;AAAA,EACvB,cAAc;AACZ,SAAK,OAAO;AACZ,SAAK,aAAa,EAAE,CAAC,eAAe,GAAG,CAAC,EAAE;AAC1C,SAAK,SAAS,EAAE,CAAC,eAAe,GAAG,CAAC,EAAE;AAAA,EACxC;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,QAAI;AACJ,UAAM,EAAE,YAAY,OAAO,IAAI;AAC/B,QAAI,CAAC,cAAc,CAAC,QAAQ;AAC1B,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,QAAI,YAAY,QAAQ,MAAM,MAAM,IAAI;AACtC,kBAAY,KAAK,MAAM;AAAA,IACzB;AACA,QAAI,CAAC,WAAW,MAAM,GAAG;AACvB;AACA,OAAC,YAAY,MAAM,EAAE,QAAQ,CAAC,eAAe;AAC3C,mBAAW,MAAM,IAAI,CAAC;AACtB,eAAO,KAAK,WAAW,eAAe,CAAC,EAAE,QAAQ,CAAC,MAAM;AACtD,qBAAW,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,WAAW,eAAe,EAAE,CAAC,CAAC;AAAA,QAC5D,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AACA,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT;AACA,UAAM,cAAc,KAAK,MAAM,MAAM,KAAK,CAAC,GAAG;AAC9C,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,YAAM,KAAK,oBAAoB,IAAI;AACnC,UAAI,WAAW,iBAAiB;AAC9B,eAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,cAAI;AACJ,WAAC,MAAM,WAAW,CAAC,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,eAAe,WAAW,CAAC,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,QAC3I,CAAC;AAAA,MACH,OAAO;AACL,SAAC,KAAK,WAAW,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,eAAe,WAAW,MAAM,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,MACnJ;AACA,aAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM;AACxC,eAAG,KAAK,CAAC,KAAK,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC3D,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AACD,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,OAAO,CAAC,CAAC,EAAE;AAAA,YACrB,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC9D;AAAA,QACF;AAAA,MACF,CAAC;AACD;AAAA,IACF;AACA,UAAM,QAAQ,uBAAuB,IAAI,KAAK,CAAC,IAAI;AACnD,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,QAAQ,MAAM,CAAC;AACrB,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI;AACJ,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,WAAC,MAAM,OAAO,CAAC,GAAG,KAAK,MAAM,IAAI,KAAK,IAAI;AAAA,YACxC,GAAG,eAAe,WAAW,CAAC,GAAG,KAAK,KAAK,eAAe,WAAW,eAAe,GAAG,KAAK,KAAK,CAAC;AAAA,UACpG;AACA,iBAAO,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,aAAa,MAAM,IAAI,CAAC,CAAC;AAAA,QAC3D;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,6BAAyB;AACzB,UAAM,WAAW,KAAK,iBAAiB;AACvC,SAAK,QAAQ,CAAC,SAAS,UAAU;AAC/B,YAAM,UAAU,SAAS,OAAO;AAChC,YAAM,cAAc,QAAQ,CAAC,EAAE,KAAK;AACpC,UAAI,aAAa;AACf,eAAO;AAAA,MACT;AACA,YAAM,QAAQ,MAAM,MAAM,QAAQ,CAAC,CAAC;AACpC,UAAI,CAAC,OAAO;AACV,eAAO,CAAC,CAAC,GAAG,UAAU;AAAA,MACxB;AACA,YAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AACjC,aAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,GAAG,KAAK;AAAA,IAClC;AACA,WAAO,KAAK,MAAM,QAAQ,IAAI;AAAA,EAChC;AAAA,EACA,mBAAmB;AACjB,UAAM,WAAW,CAAC;AAClB,gBAAY,QAAQ,CAAC,WAAW;AAC9B,eAAS,MAAM,IAAI,KAAK,aAAa,MAAM,KAAK,SAAS,eAAe;AAAA,IAC1E,CAAC;AACD,SAAK,aAAa,KAAK,SAAS;AAChC,WAAO;AAAA,EACT;AAAA,EACA,aAAa,QAAQ;AACnB,UAAM,SAAS,CAAC;AAChB,QAAI,cAAc,WAAW;AAC7B,KAAC,KAAK,YAAY,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AAC5C,YAAM,WAAW,EAAE,MAAM,IAAI,OAAO,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;AAC9F,UAAI,SAAS,WAAW,GAAG;AACzB,wBAAgB,cAAc;AAC9B,eAAO,KAAK,GAAG,QAAQ;AAAA,MACzB,WAAW,WAAW,iBAAiB;AACrC,eAAO;AAAA,UACL,GAAG,OAAO,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;AAAA,QACnF;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT,OAAO;AACL,aAAO,mCAAmC,MAAM;AAAA,IAClD;AAAA,EACF;AACF;;;AC1MA,IAAI,cAAc,MAAM;AAAA,EAFxB,OAEwB;AAAA;AAAA;AAAA,EACtB,YAAY,MAAM;AAChB,SAAK,OAAO;AACZ,SAAK,UAAU,CAAC;AAChB,SAAK,SAAS,CAAC;AACf,WAAO,OAAO,MAAM,IAAI;AAAA,EAC1B;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,QAAI,CAAC,KAAK,QAAQ;AAChB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,SAAK,OAAO,KAAK,CAAC,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC1C;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,QAAI,CAAC,KAAK,QAAQ;AAChB,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,UAAM,EAAE,SAAS,OAAO,IAAI;AAC5B,UAAM,MAAM,QAAQ;AACpB,QAAI,IAAI;AACR,QAAI;AACJ,WAAO,IAAI,KAAK,KAAK;AACnB,YAAM,SAAS,QAAQ,CAAC;AACxB,UAAI;AACF,eAAO,QAAQ,CAAC,SAAS;AACvB,iBAAO,IAAI,GAAG,IAAI;AAAA,QACpB,CAAC;AACD,cAAM,OAAO,MAAM,QAAQ,IAAI;AAAA,MACjC,SAAS,GAAG;AACV,YAAI,aAAa,sBAAsB;AACrC;AAAA,QACF;AACA,cAAM;AAAA,MACR;AACA,WAAK,QAAQ,OAAO,MAAM,KAAK,MAAM;AACrC,WAAK,UAAU,CAAC,MAAM;AACtB,WAAK,SAAS;AACd;AAAA,IACF;AACA,QAAI,MAAM,KAAK;AACb,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,SAAK,OAAO,iBAAiB,KAAK,aAAa,IAAI;AACnD,WAAO;AAAA,EACT;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,KAAK,UAAU,KAAK,QAAQ,WAAW,GAAG;AAC5C,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,WAAO,KAAK,QAAQ,CAAC;AAAA,EACvB;AACF;;;AClDA,IAAIC,QAAO,MAAM;AAAA,EAHjB,OAGiB;AAAA;AAAA;AAAA,EACf,YAAY,QAAQ,SAAS,UAAU;AACrC,SAAK,QAAQ;AACb,SAAK,SAAS,CAAC;AACf,SAAK,WAAW,YAAY,CAAC;AAC7B,SAAK,UAAU,CAAC;AAChB,SAAK,OAAO;AACZ,QAAI,UAAU,SAAS;AACrB,YAAM,IAAI,CAAC;AACX,QAAE,MAAM,IAAI,EAAE,SAAS,cAAc,CAAC,GAAG,OAAO,GAAG,MAAM,KAAK,KAAK;AACnE,WAAK,UAAU,CAAC,CAAC;AAAA,IACnB;AACA,SAAK,WAAW,CAAC;AAAA,EACnB;AAAA,EACA,OAAO,QAAQ,MAAM,SAAS;AAC5B,SAAK,OAAO,GAAG,MAAM,IAAI,IAAI;AAC7B,SAAK,QAAQ,EAAE,KAAK;AACpB,QAAI,UAAU;AACd,UAAM,QAAQ,iBAAiB,IAAI;AACnC,UAAM,eAAe,CAAC;AACtB,UAAM,iBAAiB,CAAC;AACxB,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,IAAI,MAAM,CAAC;AACjB,UAAI,OAAO,KAAK,QAAQ,QAAQ,EAAE,SAAS,CAAC,GAAG;AAC7C,uBAAe,KAAK,GAAG,QAAQ,QAAQ;AACvC,kBAAU,QAAQ,SAAS,CAAC;AAC5B,cAAM,WAAW,WAAW,CAAC;AAC7B,YAAI,UAAU;AACZ,uBAAa,KAAK,SAAS,CAAC,CAAC;AAAA,QAC/B;AACA;AAAA,MACF;AACA,cAAQ,SAAS,CAAC,IAAI,IAAIA,MAAK;AAC/B,YAAM,UAAU,WAAW,CAAC;AAC5B,UAAI,SAAS;AACX,gBAAQ,SAAS,KAAK,OAAO;AAC7B,uBAAe,KAAK,GAAG,QAAQ,QAAQ;AACvC,qBAAa,KAAK,QAAQ,CAAC,CAAC;AAAA,MAC9B;AACA,qBAAe,KAAK,GAAG,QAAQ,QAAQ;AACvC,gBAAU,QAAQ,SAAS,CAAC;AAAA,IAC9B;AACA,QAAI,CAAC,QAAQ,QAAQ,QAAQ;AAC3B,cAAQ,UAAU,CAAC;AAAA,IACrB;AACA,UAAM,IAAI,CAAC;AACX,UAAM,aAAa;AAAA,MACjB;AAAA,MACA,cAAc,aAAa,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AAAA,MACjE,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,IACd;AACA,MAAE,MAAM,IAAI;AACZ,YAAQ,QAAQ,KAAK,CAAC;AACtB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM,QAAQ,YAAY,QAAQ;AACvC,UAAM,cAAc,CAAC;AACrB,aAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,QAAQ,IAAI,KAAK,KAAK;AACvD,YAAM,IAAI,KAAK,QAAQ,CAAC;AACxB,YAAM,aAAa,EAAE,MAAM,KAAK,EAAE,eAAe;AACjD,YAAM,eAAe,CAAC;AACtB,UAAI,eAAe,QAAQ;AACzB,mBAAW,SAAS,CAAC;AACrB,mBAAW,aAAa,QAAQ,CAAC,QAAQ;AACvC,gBAAM,YAAY,aAAa,WAAW,IAAI;AAC9C,qBAAW,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,CAAC,YAAY,OAAO,GAAG,IAAI,WAAW,GAAG,KAAK,OAAO,GAAG;AAChG,uBAAa,WAAW,IAAI,IAAI;AAAA,QAClC,CAAC;AACD,oBAAY,KAAK,UAAU;AAAA,MAC7B;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ,MAAM;AACnB,UAAM,cAAc,CAAC;AACrB,SAAK,SAAS,CAAC;AACf,UAAM,UAAU;AAChB,QAAI,WAAW,CAAC,OAAO;AACvB,UAAM,QAAQ,UAAU,IAAI;AAC5B,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,SAAS,MAAM,MAAM;AAC3B,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,KAAK;AACrD,cAAM,OAAO,SAAS,CAAC;AACvB,cAAM,WAAW,KAAK,SAAS,IAAI;AACnC,YAAI,UAAU;AACZ,mBAAS,SAAS,KAAK;AACvB,cAAI,WAAW,MAAM;AACnB,gBAAI,SAAS,SAAS,GAAG,GAAG;AAC1B,0BAAY,KAAK,GAAG,KAAK,OAAO,SAAS,SAAS,GAAG,GAAG,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;AAAA,YAClF;AACA,wBAAY,KAAK,GAAG,KAAK,OAAO,UAAU,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;AAAA,UACpE,OAAO;AACL,sBAAU,KAAK,QAAQ;AAAA,UACzB;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,OAAO,KAAK,SAAS,QAAQ,IAAI,MAAM,KAAK;AAC1D,gBAAM,UAAU,KAAK,SAAS,CAAC;AAC/B,gBAAM,SAAS,EAAE,GAAG,KAAK,OAAO;AAChC,cAAI,YAAY,KAAK;AACnB,kBAAM,UAAU,KAAK,SAAS,GAAG;AACjC,gBAAI,SAAS;AACX,0BAAY,KAAK,GAAG,KAAK,OAAO,SAAS,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;AACjE,wBAAU,KAAK,OAAO;AAAA,YACxB;AACA;AAAA,UACF;AACA,cAAI,SAAS,IAAI;AACf;AAAA,UACF;AACA,gBAAM,CAAC,KAAK,MAAM,OAAO,IAAI;AAC7B,gBAAM,QAAQ,KAAK,SAAS,GAAG;AAC/B,gBAAM,iBAAiB,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAC9C,cAAI,mBAAmB,UAAU,QAAQ,KAAK,cAAc,GAAG;AAC7D,mBAAO,IAAI,IAAI;AACf,wBAAY,KAAK,GAAG,KAAK,OAAO,OAAO,QAAQ,KAAK,QAAQ,MAAM,CAAC;AACnE;AAAA,UACF;AACA,cAAI,YAAY,QAAQ,mBAAmB,UAAU,QAAQ,KAAK,IAAI,GAAG;AACvE,gBAAI,OAAO,QAAQ,UAAU;AAC3B,qBAAO,IAAI,IAAI;AACf,kBAAI,WAAW,MAAM;AACnB,4BAAY,KAAK,GAAG,KAAK,OAAO,OAAO,QAAQ,QAAQ,KAAK,MAAM,CAAC;AACnE,oBAAI,MAAM,SAAS,GAAG,GAAG;AACvB,8BAAY,KAAK,GAAG,KAAK,OAAO,MAAM,SAAS,GAAG,GAAG,QAAQ,QAAQ,KAAK,MAAM,CAAC;AAAA,gBACnF;AAAA,cACF,OAAO;AACL,sBAAM,SAAS;AACf,0BAAU,KAAK,KAAK;AAAA,cACtB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,iBAAW;AAAA,IACb;AACA,UAAM,UAAU,YAAY,KAAK,CAAC,GAAG,MAAM;AACzC,aAAO,EAAE,QAAQ,EAAE;AAAA,IACrB,CAAC;AACD,WAAO,CAAC,QAAQ,IAAI,CAAC,EAAE,SAAS,OAAO,MAAM,CAAC,SAAS,MAAM,CAAC,CAAC;AAAA,EACjE;AACF;;;AC/IA,IAAI,aAAa,MAAM;AAAA,EAHvB,OAGuB;AAAA;AAAA;AAAA,EACrB,cAAc;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO,IAAIC,MAAK;AAAA,EACvB;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,UAAM,UAAU,uBAAuB,IAAI;AAC3C,QAAI,SAAS;AACX,iBAAW,KAAK,SAAS;AACvB,aAAK,KAAK,OAAO,QAAQ,GAAG,OAAO;AAAA,MACrC;AACA;AAAA,IACF;AACA,SAAK,KAAK,OAAO,QAAQ,MAAM,OAAO;AAAA,EACxC;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,WAAO,KAAK,KAAK,OAAO,QAAQ,IAAI;AAAA,EACtC;AACF;;;AChBA,IAAIC,QAAO,cAAc,KAAS;AAAA,EALlC,OAKkC;AAAA;AAAA;AAAA,EAChC,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM,OAAO;AACb,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAAA,MAC9C,SAAS,CAAC,IAAI,aAAa,GAAG,IAAI,WAAW,CAAC;AAAA,IAChD,CAAC;AAAA,EACH;AACF;;;ACXA,IAAI,OAAO,wBAAC,YAAY;AACtB,QAAM,WAAW;AAAA,IACf,QAAQ;AAAA,IACR,cAAc,CAAC,OAAO,QAAQ,OAAO,QAAQ,UAAU,OAAO;AAAA,IAC9D,cAAc,CAAC;AAAA,IACf,eAAe,CAAC;AAAA,EAClB;AACA,QAAM,OAAO;AAAA,IACX,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,mBAAmB,CAAC,eAAe;AACvC,QAAI,OAAO,eAAe,UAAU;AAClC,aAAO,MAAM;AAAA,IACf,WAAW,OAAO,eAAe,YAAY;AAC3C,aAAO;AAAA,IACT,OAAO;AACL,aAAO,CAAC,WAAW,WAAW,SAAS,MAAM,IAAI,SAAS,WAAW,CAAC;AAAA,IACxE;AAAA,EACF,GAAG,KAAK,MAAM;AACd,SAAO,sCAAe,MAAM,GAAG,MAAM;AACnC,aAAS,IAAI,KAAK,OAAO;AACvB,QAAE,IAAI,QAAQ,IAAI,KAAK,KAAK;AAAA,IAC9B;AAFS;AAGT,UAAM,cAAc,gBAAgB,EAAE,IAAI,OAAO,QAAQ,KAAK,EAAE;AAChE,QAAI,aAAa;AACf,UAAI,+BAA+B,WAAW;AAAA,IAChD;AACA,QAAI,KAAK,WAAW,KAAK;AACvB,UAAI,QAAQ,QAAQ;AAAA,IACtB;AACA,QAAI,KAAK,aAAa;AACpB,UAAI,oCAAoC,MAAM;AAAA,IAChD;AACA,QAAI,KAAK,eAAe,QAAQ;AAC9B,UAAI,iCAAiC,KAAK,cAAc,KAAK,GAAG,CAAC;AAAA,IACnE;AACA,QAAI,EAAE,IAAI,WAAW,WAAW;AAC9B,UAAI,KAAK,UAAU,MAAM;AACvB,YAAI,0BAA0B,KAAK,OAAO,SAAS,CAAC;AAAA,MACtD;AACA,UAAI,KAAK,cAAc,QAAQ;AAC7B,YAAI,gCAAgC,KAAK,aAAa,KAAK,GAAG,CAAC;AAAA,MACjE;AACA,UAAI,UAAU,KAAK;AACnB,UAAI,CAAC,SAAS,QAAQ;AACpB,cAAM,iBAAiB,EAAE,IAAI,OAAO,gCAAgC;AACpE,YAAI,gBAAgB;AAClB,oBAAU,eAAe,MAAM,SAAS;AAAA,QAC1C;AAAA,MACF;AACA,UAAI,SAAS,QAAQ;AACnB,YAAI,gCAAgC,QAAQ,KAAK,GAAG,CAAC;AACrD,UAAE,IAAI,QAAQ,OAAO,QAAQ,gCAAgC;AAAA,MAC/D;AACA,QAAE,IAAI,QAAQ,OAAO,gBAAgB;AACrC,QAAE,IAAI,QAAQ,OAAO,cAAc;AACnC,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,SAAS,EAAE,IAAI;AAAA,QACf,QAAQ;AAAA,QACR,YAAY,EAAE,IAAI;AAAA,MACpB,CAAC;AAAA,IACH;AACA,UAAM,KAAK;AAAA,EACb,GA5CO;AA6CT,GAjEW;;;ACCX,IAAI,WAAW,wBAAC,UAAU;AACxB,QAAM,CAAC,WAAW,SAAS,IAAI,CAAC,KAAK,GAAG;AACxC,QAAM,aAAa,MAAM,IAAI,CAAC,MAAM,EAAE,QAAQ,4BAA4B,OAAO,SAAS,CAAC;AAC3F,SAAO,WAAW,KAAK,SAAS;AAClC,GAJe;AAKf,IAAI,OAAO,wBAAC,UAAU;AACpB,QAAM,QAAQ,KAAK,IAAI,IAAI;AAC3B,SAAO,SAAS,CAAC,QAAQ,MAAM,QAAQ,OAAO,KAAK,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC;AAC9E,GAHW;AAIX,IAAI,cAAc,wBAAC,WAAW;AAC5B,QAAM,MAAM;AAAA,IACV,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,IACpB,GAAG,WAAW,MAAM;AAAA,EACtB;AACA,QAAM,kBAAkB,SAAS,MAAM;AACvC,SAAO,IAAI,eAAe;AAC5B,GAZkB;AAalB,SAAS,IAAI,IAAI,QAAQ,QAAQ,MAAM,SAAS,GAAG,SAAS;AAC1D,QAAM,MAAM,WAAW,QAAuB,KAAK,MAAM,IAAI,MAAM,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,MAAM,IAAI,IAAI,IAAI,YAAY,MAAM,CAAC,IAAI,OAAO;AAC/I,KAAG,GAAG;AACR;AAHS;AAIT,IAAI,SAAS,wBAAC,KAAK,QAAQ,QAAQ;AACjC,SAAO,sCAAe,QAAQ,GAAG,MAAM;AACrC,UAAM,EAAE,OAAO,IAAI,EAAE;AACrB,UAAM,OAAO,QAAQ,EAAE,IAAI,GAAG;AAC9B,QAAI,IAAI,OAAsB,QAAQ,IAAI;AAC1C,UAAM,QAAQ,KAAK,IAAI;AACvB,UAAM,KAAK;AACX,QAAI,IAAI,OAAsB,QAAQ,MAAM,EAAE,IAAI,QAAQ,KAAK,KAAK,CAAC;AAAA,EACvE,GAPO;AAQT,GATa;;;AC3Bb,IAAI,cAAc;AAAA,EAChB,2BAA2B,CAAC,gCAAgC,cAAc;AAAA,EAC1E,2BAA2B,CAAC,gCAAgC,aAAa;AAAA,EACzE,yBAAyB,CAAC,8BAA8B,aAAa;AAAA,EACrE,oBAAoB,CAAC,wBAAwB,IAAI;AAAA,EACjD,gBAAgB,CAAC,mBAAmB,aAAa;AAAA,EACjD,yBAAyB,CAAC,6BAA6B,qCAAqC;AAAA,EAC5F,qBAAqB,CAAC,0BAA0B,SAAS;AAAA,EACzD,qBAAqB,CAAC,0BAA0B,KAAK;AAAA,EACrD,kBAAkB,CAAC,sBAAsB,QAAQ;AAAA,EACjD,eAAe,CAAC,mBAAmB,YAAY;AAAA,EAC/C,+BAA+B,CAAC,qCAAqC,MAAM;AAAA,EAC3E,gBAAgB,CAAC,oBAAoB,GAAG;AAC1C;AACA,IAAI,kBAAkB;AAAA,EACpB,2BAA2B;AAAA,EAC3B,2BAA2B;AAAA,EAC3B,yBAAyB;AAAA,EACzB,oBAAoB;AAAA,EACpB,gBAAgB;AAAA,EAChB,yBAAyB;AAAA,EACzB,qBAAqB;AAAA,EACrB,qBAAqB;AAAA,EACrB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,+BAA+B;AAAA,EAC/B,gBAAgB;AAClB;AACA,IAAI,gBAAgB,wBAAC,kBAAkB;AACrC,QAAM,UAAU,EAAE,GAAG,iBAAiB,GAAG,cAAc;AACvD,QAAM,eAAe,mBAAmB,OAAO;AAC/C,MAAI,QAAQ,uBAAuB;AACjC,iBAAa,KAAK,CAAC,2BAA2B,iBAAiB,QAAQ,qBAAqB,CAAC,CAAC;AAAA,EAChG;AACA,MAAI,QAAQ,oBAAoB;AAC9B,iBAAa,KAAK,CAAC,uBAAuB,sBAAsB,QAAQ,kBAAkB,CAAC,CAAC;AAAA,EAC9F;AACA,MAAI,QAAQ,UAAU;AACpB,iBAAa,KAAK,CAAC,aAAa,mBAAmB,QAAQ,QAAQ,CAAC,CAAC;AAAA,EACvE;AACA,SAAO,sCAAe,eAAe,KAAK,MAAM;AAC9C,UAAM,KAAK;AACX,IAAAC,YAAW,KAAK,YAAY;AAC5B,QAAI,IAAI,QAAQ,OAAO,cAAc;AAAA,EACvC,GAJO;AAKT,GAjBoB;AAkBpB,SAAS,mBAAmB,SAAS;AACnC,SAAO,OAAO,QAAQ,WAAW,EAAE,OAAO,CAAC,CAAC,GAAG,MAAM,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,YAAY,MAAM;AAC9F,UAAM,gBAAgB,QAAQ,GAAG;AACjC,WAAO,OAAO,kBAAkB,WAAW,CAAC,aAAa,CAAC,GAAG,aAAa,IAAI;AAAA,EAChF,CAAC;AACH;AALS;AAMT,SAAS,iBAAiB,uBAAuB;AAC/C,SAAO,OAAO,QAAQ,yBAAyB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,KAAK,MAAM;AAC7E,UAAM,qBAAqB,UAAU;AAAA,MACnC;AAAA,MACA,CAAC,OAAO,WAAW,SAAS,MAAM,MAAM,YAAY,IAAI,MAAM,YAAY;AAAA,IAC5E;AACA,WAAO,GAAG,kBAAkB,IAAI,MAAM,QAAQ,KAAK,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK;AAAA,EAChF,CAAC,EAAE,KAAK,IAAI;AACd;AARS;AAST,SAAS,sBAAsB,qBAAqB,CAAC,GAAG;AACtD,SAAO,mBAAmB,IAAI,CAAC,aAAa,GAAG,SAAS,IAAI,KAAK,SAAS,GAAG,GAAG,EAAE,KAAK,IAAI;AAC7F;AAFS;AAGT,SAAS,mBAAmB,WAAW,CAAC,GAAG;AACzC,SAAO,SAAS,IAAI,CAAC,WAAW,KAAK,UAAU,MAAM,CAAC,EAAE,KAAK,IAAI;AACnE;AAFS;AAGT,SAASA,YAAW,KAAK,cAAc;AACrC,eAAa,QAAQ,CAAC,CAAC,QAAQ,KAAK,MAAM;AACxC,QAAI,IAAI,QAAQ,IAAI,QAAQ,KAAK;AAAA,EACnC,CAAC;AACH;AAJS,OAAAA,aAAA;;;AC3DF,IAAM,WAAN,cAAuB,MAAM;AAAA,EATpC,OASoC;AAAA;AAAA;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EAEP,YAAY,SAAiB,aAAqB,KAAK,MAAe,gBAAyB,MAAM;AACnG,UAAM,OAAO;AACb,SAAK,aAAa;AAClB,SAAK,OAAO;AACZ,SAAK,gBAAgB;AAAA,EAGvB;AACF;AAqEO,IAAMC,gBAAe,wBAAC,KAAc,MAAe;AACxD,SAAO,YAAY,KAAK,CAAC;AAC3B,GAF4B;AAKrB,SAAS,YAAY,OAAgB,GAAY;AAEtD,WAAS,OAAO,CAAC;AAGjB,QAAM,EAAE,MAAM,OAAO,IAAI,oBAAoB,KAAK;AAClD,IAAE,OAAO,MAAM;AACf,IAAE,OAAO,gBAAgB,kBAAkB;AAG3C,SAAO,EAAE,KAAK,IAAI;AACpB;AAXgB;AAchB,SAAS,SAAS,OAAgB,GAAY;AAC5C,QAAM,YAAY,EAAE,IAAI,WAAW,KAAK;AACxC,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AACzC,QAAM,MAAM,EAAE,IAAI;AAClB,QAAM,SAAS,EAAE,IAAI;AACrB,QAAM,YAAY,EAAE,IAAI,OAAO,YAAY,KAAK;AAChD,QAAM,KAAK,EAAE,IAAI,OAAO,kBAAkB,KAAK,EAAE,IAAI,OAAO,iBAAiB,KAAK;AAGlF,QAAM,WAAW;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO;AAAA,MACL,MAAM,iBAAiB,QAAQ,MAAM,OAAO;AAAA,MAC5C,SAAS,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AAAA,MAC9D,OAAO,iBAAiB,QAAQ,MAAM,QAAQ;AAAA,MAC9C,MAAM,iBAAiB,WAAW,MAAM,OAAO;AAAA,IACjD;AAAA,EACF;AAGA,MAAI,iBAAiB,YAAY,MAAM,eAAe;AACpD,YAAQ,KAAK,sBAAsB,QAAQ;AAAA,EAC7C,OAAO;AACL,YAAQ,MAAM,iBAAiB,QAAQ;AAAA,EACzC;AAGA,wBAAsB,QAAQ;AAChC;AAjCS;AAoCT,SAAS,oBAAoB,OAAuD;AAClF,MAAI,iBAAiB,UAAU;AAC7B,WAAO;AAAA,MACL,QAAQ,MAAM;AAAA,MACd,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,OAAO,MAAM;AAAA,QACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAEA,MAAI,iBAAiB,OAAO;AAC1B,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,OAAO,MAAM;AAAA,QACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW;AAAA,MACb;AAAA,IACF;AAAA,EACF;AAGA,SAAO;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW;AAAA,IACb;AAAA,EACF;AACF;AAnCS;AAsCT,eAAe,sBAAsB,WAAgB;AACnD,MAAI;AAEF;AAAA,EACF,SAAS,GAAG;AAAA,EAEZ;AACF;AAPe;;;ACnLR,IAAM,cAAN,cAA0B,MAAM;AAAA,EACrC,YACE,SACO,MACA,aAAqB,KACrB,SACP;AACA,UAAM,OAAO;AAJN;AACA;AACA;AAGP,SAAK,OAAO;AAAA,EACd;AAAA,EAdF,OAKuC;AAAA;AAAA;AAUvC;AAEO,IAAM,cAAc;AAAA,EACzB,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,WAAW;AACbb,EAAAA,MAAK,cAAc,CAAC,MAAM;AAAA,EAAE;AAC5B,WAAS,SAAS,MAAM;AAAA,EAAE;AAAjB;AACT,EAAAA,MAAK,WAAW;AAChB,WAAS,YAAY,IAAI;AACrB,UAAM,IAAI,MAAM;AAAA,EACpB;AAFS;AAGT,EAAAA,MAAK,cAAc;AACnB,EAAAA,MAAK,cAAc,CAAC,UAAU;AAC1B,UAAM,MAAM,CAAC;AACb,eAAW,QAAQ,OAAO;AACtB,UAAI,IAAI,IAAI;AAAA,IAChB;AACA,WAAO;AAAA,EACX;AACA,EAAAA,MAAK,qBAAqB,CAAC,QAAQ;AAC/B,UAAM,YAAYA,MAAK,WAAW,GAAG,EAAE,OAAO,CAAC,MAAM,OAAO,IAAI,IAAI,CAAC,CAAC,MAAM,QAAQ;AACpF,UAAM,WAAW,CAAC;AAClB,eAAW,KAAK,WAAW;AACvB,eAAS,CAAC,IAAI,IAAI,CAAC;AAAA,IACvB;AACA,WAAOA,MAAK,aAAa,QAAQ;AAAA,EACrC;AACA,EAAAA,MAAK,eAAe,CAAC,QAAQ;AACzB,WAAOA,MAAK,WAAW,GAAG,EAAE,IAAI,SAAU,GAAG;AACzC,aAAO,IAAI,CAAC;AAAA,IAChB,CAAC;AAAA,EACL;AACA,EAAAA,MAAK,aAAa,OAAO,OAAO,SAAS,aACnC,CAAC,QAAQ,OAAO,KAAK,GAAG,IACxB,CAAC,WAAW;AACV,UAAM,OAAO,CAAC;AACd,eAAW,OAAO,QAAQ;AACtB,UAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,GAAG;AACnD,aAAK,KAAK,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ,EAAAA,MAAK,OAAO,CAAC,KAAK,YAAY;AAC1B,eAAW,QAAQ,KAAK;AACpB,UAAI,QAAQ,IAAI;AACZ,eAAO;AAAA,IACf;AACA,WAAO;AAAA,EACX;AACA,EAAAA,MAAK,YAAY,OAAO,OAAO,cAAc,aACvC,CAAC,QAAQ,OAAO,UAAU,GAAG,IAC7B,CAAC,QAAQ,OAAO,QAAQ,YAAY,OAAO,SAAS,GAAG,KAAK,KAAK,MAAM,GAAG,MAAM;AACtF,WAAS,WAAW,OAAO,YAAY,OAAO;AAC1C,WAAO,MAAM,IAAI,CAAC,QAAS,OAAO,QAAQ,WAAW,IAAI,GAAG,MAAM,GAAI,EAAE,KAAK,SAAS;AAAA,EAC1F;AAFS;AAGT,EAAAA,MAAK,aAAa;AAClB,EAAAA,MAAK,wBAAwB,CAAC,GAAG,UAAU;AACvC,QAAI,OAAO,UAAU,UAAU;AAC3B,aAAO,MAAM,SAAS;AAAA,IAC1B;AACA,WAAO;AAAA,EACX;AACJ,GAAG,SAAS,OAAO,CAAC,EAAE;AACf,IAAI;AAAA,CACV,SAAUC,aAAY;AACnB,EAAAA,YAAW,cAAc,CAAC,OAAO,WAAW;AACxC,WAAO;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IACP;AAAA,EACJ;AACJ,GAAG,eAAe,aAAa,CAAC,EAAE;AAC3B,IAAM,gBAAgB,KAAK,YAAY;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACM,IAAM,gBAAgB,wBAAC,SAAS;AACnC,QAAM,IAAI,OAAO;AACjB,UAAQ,GAAG;AAAA,IACP,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,aAAO,OAAO,MAAM,IAAI,IAAI,cAAc,MAAM,cAAc;AAAA,IAClE,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,aAAO,cAAc;AAAA,IACzB,KAAK;AACD,UAAI,MAAM,QAAQ,IAAI,GAAG;AACrB,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,SAAS,MAAM;AACf,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,KAAK,QAAQ,OAAO,KAAK,SAAS,cAAc,KAAK,SAAS,OAAO,KAAK,UAAU,YAAY;AAChG,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,OAAO,QAAQ,eAAe,gBAAgB,KAAK;AACnD,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,OAAO,QAAQ,eAAe,gBAAgB,KAAK;AACnD,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,OAAO,SAAS,eAAe,gBAAgB,MAAM;AACrD,eAAO,cAAc;AAAA,MACzB;AACA,aAAO,cAAc;AAAA,IACzB;AACI,aAAO,cAAc;AAAA,EAC7B;AACJ,GAxC6B;;;AC3FtB,IAAM,eAAe,KAAK,YAAY;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACM,IAAM,gBAAgB,wBAAC,QAAQ;AAClC,QAAM,OAAO,KAAK,UAAU,KAAK,MAAM,CAAC;AACxC,SAAO,KAAK,QAAQ,eAAe,KAAK;AAC5C,GAH6B;AAItB,IAAM,WAAN,MAAM,kBAAiB,MAAM;AAAA,EAvBpC,OAuBoC;AAAA;AAAA;AAAA,EAChC,IAAI,SAAS;AACT,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,YAAY,QAAQ;AAChB,UAAM;AACN,SAAK,SAAS,CAAC;AACf,SAAK,WAAW,CAAC,QAAQ;AACrB,WAAK,SAAS,CAAC,GAAG,KAAK,QAAQ,GAAG;AAAA,IACtC;AACA,SAAK,YAAY,CAAC,OAAO,CAAC,MAAM;AAC5B,WAAK,SAAS,CAAC,GAAG,KAAK,QAAQ,GAAG,IAAI;AAAA,IAC1C;AACA,UAAM,cAAc,WAAW;AAC/B,QAAI,OAAO,gBAAgB;AAEvB,aAAO,eAAe,MAAM,WAAW;AAAA,IAC3C,OACK;AACD,WAAK,YAAY;AAAA,IACrB;AACA,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA,EAClB;AAAA,EACA,OAAO,SAAS;AACZ,UAAM,SAAS,WACX,SAAU,OAAO;AACb,aAAO,MAAM;AAAA,IACjB;AACJ,UAAM,cAAc,EAAE,SAAS,CAAC,EAAE;AAClC,UAAM,eAAe,wBAAC,UAAU;AAC5B,iBAAW,SAAS,MAAM,QAAQ;AAC9B,YAAI,MAAM,SAAS,iBAAiB;AAChC,gBAAM,YAAY,IAAI,YAAY;AAAA,QACtC,WACS,MAAM,SAAS,uBAAuB;AAC3C,uBAAa,MAAM,eAAe;AAAA,QACtC,WACS,MAAM,SAAS,qBAAqB;AACzC,uBAAa,MAAM,cAAc;AAAA,QACrC,WACS,MAAM,KAAK,WAAW,GAAG;AAC9B,sBAAY,QAAQ,KAAK,OAAO,KAAK,CAAC;AAAA,QAC1C,OACK;AACD,cAAI,OAAO;AACX,cAAI,IAAI;AACR,iBAAO,IAAI,MAAM,KAAK,QAAQ;AAC1B,kBAAM,KAAK,MAAM,KAAK,CAAC;AACvB,kBAAM,WAAW,MAAM,MAAM,KAAK,SAAS;AAC3C,gBAAI,CAAC,UAAU;AACX,mBAAK,EAAE,IAAI,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE;AAAA,YAQzC,OACK;AACD,mBAAK,EAAE,IAAI,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE;AACrC,mBAAK,EAAE,EAAE,QAAQ,KAAK,OAAO,KAAK,CAAC;AAAA,YACvC;AACA,mBAAO,KAAK,EAAE;AACd;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,GAvCqB;AAwCrB,iBAAa,IAAI;AACjB,WAAO;AAAA,EACX;AAAA,EACA,OAAO,OAAO,OAAO;AACjB,QAAI,EAAE,iBAAiB,YAAW;AAC9B,YAAM,IAAI,MAAM,mBAAmB,KAAK,EAAE;AAAA,IAC9C;AAAA,EACJ;AAAA,EACA,WAAW;AACP,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,UAAU,KAAK,QAAQ,KAAK,uBAAuB,CAAC;AAAA,EACpE;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,OAAO,WAAW;AAAA,EAClC;AAAA,EACA,QAAQ,SAAS,CAAC,UAAU,MAAM,SAAS;AACvC,UAAM,cAAc,CAAC;AACrB,UAAM,aAAa,CAAC;AACpB,eAAW,OAAO,KAAK,QAAQ;AAC3B,UAAI,IAAI,KAAK,SAAS,GAAG;AACrB,cAAM,UAAU,IAAI,KAAK,CAAC;AAC1B,oBAAY,OAAO,IAAI,YAAY,OAAO,KAAK,CAAC;AAChD,oBAAY,OAAO,EAAE,KAAK,OAAO,GAAG,CAAC;AAAA,MACzC,OACK;AACD,mBAAW,KAAK,OAAO,GAAG,CAAC;AAAA,MAC/B;AAAA,IACJ;AACA,WAAO,EAAE,YAAY,YAAY;AAAA,EACrC;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,QAAQ;AAAA,EACxB;AACJ;AACA,SAAS,SAAS,CAAC,WAAW;AAC1B,QAAM,QAAQ,IAAI,SAAS,MAAM;AACjC,SAAO;AACX;;;AClIA,IAAM,WAAW,wBAAC,OAAO,SAAS;AAC9B,MAAI;AACJ,UAAQ,MAAM,MAAM;AAAA,IAChB,KAAK,aAAa;AACd,UAAI,MAAM,aAAa,cAAc,WAAW;AAC5C,kBAAU;AAAA,MACd,OACK;AACD,kBAAU,YAAY,MAAM,QAAQ,cAAc,MAAM,QAAQ;AAAA,MACpE;AACA;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU,mCAAmC,KAAK,UAAU,MAAM,UAAU,KAAK,qBAAqB,CAAC;AACvG;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU,kCAAkC,KAAK,WAAW,MAAM,MAAM,IAAI,CAAC;AAC7E;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU,yCAAyC,KAAK,WAAW,MAAM,OAAO,CAAC;AACjF;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU,gCAAgC,KAAK,WAAW,MAAM,OAAO,CAAC,eAAe,MAAM,QAAQ;AACrG;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,UAAI,OAAO,MAAM,eAAe,UAAU;AACtC,YAAI,cAAc,MAAM,YAAY;AAChC,oBAAU,gCAAgC,MAAM,WAAW,QAAQ;AACnE,cAAI,OAAO,MAAM,WAAW,aAAa,UAAU;AAC/C,sBAAU,GAAG,OAAO,sDAAsD,MAAM,WAAW,QAAQ;AAAA,UACvG;AAAA,QACJ,WACS,gBAAgB,MAAM,YAAY;AACvC,oBAAU,mCAAmC,MAAM,WAAW,UAAU;AAAA,QAC5E,WACS,cAAc,MAAM,YAAY;AACrC,oBAAU,iCAAiC,MAAM,WAAW,QAAQ;AAAA,QACxE,OACK;AACD,eAAK,YAAY,MAAM,UAAU;AAAA,QACrC;AAAA,MACJ,WACS,MAAM,eAAe,SAAS;AACnC,kBAAU,WAAW,MAAM,UAAU;AAAA,MACzC,OACK;AACD,kBAAU;AAAA,MACd;AACA;AAAA,IACJ,KAAK,aAAa;AACd,UAAI,MAAM,SAAS;AACf,kBAAU,sBAAsB,MAAM,QAAQ,YAAY,MAAM,YAAY,aAAa,WAAW,IAAI,MAAM,OAAO;AAAA,eAChH,MAAM,SAAS;AACpB,kBAAU,uBAAuB,MAAM,QAAQ,YAAY,MAAM,YAAY,aAAa,MAAM,IAAI,MAAM,OAAO;AAAA,eAC5G,MAAM,SAAS;AACpB,kBAAU,kBAAkB,MAAM,QAAQ,sBAAsB,MAAM,YAAY,8BAA8B,eAAe,GAAG,MAAM,OAAO;AAAA,eAC1I,MAAM,SAAS;AACpB,kBAAU,kBAAkB,MAAM,QAAQ,sBAAsB,MAAM,YAAY,8BAA8B,eAAe,GAAG,MAAM,OAAO;AAAA,eAC1I,MAAM,SAAS;AACpB,kBAAU,gBAAgB,MAAM,QAAQ,sBAAsB,MAAM,YAAY,8BAA8B,eAAe,GAAG,IAAI,KAAK,OAAO,MAAM,OAAO,CAAC,CAAC;AAAA;AAE/J,kBAAU;AACd;AAAA,IACJ,KAAK,aAAa;AACd,UAAI,MAAM,SAAS;AACf,kBAAU,sBAAsB,MAAM,QAAQ,YAAY,MAAM,YAAY,YAAY,WAAW,IAAI,MAAM,OAAO;AAAA,eAC/G,MAAM,SAAS;AACpB,kBAAU,uBAAuB,MAAM,QAAQ,YAAY,MAAM,YAAY,YAAY,OAAO,IAAI,MAAM,OAAO;AAAA,eAC5G,MAAM,SAAS;AACpB,kBAAU,kBAAkB,MAAM,QAAQ,YAAY,MAAM,YAAY,0BAA0B,WAAW,IAAI,MAAM,OAAO;AAAA,eACzH,MAAM,SAAS;AACpB,kBAAU,kBAAkB,MAAM,QAAQ,YAAY,MAAM,YAAY,0BAA0B,WAAW,IAAI,MAAM,OAAO;AAAA,eACzH,MAAM,SAAS;AACpB,kBAAU,gBAAgB,MAAM,QAAQ,YAAY,MAAM,YAAY,6BAA6B,cAAc,IAAI,IAAI,KAAK,OAAO,MAAM,OAAO,CAAC,CAAC;AAAA;AAEpJ,kBAAU;AACd;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU,gCAAgC,MAAM,UAAU;AAC1D;AAAA,IACJ,KAAK,aAAa;AACd,gBAAU;AACV;AAAA,IACJ;AACI,gBAAU,KAAK;AACf,WAAK,YAAY,KAAK;AAAA,EAC9B;AACA,SAAO,EAAE,QAAQ;AACrB,GAzGiB;AA0GjB,IAAO,aAAQ;;;AC3Gf,IAAI,mBAAmB;AAEhB,SAAS,YAAY,KAAK;AAC7B,qBAAmB;AACvB;AAFgB;AAGT,SAAS,cAAc;AAC1B,SAAO;AACX;AAFgB;;;ACJT,IAAM,YAAY,wBAAC,WAAW;AACjC,QAAM,EAAE,MAAM,MAAM,WAAW,UAAU,IAAI;AAC7C,QAAM,WAAW,CAAC,GAAG,MAAM,GAAI,UAAU,QAAQ,CAAC,CAAE;AACpD,QAAM,YAAY;AAAA,IACd,GAAG;AAAA,IACH,MAAM;AAAA,EACV;AACA,MAAI,UAAU,YAAY,QAAW;AACjC,WAAO;AAAA,MACH,GAAG;AAAA,MACH,MAAM;AAAA,MACN,SAAS,UAAU;AAAA,IACvB;AAAA,EACJ;AACA,MAAI,eAAe;AACnB,QAAM,OAAO,UACR,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EACjB,MAAM,EACN,QAAQ;AACb,aAAW,OAAO,MAAM;AACpB,mBAAe,IAAI,WAAW,EAAE,MAAM,cAAc,aAAa,CAAC,EAAE;AAAA,EACxE;AACA,SAAO;AAAA,IACH,GAAG;AAAA,IACH,MAAM;AAAA,IACN,SAAS;AAAA,EACb;AACJ,GA3ByB;AA4BlB,IAAM,aAAa,CAAC;AACpB,SAAS,kBAAkB,KAAK,WAAW;AAC9C,QAAM,cAAc,YAAY;AAChC,QAAM,QAAQ,UAAU;AAAA,IACpB;AAAA,IACA,MAAM,IAAI;AAAA,IACV,MAAM,IAAI;AAAA,IACV,WAAW;AAAA,MACP,IAAI,OAAO;AAAA;AAAA,MACX,IAAI;AAAA;AAAA,MACJ;AAAA;AAAA,MACA,gBAAgB,aAAkB,SAAY;AAAA;AAAA,IAClD,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EACvB,CAAC;AACD,MAAI,OAAO,OAAO,KAAK,KAAK;AAChC;AAdgB;AAeT,IAAM,cAAN,MAAM,aAAY;AAAA,EA9CzB,OA8CyB;AAAA;AAAA;AAAA,EACrB,cAAc;AACV,SAAK,QAAQ;AAAA,EACjB;AAAA,EACA,QAAQ;AACJ,QAAI,KAAK,UAAU;AACf,WAAK,QAAQ;AAAA,EACrB;AAAA,EACA,QAAQ;AACJ,QAAI,KAAK,UAAU;AACf,WAAK,QAAQ;AAAA,EACrB;AAAA,EACA,OAAO,WAAW,QAAQ,SAAS;AAC/B,UAAM,aAAa,CAAC;AACpB,eAAW,KAAK,SAAS;AACrB,UAAI,EAAE,WAAW;AACb,eAAO;AACX,UAAI,EAAE,WAAW;AACb,eAAO,MAAM;AACjB,iBAAW,KAAK,EAAE,KAAK;AAAA,IAC3B;AACA,WAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,WAAW;AAAA,EACrD;AAAA,EACA,aAAa,iBAAiB,QAAQ,OAAO;AACzC,UAAM,YAAY,CAAC;AACnB,eAAW,QAAQ,OAAO;AACtB,YAAM,MAAM,MAAM,KAAK;AACvB,YAAM,QAAQ,MAAM,KAAK;AACzB,gBAAU,KAAK;AAAA,QACX;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AACA,WAAO,aAAY,gBAAgB,QAAQ,SAAS;AAAA,EACxD;AAAA,EACA,OAAO,gBAAgB,QAAQ,OAAO;AAClC,UAAM,cAAc,CAAC;AACrB,eAAW,QAAQ,OAAO;AACtB,YAAM,EAAE,KAAK,MAAM,IAAI;AACvB,UAAI,IAAI,WAAW;AACf,eAAO;AACX,UAAI,MAAM,WAAW;AACjB,eAAO;AACX,UAAI,IAAI,WAAW;AACf,eAAO,MAAM;AACjB,UAAI,MAAM,WAAW;AACjB,eAAO,MAAM;AACjB,UAAI,IAAI,UAAU,gBAAgB,OAAO,MAAM,UAAU,eAAe,KAAK,YAAY;AACrF,oBAAY,IAAI,KAAK,IAAI,MAAM;AAAA,MACnC;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,YAAY;AAAA,EACtD;AACJ;AACO,IAAM,UAAU,OAAO,OAAO;AAAA,EACjC,QAAQ;AACZ,CAAC;AACM,IAAM,QAAQ,wBAAC,WAAW,EAAE,QAAQ,SAAS,MAAM,IAArC;AACd,IAAM,KAAK,wBAAC,WAAW,EAAE,QAAQ,SAAS,MAAM,IAArC;AACX,IAAM,YAAY,wBAAC,MAAM,EAAE,WAAW,WAApB;AAClB,IAAM,UAAU,wBAAC,MAAM,EAAE,WAAW,SAApB;AAChB,IAAM,UAAU,wBAAC,MAAM,EAAE,WAAW,SAApB;AAChB,IAAM,UAAU,wBAAC,MAAM,OAAO,YAAY,eAAe,aAAa,SAAtD;;;AC5GhB,IAAI;AAAA,CACV,SAAUC,YAAW;AAClB,EAAAA,WAAU,WAAW,CAAC,YAAY,OAAO,YAAY,WAAW,EAAE,QAAQ,IAAI,WAAW,CAAC;AAE1F,EAAAA,WAAU,WAAW,CAAC,YAAY,OAAO,YAAY,WAAW,UAAU,SAAS;AACvF,GAAG,cAAc,YAAY,CAAC,EAAE;;;ACAhC,IAAM,qBAAN,MAAyB;AAAA,EALzB,OAKyB;AAAA;AAAA;AAAA,EACrB,YAAY,QAAQ,OAAO,MAAM,KAAK;AAClC,SAAK,cAAc,CAAC;AACpB,SAAK,SAAS;AACd,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,IAAI,OAAO;AACP,QAAI,CAAC,KAAK,YAAY,QAAQ;AAC1B,UAAI,MAAM,QAAQ,KAAK,IAAI,GAAG;AAC1B,aAAK,YAAY,KAAK,GAAG,KAAK,OAAO,GAAG,KAAK,IAAI;AAAA,MACrD,OACK;AACD,aAAK,YAAY,KAAK,GAAG,KAAK,OAAO,KAAK,IAAI;AAAA,MAClD;AAAA,IACJ;AACA,WAAO,KAAK;AAAA,EAChB;AACJ;AACA,IAAM,eAAe,wBAAC,KAAK,WAAW;AAClC,MAAI,QAAQ,MAAM,GAAG;AACjB,WAAO,EAAE,SAAS,MAAM,MAAM,OAAO,MAAM;AAAA,EAC/C,OACK;AACD,QAAI,CAAC,IAAI,OAAO,OAAO,QAAQ;AAC3B,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC/D;AACA,WAAO;AAAA,MACH,SAAS;AAAA,MACT,IAAI,QAAQ;AACR,YAAI,KAAK;AACL,iBAAO,KAAK;AAChB,cAAM,QAAQ,IAAI,SAAS,IAAI,OAAO,MAAM;AAC5C,aAAK,SAAS;AACd,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,EACJ;AACJ,GAnBqB;AAoBrB,SAAS,oBAAoB,QAAQ;AACjC,MAAI,CAAC;AACD,WAAO,CAAC;AACZ,QAAM,EAAE,UAAAC,WAAU,oBAAoB,gBAAgB,YAAY,IAAI;AACtE,MAAIA,cAAa,sBAAsB,iBAAiB;AACpD,UAAM,IAAI,MAAM,0FAA0F;AAAA,EAC9G;AACA,MAAIA;AACA,WAAO,EAAE,UAAUA,WAAU,YAAY;AAC7C,QAAM,YAAY,wBAAC,KAAK,QAAQ;AAC5B,UAAM,EAAE,QAAQ,IAAI;AACpB,QAAI,IAAI,SAAS,sBAAsB;AACnC,aAAO,EAAE,SAAS,WAAW,IAAI,aAAa;AAAA,IAClD;AACA,QAAI,OAAO,IAAI,SAAS,aAAa;AACjC,aAAO,EAAE,SAAS,WAAW,kBAAkB,IAAI,aAAa;AAAA,IACpE;AACA,QAAI,IAAI,SAAS;AACb,aAAO,EAAE,SAAS,IAAI,aAAa;AACvC,WAAO,EAAE,SAAS,WAAW,sBAAsB,IAAI,aAAa;AAAA,EACxE,GAXkB;AAYlB,SAAO,EAAE,UAAU,WAAW,YAAY;AAC9C;AAtBS;AAuBF,IAAM,UAAN,MAAc;AAAA,EApErB,OAoEqB;AAAA;AAAA;AAAA,EACjB,IAAI,cAAc;AACd,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,SAAS,OAAO;AACZ,WAAO,cAAc,MAAM,IAAI;AAAA,EACnC;AAAA,EACA,gBAAgB,OAAO,KAAK;AACxB,WAAQ,OAAO;AAAA,MACX,QAAQ,MAAM,OAAO;AAAA,MACrB,MAAM,MAAM;AAAA,MACZ,YAAY,cAAc,MAAM,IAAI;AAAA,MACpC,gBAAgB,KAAK,KAAK;AAAA,MAC1B,MAAM,MAAM;AAAA,MACZ,QAAQ,MAAM;AAAA,IAClB;AAAA,EACJ;AAAA,EACA,oBAAoB,OAAO;AACvB,WAAO;AAAA,MACH,QAAQ,IAAI,YAAY;AAAA,MACxB,KAAK;AAAA,QACD,QAAQ,MAAM,OAAO;AAAA,QACrB,MAAM,MAAM;AAAA,QACZ,YAAY,cAAc,MAAM,IAAI;AAAA,QACpC,gBAAgB,KAAK,KAAK;AAAA,QAC1B,MAAM,MAAM;AAAA,QACZ,QAAQ,MAAM;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW,OAAO;AACd,UAAM,SAAS,KAAK,OAAO,KAAK;AAChC,QAAI,QAAQ,MAAM,GAAG;AACjB,YAAM,IAAI,MAAM,wCAAwC;AAAA,IAC5D;AACA,WAAO;AAAA,EACX;AAAA,EACA,YAAY,OAAO;AACf,UAAM,SAAS,KAAK,OAAO,KAAK;AAChC,WAAO,QAAQ,QAAQ,MAAM;AAAA,EACjC;AAAA,EACA,MAAM,MAAM,QAAQ;AAChB,UAAM,SAAS,KAAK,UAAU,MAAM,MAAM;AAC1C,QAAI,OAAO;AACP,aAAO,OAAO;AAClB,UAAM,OAAO;AAAA,EACjB;AAAA,EACA,UAAU,MAAM,QAAQ;AACpB,UAAM,MAAM;AAAA,MACR,QAAQ;AAAA,QACJ,QAAQ,CAAC;AAAA,QACT,OAAO,QAAQ,SAAS;AAAA,QACxB,oBAAoB,QAAQ;AAAA,MAChC;AAAA,MACA,MAAM,QAAQ,QAAQ,CAAC;AAAA,MACvB,gBAAgB,KAAK,KAAK;AAAA,MAC1B,QAAQ;AAAA,MACR;AAAA,MACA,YAAY,cAAc,IAAI;AAAA,IAClC;AACA,UAAM,SAAS,KAAK,WAAW,EAAE,MAAM,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC;AACpE,WAAO,aAAa,KAAK,MAAM;AAAA,EACnC;AAAA,EACA,YAAY,MAAM;AACd,UAAM,MAAM;AAAA,MACR,QAAQ;AAAA,QACJ,QAAQ,CAAC;AAAA,QACT,OAAO,CAAC,CAAC,KAAK,WAAW,EAAE;AAAA,MAC/B;AAAA,MACA,MAAM,CAAC;AAAA,MACP,gBAAgB,KAAK,KAAK;AAAA,MAC1B,QAAQ;AAAA,MACR;AAAA,MACA,YAAY,cAAc,IAAI;AAAA,IAClC;AACA,QAAI,CAAC,KAAK,WAAW,EAAE,OAAO;AAC1B,UAAI;AACA,cAAM,SAAS,KAAK,WAAW,EAAE,MAAM,MAAM,CAAC,GAAG,QAAQ,IAAI,CAAC;AAC9D,eAAO,QAAQ,MAAM,IACf;AAAA,UACE,OAAO,OAAO;AAAA,QAClB,IACE;AAAA,UACE,QAAQ,IAAI,OAAO;AAAA,QACvB;AAAA,MACR,SACO,KAAK;AACR,YAAI,KAAK,SAAS,YAAY,GAAG,SAAS,aAAa,GAAG;AACtD,eAAK,WAAW,EAAE,QAAQ;AAAA,QAC9B;AACA,YAAI,SAAS;AAAA,UACT,QAAQ,CAAC;AAAA,UACT,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,KAAK,YAAY,EAAE,MAAM,MAAM,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,KAAK,CAAC,WAAW,QAAQ,MAAM,IAClF;AAAA,MACE,OAAO,OAAO;AAAA,IAClB,IACE;AAAA,MACE,QAAQ,IAAI,OAAO;AAAA,IACvB,CAAC;AAAA,EACT;AAAA,EACA,MAAM,WAAW,MAAM,QAAQ;AAC3B,UAAM,SAAS,MAAM,KAAK,eAAe,MAAM,MAAM;AACrD,QAAI,OAAO;AACP,aAAO,OAAO;AAClB,UAAM,OAAO;AAAA,EACjB;AAAA,EACA,MAAM,eAAe,MAAM,QAAQ;AAC/B,UAAM,MAAM;AAAA,MACR,QAAQ;AAAA,QACJ,QAAQ,CAAC;AAAA,QACT,oBAAoB,QAAQ;AAAA,QAC5B,OAAO;AAAA,MACX;AAAA,MACA,MAAM,QAAQ,QAAQ,CAAC;AAAA,MACvB,gBAAgB,KAAK,KAAK;AAAA,MAC1B,QAAQ;AAAA,MACR;AAAA,MACA,YAAY,cAAc,IAAI;AAAA,IAClC;AACA,UAAM,mBAAmB,KAAK,OAAO,EAAE,MAAM,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC;AAC1E,UAAM,SAAS,OAAO,QAAQ,gBAAgB,IAAI,mBAAmB,QAAQ,QAAQ,gBAAgB;AACrG,WAAO,aAAa,KAAK,MAAM;AAAA,EACnC;AAAA,EACA,OAAO,OAAO,SAAS;AACnB,UAAM,qBAAqB,wBAAC,QAAQ;AAChC,UAAI,OAAO,YAAY,YAAY,OAAO,YAAY,aAAa;AAC/D,eAAO,EAAE,QAAQ;AAAA,MACrB,WACS,OAAO,YAAY,YAAY;AACpC,eAAO,QAAQ,GAAG;AAAA,MACtB,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ,GAV2B;AAW3B,WAAO,KAAK,YAAY,CAAC,KAAK,QAAQ;AAClC,YAAM,SAAS,MAAM,GAAG;AACxB,YAAM,WAAW,6BAAM,IAAI,SAAS;AAAA,QAChC,MAAM,aAAa;AAAA,QACnB,GAAG,mBAAmB,GAAG;AAAA,MAC7B,CAAC,GAHgB;AAIjB,UAAI,OAAO,YAAY,eAAe,kBAAkB,SAAS;AAC7D,eAAO,OAAO,KAAK,CAAC,SAAS;AACzB,cAAI,CAAC,MAAM;AACP,qBAAS;AACT,mBAAO;AAAA,UACX,OACK;AACD,mBAAO;AAAA,UACX;AAAA,QACJ,CAAC;AAAA,MACL;AACA,UAAI,CAAC,QAAQ;AACT,iBAAS;AACT,eAAO;AAAA,MACX,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,WAAW,OAAO,gBAAgB;AAC9B,WAAO,KAAK,YAAY,CAAC,KAAK,QAAQ;AAClC,UAAI,CAAC,MAAM,GAAG,GAAG;AACb,YAAI,SAAS,OAAO,mBAAmB,aAAa,eAAe,KAAK,GAAG,IAAI,cAAc;AAC7F,eAAO;AAAA,MACX,OACK;AACD,eAAO;AAAA,MACX;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,YAAY,YAAY;AACpB,WAAO,IAAI,WAAW;AAAA,MAClB,QAAQ;AAAA,MACR,UAAU,sBAAsB;AAAA,MAChC,QAAQ,EAAE,MAAM,cAAc,WAAW;AAAA,IAC7C,CAAC;AAAA,EACL;AAAA,EACA,YAAY,YAAY;AACpB,WAAO,KAAK,YAAY,UAAU;AAAA,EACtC;AAAA,EACA,YAAY,KAAK;AAEb,SAAK,MAAM,KAAK;AAChB,SAAK,OAAO;AACZ,SAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AACjC,SAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,SAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,SAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI;AACnD,SAAK,MAAM,KAAK,IAAI,KAAK,IAAI;AAC7B,SAAK,SAAS,KAAK,OAAO,KAAK,IAAI;AACnC,SAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,SAAK,cAAc,KAAK,YAAY,KAAK,IAAI;AAC7C,SAAK,WAAW,KAAK,SAAS,KAAK,IAAI;AACvC,SAAK,WAAW,KAAK,SAAS,KAAK,IAAI;AACvC,SAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,SAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AACjC,SAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,SAAK,KAAK,KAAK,GAAG,KAAK,IAAI;AAC3B,SAAK,MAAM,KAAK,IAAI,KAAK,IAAI;AAC7B,SAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,SAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AACjC,SAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,SAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AACjC,SAAK,WAAW,KAAK,SAAS,KAAK,IAAI;AACvC,SAAK,OAAO,KAAK,KAAK,KAAK,IAAI;AAC/B,SAAK,WAAW,KAAK,SAAS,KAAK,IAAI;AACvC,SAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,SAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,SAAK,WAAW,IAAI;AAAA,MAChB,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU,wBAAC,SAAS,KAAK,WAAW,EAAE,IAAI,GAAhC;AAAA,IACd;AAAA,EACJ;AAAA,EACA,WAAW;AACP,WAAO,YAAY,OAAO,MAAM,KAAK,IAAI;AAAA,EAC7C;AAAA,EACA,WAAW;AACP,WAAO,YAAY,OAAO,MAAM,KAAK,IAAI;AAAA,EAC7C;AAAA,EACA,UAAU;AACN,WAAO,KAAK,SAAS,EAAE,SAAS;AAAA,EACpC;AAAA,EACA,QAAQ;AACJ,WAAO,SAAS,OAAO,IAAI;AAAA,EAC/B;AAAA,EACA,UAAU;AACN,WAAO,WAAW,OAAO,MAAM,KAAK,IAAI;AAAA,EAC5C;AAAA,EACA,GAAG,QAAQ;AACP,WAAO,SAAS,OAAO,CAAC,MAAM,MAAM,GAAG,KAAK,IAAI;AAAA,EACpD;AAAA,EACA,IAAI,UAAU;AACV,WAAO,gBAAgB,OAAO,MAAM,UAAU,KAAK,IAAI;AAAA,EAC3D;AAAA,EACA,UAAU,WAAW;AACjB,WAAO,IAAI,WAAW;AAAA,MAClB,GAAG,oBAAoB,KAAK,IAAI;AAAA,MAChC,QAAQ;AAAA,MACR,UAAU,sBAAsB;AAAA,MAChC,QAAQ,EAAE,MAAM,aAAa,UAAU;AAAA,IAC3C,CAAC;AAAA,EACL;AAAA,EACA,QAAQ,KAAK;AACT,UAAM,mBAAmB,OAAO,QAAQ,aAAa,MAAM,MAAM;AACjE,WAAO,IAAI,WAAW;AAAA,MAClB,GAAG,oBAAoB,KAAK,IAAI;AAAA,MAChC,WAAW;AAAA,MACX,cAAc;AAAA,MACd,UAAU,sBAAsB;AAAA,IACpC,CAAC;AAAA,EACL;AAAA,EACA,QAAQ;AACJ,WAAO,IAAI,WAAW;AAAA,MAClB,UAAU,sBAAsB;AAAA,MAChC,MAAM;AAAA,MACN,GAAG,oBAAoB,KAAK,IAAI;AAAA,IACpC,CAAC;AAAA,EACL;AAAA,EACA,MAAM,KAAK;AACP,UAAM,iBAAiB,OAAO,QAAQ,aAAa,MAAM,MAAM;AAC/D,WAAO,IAAI,SAAS;AAAA,MAChB,GAAG,oBAAoB,KAAK,IAAI;AAAA,MAChC,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU,sBAAsB;AAAA,IACpC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,aAAa;AAClB,UAAM,OAAO,KAAK;AAClB,WAAO,IAAI,KAAK;AAAA,MACZ,GAAG,KAAK;AAAA,MACR;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,KAAK,QAAQ;AACT,WAAO,YAAY,OAAO,MAAM,MAAM;AAAA,EAC1C;AAAA,EACA,WAAW;AACP,WAAO,YAAY,OAAO,IAAI;AAAA,EAClC;AAAA,EACA,aAAa;AACT,WAAO,KAAK,UAAU,MAAS,EAAE;AAAA,EACrC;AAAA,EACA,aAAa;AACT,WAAO,KAAK,UAAU,IAAI,EAAE;AAAA,EAChC;AACJ;AACA,IAAM,YAAY;AAClB,IAAM,aAAa;AACnB,IAAM,YAAY;AAGlB,IAAM,YAAY;AAClB,IAAM,cAAc;AACpB,IAAM,WAAW;AACjB,IAAM,gBAAgB;AAatB,IAAM,aAAa;AAInB,IAAM,cAAc;AACpB,IAAI;AAEJ,IAAM,YAAY;AAClB,IAAM,gBAAgB;AAGtB,IAAM,YAAY;AAClB,IAAM,gBAAgB;AAEtB,IAAM,cAAc;AAEpB,IAAM,iBAAiB;AAMvB,IAAM,kBAAkB;AACxB,IAAM,YAAY,IAAI,OAAO,IAAI,eAAe,GAAG;AACnD,SAAS,gBAAgB,MAAM;AAC3B,MAAI,qBAAqB;AACzB,MAAI,KAAK,WAAW;AAChB,yBAAqB,GAAG,kBAAkB,UAAU,KAAK,SAAS;AAAA,EACtE,WACS,KAAK,aAAa,MAAM;AAC7B,yBAAqB,GAAG,kBAAkB;AAAA,EAC9C;AACA,QAAM,oBAAoB,KAAK,YAAY,MAAM;AACjD,SAAO,8BAA8B,kBAAkB,IAAI,iBAAiB;AAChF;AAVS;AAWT,SAAS,UAAU,MAAM;AACrB,SAAO,IAAI,OAAO,IAAI,gBAAgB,IAAI,CAAC,GAAG;AAClD;AAFS;AAIF,SAAS,cAAc,MAAM;AAChC,MAAI,QAAQ,GAAG,eAAe,IAAI,gBAAgB,IAAI,CAAC;AACvD,QAAM,OAAO,CAAC;AACd,OAAK,KAAK,KAAK,QAAQ,OAAO,GAAG;AACjC,MAAI,KAAK;AACL,SAAK,KAAK,sBAAsB;AACpC,UAAQ,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC;AAClC,SAAO,IAAI,OAAO,IAAI,KAAK,GAAG;AAClC;AARgB;AAShB,SAAS,UAAU,IAAI,SAAS;AAC5B,OAAK,YAAY,QAAQ,CAAC,YAAY,UAAU,KAAK,EAAE,GAAG;AACtD,WAAO;AAAA,EACX;AACA,OAAK,YAAY,QAAQ,CAAC,YAAY,UAAU,KAAK,EAAE,GAAG;AACtD,WAAO;AAAA,EACX;AACA,SAAO;AACX;AARS;AAST,SAAS,WAAW,KAAK,KAAK;AAC1B,MAAI,CAAC,SAAS,KAAK,GAAG;AAClB,WAAO;AACX,MAAI;AACA,UAAM,CAAC,MAAM,IAAI,IAAI,MAAM,GAAG;AAC9B,QAAI,CAAC;AACD,aAAO;AAEX,UAAM,SAAS,OACV,QAAQ,MAAM,GAAG,EACjB,QAAQ,MAAM,GAAG,EACjB,OAAO,OAAO,UAAW,IAAK,OAAO,SAAS,KAAM,GAAI,GAAG;AAChE,UAAM,UAAU,KAAK,MAAM,KAAK,MAAM,CAAC;AACvC,QAAI,OAAO,YAAY,YAAY,YAAY;AAC3C,aAAO;AACX,QAAI,SAAS,WAAW,SAAS,QAAQ;AACrC,aAAO;AACX,QAAI,CAAC,QAAQ;AACT,aAAO;AACX,QAAI,OAAO,QAAQ,QAAQ;AACvB,aAAO;AACX,WAAO;AAAA,EACX,QACM;AACF,WAAO;AAAA,EACX;AACJ;AA1BS;AA2BT,SAAS,YAAY,IAAI,SAAS;AAC9B,OAAK,YAAY,QAAQ,CAAC,YAAY,cAAc,KAAK,EAAE,GAAG;AAC1D,WAAO;AAAA,EACX;AACA,OAAK,YAAY,QAAQ,CAAC,YAAY,cAAc,KAAK,EAAE,GAAG;AAC1D,WAAO;AAAA,EACX;AACA,SAAO;AACX;AARS;AASF,IAAM,YAAN,MAAM,mBAAkB,QAAQ;AAAA,EA5dvC,OA4duC;AAAA;AAAA;AAAA,EACnC,OAAO,OAAO;AACV,QAAI,KAAK,KAAK,QAAQ;AAClB,YAAM,OAAO,OAAO,MAAM,IAAI;AAAA,IAClC;AACA,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,QAAQ;AACrC,YAAMC,OAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkBA,MAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAUA,KAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,SAAS,IAAI,YAAY;AAC/B,QAAI,MAAM;AACV,eAAW,SAAS,KAAK,KAAK,QAAQ;AAClC,UAAI,MAAM,SAAS,OAAO;AACtB,YAAI,MAAM,KAAK,SAAS,MAAM,OAAO;AACjC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,YACN,WAAW;AAAA,YACX,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,YAAI,MAAM,KAAK,SAAS,MAAM,OAAO;AACjC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,YACN,WAAW;AAAA,YACX,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,UAAU;AAC9B,cAAM,SAAS,MAAM,KAAK,SAAS,MAAM;AACzC,cAAM,WAAW,MAAM,KAAK,SAAS,MAAM;AAC3C,YAAI,UAAU,UAAU;AACpB,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,cAAI,QAAQ;AACR,8BAAkB,KAAK;AAAA,cACnB,MAAM,aAAa;AAAA,cACnB,SAAS,MAAM;AAAA,cACf,MAAM;AAAA,cACN,WAAW;AAAA,cACX,OAAO;AAAA,cACP,SAAS,MAAM;AAAA,YACnB,CAAC;AAAA,UACL,WACS,UAAU;AACf,8BAAkB,KAAK;AAAA,cACnB,MAAM,aAAa;AAAA,cACnB,SAAS,MAAM;AAAA,cACf,MAAM;AAAA,cACN,WAAW;AAAA,cACX,OAAO;AAAA,cACP,SAAS,MAAM;AAAA,YACnB,CAAC;AAAA,UACL;AACA,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,SAAS;AAC7B,YAAI,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG;AAC9B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,SAAS;AAC7B,YAAI,CAAC,YAAY;AACb,uBAAa,IAAI,OAAO,aAAa,GAAG;AAAA,QAC5C;AACA,YAAI,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG;AAC9B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,YAAI,CAAC,UAAU,KAAK,MAAM,IAAI,GAAG;AAC7B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,UAAU;AAC9B,YAAI,CAAC,YAAY,KAAK,MAAM,IAAI,GAAG;AAC/B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,YAAI,CAAC,UAAU,KAAK,MAAM,IAAI,GAAG;AAC7B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,SAAS;AAC7B,YAAI,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG;AAC9B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,YAAI,CAAC,UAAU,KAAK,MAAM,IAAI,GAAG;AAC7B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,YAAI;AACA,cAAI,IAAI,MAAM,IAAI;AAAA,QACtB,QACM;AACF,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,SAAS;AAC7B,cAAM,MAAM,YAAY;AACxB,cAAM,aAAa,MAAM,MAAM,KAAK,MAAM,IAAI;AAC9C,YAAI,CAAC,YAAY;AACb,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,cAAM,OAAO,MAAM,KAAK,KAAK;AAAA,MACjC,WACS,MAAM,SAAS,YAAY;AAChC,YAAI,CAAC,MAAM,KAAK,SAAS,MAAM,OAAO,MAAM,QAAQ,GAAG;AACnD,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY,EAAE,UAAU,MAAM,OAAO,UAAU,MAAM,SAAS;AAAA,YAC9D,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,eAAe;AACnC,cAAM,OAAO,MAAM,KAAK,YAAY;AAAA,MACxC,WACS,MAAM,SAAS,eAAe;AACnC,cAAM,OAAO,MAAM,KAAK,YAAY;AAAA,MACxC,WACS,MAAM,SAAS,cAAc;AAClC,YAAI,CAAC,MAAM,KAAK,WAAW,MAAM,KAAK,GAAG;AACrC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY,EAAE,YAAY,MAAM,MAAM;AAAA,YACtC,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,YAAY;AAChC,YAAI,CAAC,MAAM,KAAK,SAAS,MAAM,KAAK,GAAG;AACnC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY,EAAE,UAAU,MAAM,MAAM;AAAA,YACpC,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,YAAY;AAChC,cAAM,QAAQ,cAAc,KAAK;AACjC,YAAI,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG;AACzB,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY;AAAA,YACZ,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,cAAM,QAAQ;AACd,YAAI,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG;AACzB,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY;AAAA,YACZ,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,cAAM,QAAQ,UAAU,KAAK;AAC7B,YAAI,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG;AACzB,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY;AAAA,YACZ,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,YAAY;AAChC,YAAI,CAAC,cAAc,KAAK,MAAM,IAAI,GAAG;AACjC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,MAAM;AAC1B,YAAI,CAAC,UAAU,MAAM,MAAM,MAAM,OAAO,GAAG;AACvC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,YAAI,CAAC,WAAW,MAAM,MAAM,MAAM,GAAG,GAAG;AACpC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,QAAQ;AAC5B,YAAI,CAAC,YAAY,MAAM,MAAM,MAAM,OAAO,GAAG;AACzC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,UAAU;AAC9B,YAAI,CAAC,YAAY,KAAK,MAAM,IAAI,GAAG;AAC/B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,aAAa;AACjC,YAAI,CAAC,eAAe,KAAK,MAAM,IAAI,GAAG;AAClC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,YAAY;AAAA,YACZ,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,OACK;AACD,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,MAAM,KAAK;AAAA,EACrD;AAAA,EACA,OAAO,OAAO,YAAY,SAAS;AAC/B,WAAO,KAAK,WAAW,CAAC,SAAS,MAAM,KAAK,IAAI,GAAG;AAAA,MAC/C;AAAA,MACA,MAAM,aAAa;AAAA,MACnB,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,UAAU,OAAO;AACb,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,KAAK;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,MAAM,SAAS;AACX,WAAO,KAAK,UAAU,EAAE,MAAM,SAAS,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC3E;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,UAAU,EAAE,MAAM,OAAO,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EACzE;AAAA,EACA,MAAM,SAAS;AACX,WAAO,KAAK,UAAU,EAAE,MAAM,SAAS,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC3E;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU,EAAE,MAAM,QAAQ,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC1E;AAAA,EACA,OAAO,SAAS;AACZ,WAAO,KAAK,UAAU,EAAE,MAAM,UAAU,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC5E;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU,EAAE,MAAM,QAAQ,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC1E;AAAA,EACA,MAAM,SAAS;AACX,WAAO,KAAK,UAAU,EAAE,MAAM,SAAS,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC3E;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU,EAAE,MAAM,QAAQ,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC1E;AAAA,EACA,OAAO,SAAS;AACZ,WAAO,KAAK,UAAU,EAAE,MAAM,UAAU,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC5E;AAAA,EACA,UAAU,SAAS;AAEf,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,UAAU,EAAE,MAAM,OAAO,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EACzE;AAAA,EACA,GAAG,SAAS;AACR,WAAO,KAAK,UAAU,EAAE,MAAM,MAAM,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EACxE;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU,EAAE,MAAM,QAAQ,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC1E;AAAA,EACA,SAAS,SAAS;AACd,QAAI,OAAO,YAAY,UAAU;AAC7B,aAAO,KAAK,UAAU;AAAA,QAClB,MAAM;AAAA,QACN,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,MACb,CAAC;AAAA,IACL;AACA,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,WAAW,OAAO,SAAS,cAAc,cAAc,OAAO,SAAS;AAAA,MACvE,QAAQ,SAAS,UAAU;AAAA,MAC3B,OAAO,SAAS,SAAS;AAAA,MACzB,GAAG,UAAU,SAAS,SAAS,OAAO;AAAA,IAC1C,CAAC;AAAA,EACL;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU,EAAE,MAAM,QAAQ,QAAQ,CAAC;AAAA,EACnD;AAAA,EACA,KAAK,SAAS;AACV,QAAI,OAAO,YAAY,UAAU;AAC7B,aAAO,KAAK,UAAU;AAAA,QAClB,MAAM;AAAA,QACN,WAAW;AAAA,QACX,SAAS;AAAA,MACb,CAAC;AAAA,IACL;AACA,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,WAAW,OAAO,SAAS,cAAc,cAAc,OAAO,SAAS;AAAA,MACvE,GAAG,UAAU,SAAS,SAAS,OAAO;AAAA,IAC1C,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,UAAU,EAAE,MAAM,YAAY,GAAG,UAAU,SAAS,OAAO,EAAE,CAAC;AAAA,EAC9E;AAAA,EACA,MAAM,OAAO,SAAS;AAClB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,OAAO,SAAS;AACrB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,UAAU,SAAS;AAAA,MACnB,GAAG,UAAU,SAAS,SAAS,OAAO;AAAA,IAC1C,CAAC;AAAA,EACL;AAAA,EACA,WAAW,OAAO,SAAS;AACvB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,OAAO,SAAS;AACrB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,WAAW,SAAS;AACpB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,WAAW,SAAS;AACpB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA,EACA,OAAO,KAAK,SAAS;AACjB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,GAAG,UAAU,SAAS,OAAO;AAAA,IACjC,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS,SAAS;AACd,WAAO,KAAK,IAAI,GAAG,UAAU,SAAS,OAAO,CAAC;AAAA,EAClD;AAAA,EACA,OAAO;AACH,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,EAAE,MAAM,OAAO,CAAC;AAAA,IAClD,CAAC;AAAA,EACL;AAAA,EACA,cAAc;AACV,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,EAAE,MAAM,cAAc,CAAC;AAAA,IACzD,CAAC;AAAA,EACL;AAAA,EACA,cAAc;AACV,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,EAAE,MAAM,cAAc,CAAC;AAAA,IACzD,CAAC;AAAA,EACL;AAAA,EACA,IAAI,aAAa;AACb,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,UAAU;AAAA,EACjE;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,aAAa;AACb,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,UAAU;AAAA,EACjE;AAAA,EACA,IAAI,UAAU;AACV,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO;AAAA,EAC9D;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,KAAK;AAAA,EAC5D;AAAA,EACA,IAAI,UAAU;AACV,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO;AAAA,EAC9D;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,WAAW;AACX,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,QAAQ;AAAA,EAC/D;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,UAAU;AACV,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO;AAAA,EAC9D;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,OAAO;AACP,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,IAAI;AAAA,EAC3D;AAAA,EACA,IAAI,SAAS;AACT,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,MAAM;AAAA,EAC7D;AAAA,EACA,IAAI,WAAW;AACX,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,QAAQ;AAAA,EAC/D;AAAA,EACA,IAAI,cAAc;AAEd,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,WAAW;AAAA,EAClE;AAAA,EACA,IAAI,YAAY;AACZ,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,YAAY;AACZ,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;AACA,UAAU,SAAS,CAAC,WAAW;AAC3B,SAAO,IAAI,UAAU;AAAA,IACjB,QAAQ,CAAC;AAAA,IACT,UAAU,sBAAsB;AAAA,IAChC,QAAQ,QAAQ,UAAU;AAAA,IAC1B,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AAEA,SAAS,mBAAmB,KAAK,MAAM;AACnC,QAAM,eAAe,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI;AACzD,QAAM,gBAAgB,KAAK,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI;AAC3D,QAAM,WAAW,cAAc,eAAe,cAAc;AAC5D,QAAM,SAAS,OAAO,SAAS,IAAI,QAAQ,QAAQ,EAAE,QAAQ,KAAK,EAAE,CAAC;AACrE,QAAM,UAAU,OAAO,SAAS,KAAK,QAAQ,QAAQ,EAAE,QAAQ,KAAK,EAAE,CAAC;AACvE,SAAQ,SAAS,UAAW,MAAM;AACtC;AAPS;AAQF,IAAM,YAAN,MAAM,mBAAkB,QAAQ;AAAA,EAtiCvC,OAsiCuC;AAAA;AAAA;AAAA,EACnC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,MAAM,KAAK;AAChB,SAAK,MAAM,KAAK;AAChB,SAAK,OAAO,KAAK;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AACV,QAAI,KAAK,KAAK,QAAQ;AAClB,YAAM,OAAO,OAAO,MAAM,IAAI;AAAA,IAClC;AACA,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,QAAQ;AACrC,YAAMA,OAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkBA,MAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAUA,KAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,MAAM;AACV,UAAM,SAAS,IAAI,YAAY;AAC/B,eAAW,SAAS,KAAK,KAAK,QAAQ;AAClC,UAAI,MAAM,SAAS,OAAO;AACtB,YAAI,CAAC,KAAK,UAAU,MAAM,IAAI,GAAG;AAC7B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,UAAU;AAAA,YACV,UAAU;AAAA,YACV,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,cAAM,WAAW,MAAM,YAAY,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAClF,YAAI,UAAU;AACV,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,YACN,WAAW,MAAM;AAAA,YACjB,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,cAAM,SAAS,MAAM,YAAY,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAChF,YAAI,QAAQ;AACR,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,YACN,WAAW,MAAM;AAAA,YACjB,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,cAAc;AAClC,YAAI,mBAAmB,MAAM,MAAM,MAAM,KAAK,MAAM,GAAG;AACnD,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY,MAAM;AAAA,YAClB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,UAAU;AAC9B,YAAI,CAAC,OAAO,SAAS,MAAM,IAAI,GAAG;AAC9B,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,OACK;AACD,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,MAAM,KAAK;AAAA,EACrD;AAAA,EACA,IAAI,OAAO,SAAS;AAChB,WAAO,KAAK,SAAS,OAAO,OAAO,MAAM,UAAU,SAAS,OAAO,CAAC;AAAA,EACxE;AAAA,EACA,GAAG,OAAO,SAAS;AACf,WAAO,KAAK,SAAS,OAAO,OAAO,OAAO,UAAU,SAAS,OAAO,CAAC;AAAA,EACzE;AAAA,EACA,IAAI,OAAO,SAAS;AAChB,WAAO,KAAK,SAAS,OAAO,OAAO,MAAM,UAAU,SAAS,OAAO,CAAC;AAAA,EACxE;AAAA,EACA,GAAG,OAAO,SAAS;AACf,WAAO,KAAK,SAAS,OAAO,OAAO,OAAO,UAAU,SAAS,OAAO,CAAC;AAAA,EACzE;AAAA,EACA,SAAS,MAAM,OAAO,WAAW,SAAS;AACtC,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ;AAAA,QACJ,GAAG,KAAK,KAAK;AAAA,QACb;AAAA,UACI;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS,UAAU,SAAS,OAAO;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,UAAU,OAAO;AACb,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,KAAK;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,SAAS;AACT,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,YAAY,SAAS;AACjB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,YAAY,SAAS;AACjB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,WAAW,OAAO,SAAS;AACvB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,OAAO,SAAS;AACZ,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,KAAK,SAAS;AACV,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO,OAAO;AAAA,MACd,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC,EAAE,UAAU;AAAA,MACT,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO,OAAO;AAAA,MACd,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,WAAW;AACX,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,WAAW;AACX,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,CAAC,CAAC,KAAK,KAAK,OAAO,KAAK,CAAC,OAAO,GAAG,SAAS,SAAU,GAAG,SAAS,gBAAgB,KAAK,UAAU,GAAG,KAAK,CAAE;AAAA,EACtH;AAAA,EACA,IAAI,WAAW;AACX,QAAI,MAAM;AACV,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,YAAY,GAAG,SAAS,SAAS,GAAG,SAAS,cAAc;AACvE,eAAO;AAAA,MACX,WACS,GAAG,SAAS,OAAO;AACxB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB,WACS,GAAG,SAAS,OAAO;AACxB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO,OAAO,SAAS,GAAG,KAAK,OAAO,SAAS,GAAG;AAAA,EACtD;AACJ;AACA,UAAU,SAAS,CAAC,WAAW;AAC3B,SAAO,IAAI,UAAU;AAAA,IACjB,QAAQ,CAAC;AAAA,IACT,UAAU,sBAAsB;AAAA,IAChC,QAAQ,QAAQ,UAAU;AAAA,IAC1B,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,YAAN,MAAM,mBAAkB,QAAQ;AAAA,EArxCvC,OAqxCuC;AAAA;AAAA;AAAA,EACnC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,MAAM,KAAK;AAChB,SAAK,MAAM,KAAK;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AACV,QAAI,KAAK,KAAK,QAAQ;AAClB,UAAI;AACA,cAAM,OAAO,OAAO,MAAM,IAAI;AAAA,MAClC,QACM;AACF,eAAO,KAAK,iBAAiB,KAAK;AAAA,MACtC;AAAA,IACJ;AACA,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,QAAQ;AACrC,aAAO,KAAK,iBAAiB,KAAK;AAAA,IACtC;AACA,QAAI,MAAM;AACV,UAAM,SAAS,IAAI,YAAY;AAC/B,eAAW,SAAS,KAAK,KAAK,QAAQ;AAClC,UAAI,MAAM,SAAS,OAAO;AACtB,cAAM,WAAW,MAAM,YAAY,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAClF,YAAI,UAAU;AACV,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,MAAM;AAAA,YACN,SAAS,MAAM;AAAA,YACf,WAAW,MAAM;AAAA,YACjB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,cAAM,SAAS,MAAM,YAAY,MAAM,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM;AAChF,YAAI,QAAQ;AACR,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,MAAM;AAAA,YACN,SAAS,MAAM;AAAA,YACf,WAAW,MAAM;AAAA,YACjB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,cAAc;AAClC,YAAI,MAAM,OAAO,MAAM,UAAU,OAAO,CAAC,GAAG;AACxC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,YAAY,MAAM;AAAA,YAClB,SAAS,MAAM;AAAA,UACnB,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,OACK;AACD,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,MAAM,KAAK;AAAA,EACrD;AAAA,EACA,iBAAiB,OAAO;AACpB,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,sBAAkB,KAAK;AAAA,MACnB,MAAM,aAAa;AAAA,MACnB,UAAU,cAAc;AAAA,MACxB,UAAU,IAAI;AAAA,IAClB,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EACA,IAAI,OAAO,SAAS;AAChB,WAAO,KAAK,SAAS,OAAO,OAAO,MAAM,UAAU,SAAS,OAAO,CAAC;AAAA,EACxE;AAAA,EACA,GAAG,OAAO,SAAS;AACf,WAAO,KAAK,SAAS,OAAO,OAAO,OAAO,UAAU,SAAS,OAAO,CAAC;AAAA,EACzE;AAAA,EACA,IAAI,OAAO,SAAS;AAChB,WAAO,KAAK,SAAS,OAAO,OAAO,MAAM,UAAU,SAAS,OAAO,CAAC;AAAA,EACxE;AAAA,EACA,GAAG,OAAO,SAAS;AACf,WAAO,KAAK,SAAS,OAAO,OAAO,OAAO,UAAU,SAAS,OAAO,CAAC;AAAA,EACzE;AAAA,EACA,SAAS,MAAM,OAAO,WAAW,SAAS;AACtC,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ;AAAA,QACJ,GAAG,KAAK,KAAK;AAAA,QACb;AAAA,UACI;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS,UAAU,SAAS,OAAO;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EACA,UAAU,OAAO;AACb,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,KAAK;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,OAAO,CAAC;AAAA,MACf,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,OAAO,CAAC;AAAA,MACf,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,YAAY,SAAS;AACjB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,OAAO,CAAC;AAAA,MACf,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,YAAY,SAAS;AACjB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,OAAO,CAAC;AAAA,MACf,WAAW;AAAA,MACX,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,WAAW,OAAO,SAAS;AACvB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,MACA,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,WAAW;AACX,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,WAAW;AACX,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;AACA,UAAU,SAAS,CAAC,WAAW;AAC3B,SAAO,IAAI,UAAU;AAAA,IACjB,QAAQ,CAAC;AAAA,IACT,UAAU,sBAAsB;AAAA,IAChC,QAAQ,QAAQ,UAAU;AAAA,IAC1B,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EAr8CxC,OAq8CwC;AAAA;AAAA;AAAA,EACpC,OAAO,OAAO;AACV,QAAI,KAAK,KAAK,QAAQ;AAClB,YAAM,OAAO,QAAQ,MAAM,IAAI;AAAA,IACnC;AACA,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,SAAS;AACtC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,WAAW,SAAS,CAAC,WAAW;AAC5B,SAAO,IAAI,WAAW;AAAA,IAClB,UAAU,sBAAsB;AAAA,IAChC,QAAQ,QAAQ,UAAU;AAAA,IAC1B,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,UAAN,MAAM,iBAAgB,QAAQ;AAAA,EA99CrC,OA89CqC;AAAA;AAAA;AAAA,EACjC,OAAO,OAAO;AACV,QAAI,KAAK,KAAK,QAAQ;AAClB,YAAM,OAAO,IAAI,KAAK,MAAM,IAAI;AAAA,IACpC;AACA,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,MAAM;AACnC,YAAMA,OAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkBA,MAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAUA,KAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,OAAO,MAAM,MAAM,KAAK,QAAQ,CAAC,GAAG;AACpC,YAAMA,OAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkBA,MAAK;AAAA,QACnB,MAAM,aAAa;AAAA,MACvB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,SAAS,IAAI,YAAY;AAC/B,QAAI,MAAM;AACV,eAAW,SAAS,KAAK,KAAK,QAAQ;AAClC,UAAI,MAAM,SAAS,OAAO;AACtB,YAAI,MAAM,KAAK,QAAQ,IAAI,MAAM,OAAO;AACpC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,WAAW;AAAA,YACX,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,UACV,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,MAAM,SAAS,OAAO;AAC3B,YAAI,MAAM,KAAK,QAAQ,IAAI,MAAM,OAAO;AACpC,gBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,WAAW;AAAA,YACX,OAAO;AAAA,YACP,SAAS,MAAM;AAAA,YACf,MAAM;AAAA,UACV,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,OACK;AACD,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO;AAAA,MACH,QAAQ,OAAO;AAAA,MACf,OAAO,IAAI,KAAK,MAAM,KAAK,QAAQ,CAAC;AAAA,IACxC;AAAA,EACJ;AAAA,EACA,UAAU,OAAO;AACb,WAAO,IAAI,SAAQ;AAAA,MACf,GAAG,KAAK;AAAA,MACR,QAAQ,CAAC,GAAG,KAAK,KAAK,QAAQ,KAAK;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,SAAS,SAAS;AAClB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,QAAQ,QAAQ;AAAA,MACvB,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,SAAS,SAAS;AAClB,WAAO,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN,OAAO,QAAQ,QAAQ;AAAA,MACvB,SAAS,UAAU,SAAS,OAAO;AAAA,IACvC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,UAAU;AACV,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO,OAAO,OAAO,IAAI,KAAK,GAAG,IAAI;AAAA,EACzC;AAAA,EACA,IAAI,UAAU;AACV,QAAI,MAAM;AACV,eAAW,MAAM,KAAK,KAAK,QAAQ;AAC/B,UAAI,GAAG,SAAS,OAAO;AACnB,YAAI,QAAQ,QAAQ,GAAG,QAAQ;AAC3B,gBAAM,GAAG;AAAA,MACjB;AAAA,IACJ;AACA,WAAO,OAAO,OAAO,IAAI,KAAK,GAAG,IAAI;AAAA,EACzC;AACJ;AACA,QAAQ,SAAS,CAAC,WAAW;AACzB,SAAO,IAAI,QAAQ;AAAA,IACf,QAAQ,CAAC;AAAA,IACT,QAAQ,QAAQ,UAAU;AAAA,IAC1B,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,YAAN,cAAwB,QAAQ;AAAA,EA7kDvC,OA6kDuC;AAAA;AAAA;AAAA,EACnC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,QAAQ;AACrC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,UAAU,SAAS,CAAC,WAAW;AAC3B,SAAO,IAAI,UAAU;AAAA,IACjB,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,eAAN,cAA2B,QAAQ;AAAA,EAlmD1C,OAkmD0C;AAAA;AAAA;AAAA,EACtC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,WAAW;AACxC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,aAAa,SAAS,CAAC,WAAW;AAC9B,SAAO,IAAI,aAAa;AAAA,IACpB,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,UAAN,cAAsB,QAAQ;AAAA,EAvnDrC,OAunDqC;AAAA;AAAA;AAAA,EACjC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,MAAM;AACnC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,QAAQ,SAAS,CAAC,WAAW;AACzB,SAAO,IAAI,QAAQ;AAAA,IACf,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,SAAN,cAAqB,QAAQ;AAAA,EA5oDpC,OA4oDoC;AAAA;AAAA;AAAA,EAChC,cAAc;AACV,UAAM,GAAG,SAAS;AAElB,SAAK,OAAO;AAAA,EAChB;AAAA,EACA,OAAO,OAAO;AACV,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,OAAO,SAAS,CAAC,WAAW;AACxB,SAAO,IAAI,OAAO;AAAA,IACd,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EA5pDxC,OA4pDwC;AAAA;AAAA;AAAA,EACpC,cAAc;AACV,UAAM,GAAG,SAAS;AAElB,SAAK,WAAW;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AACV,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,WAAW,SAAS,CAAC,WAAW;AAC5B,SAAO,IAAI,WAAW;AAAA,IAClB,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EA5qDtC,OA4qDsC;AAAA;AAAA;AAAA,EAClC,OAAO,OAAO;AACV,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,sBAAkB,KAAK;AAAA,MACnB,MAAM,aAAa;AAAA,MACnB,UAAU,cAAc;AAAA,MACxB,UAAU,IAAI;AAAA,IAClB,CAAC;AACD,WAAO;AAAA,EACX;AACJ;AACA,SAAS,SAAS,CAAC,WAAW;AAC1B,SAAO,IAAI,SAAS;AAAA,IAChB,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,UAAN,cAAsB,QAAQ;AAAA,EA7rDrC,OA6rDqC;AAAA;AAAA;AAAA,EACjC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,WAAW;AACxC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AACJ;AACA,QAAQ,SAAS,CAAC,WAAW;AACzB,SAAO,IAAI,QAAQ;AAAA,IACf,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,WAAN,MAAM,kBAAiB,QAAQ;AAAA,EAltDtC,OAktDsC;AAAA;AAAA;AAAA,EAClC,OAAO,OAAO;AACV,UAAM,EAAE,KAAK,OAAO,IAAI,KAAK,oBAAoB,KAAK;AACtD,UAAM,MAAM,KAAK;AACjB,QAAI,IAAI,eAAe,cAAc,OAAO;AACxC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,IAAI,gBAAgB,MAAM;AAC1B,YAAM,SAAS,IAAI,KAAK,SAAS,IAAI,YAAY;AACjD,YAAM,WAAW,IAAI,KAAK,SAAS,IAAI,YAAY;AACnD,UAAI,UAAU,UAAU;AACpB,0BAAkB,KAAK;AAAA,UACnB,MAAM,SAAS,aAAa,UAAU,aAAa;AAAA,UACnD,SAAU,WAAW,IAAI,YAAY,QAAQ;AAAA,UAC7C,SAAU,SAAS,IAAI,YAAY,QAAQ;AAAA,UAC3C,MAAM;AAAA,UACN,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS,IAAI,YAAY;AAAA,QAC7B,CAAC;AACD,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,QAAI,IAAI,cAAc,MAAM;AACxB,UAAI,IAAI,KAAK,SAAS,IAAI,UAAU,OAAO;AACvC,0BAAkB,KAAK;AAAA,UACnB,MAAM,aAAa;AAAA,UACnB,SAAS,IAAI,UAAU;AAAA,UACvB,MAAM;AAAA,UACN,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS,IAAI,UAAU;AAAA,QAC3B,CAAC;AACD,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,QAAI,IAAI,cAAc,MAAM;AACxB,UAAI,IAAI,KAAK,SAAS,IAAI,UAAU,OAAO;AACvC,0BAAkB,KAAK;AAAA,UACnB,MAAM,aAAa;AAAA,UACnB,SAAS,IAAI,UAAU;AAAA,UACvB,MAAM;AAAA,UACN,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS,IAAI,UAAU;AAAA,QAC3B,CAAC;AACD,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,MAAM;AAC9C,eAAO,IAAI,KAAK,YAAY,IAAI,mBAAmB,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC;AAAA,MAC9E,CAAC,CAAC,EAAE,KAAK,CAACC,YAAW;AACjB,eAAO,YAAY,WAAW,QAAQA,OAAM;AAAA,MAChD,CAAC;AAAA,IACL;AACA,UAAM,SAAS,CAAC,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,MAAM;AAC1C,aAAO,IAAI,KAAK,WAAW,IAAI,mBAAmB,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC;AAAA,IAC7E,CAAC;AACD,WAAO,YAAY,WAAW,QAAQ,MAAM;AAAA,EAChD;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,WAAW,SAAS;AACpB,WAAO,IAAI,UAAS;AAAA,MAChB,GAAG,KAAK;AAAA,MACR,WAAW,EAAE,OAAO,WAAW,SAAS,UAAU,SAAS,OAAO,EAAE;AAAA,IACxE,CAAC;AAAA,EACL;AAAA,EACA,IAAI,WAAW,SAAS;AACpB,WAAO,IAAI,UAAS;AAAA,MAChB,GAAG,KAAK;AAAA,MACR,WAAW,EAAE,OAAO,WAAW,SAAS,UAAU,SAAS,OAAO,EAAE;AAAA,IACxE,CAAC;AAAA,EACL;AAAA,EACA,OAAO,KAAK,SAAS;AACjB,WAAO,IAAI,UAAS;AAAA,MAChB,GAAG,KAAK;AAAA,MACR,aAAa,EAAE,OAAO,KAAK,SAAS,UAAU,SAAS,OAAO,EAAE;AAAA,IACpE,CAAC;AAAA,EACL;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,IAAI,GAAG,OAAO;AAAA,EAC9B;AACJ;AACA,SAAS,SAAS,CAAC,QAAQ,WAAW;AAClC,SAAO,IAAI,SAAS;AAAA,IAChB,MAAM;AAAA,IACN,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACA,SAAS,eAAe,QAAQ;AAC5B,MAAI,kBAAkB,WAAW;AAC7B,UAAM,WAAW,CAAC;AAClB,eAAW,OAAO,OAAO,OAAO;AAC5B,YAAM,cAAc,OAAO,MAAM,GAAG;AACpC,eAAS,GAAG,IAAI,YAAY,OAAO,eAAe,WAAW,CAAC;AAAA,IAClE;AACA,WAAO,IAAI,UAAU;AAAA,MACjB,GAAG,OAAO;AAAA,MACV,OAAO,6BAAM,UAAN;AAAA,IACX,CAAC;AAAA,EACL,WACS,kBAAkB,UAAU;AACjC,WAAO,IAAI,SAAS;AAAA,MAChB,GAAG,OAAO;AAAA,MACV,MAAM,eAAe,OAAO,OAAO;AAAA,IACvC,CAAC;AAAA,EACL,WACS,kBAAkB,aAAa;AACpC,WAAO,YAAY,OAAO,eAAe,OAAO,OAAO,CAAC,CAAC;AAAA,EAC7D,WACS,kBAAkB,aAAa;AACpC,WAAO,YAAY,OAAO,eAAe,OAAO,OAAO,CAAC,CAAC;AAAA,EAC7D,WACS,kBAAkB,UAAU;AACjC,WAAO,SAAS,OAAO,OAAO,MAAM,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC,CAAC;AAAA,EAC3E,OACK;AACD,WAAO;AAAA,EACX;AACJ;AA9BS;AA+BF,IAAM,YAAN,MAAM,mBAAkB,QAAQ;AAAA,EAt1DvC,OAs1DuC;AAAA;AAAA;AAAA,EACnC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,UAAU;AAKf,SAAK,YAAY,KAAK;AAqCtB,SAAK,UAAU,KAAK;AAAA,EACxB;AAAA,EACA,aAAa;AACT,QAAI,KAAK,YAAY;AACjB,aAAO,KAAK;AAChB,UAAM,QAAQ,KAAK,KAAK,MAAM;AAC9B,UAAM,OAAO,KAAK,WAAW,KAAK;AAClC,SAAK,UAAU,EAAE,OAAO,KAAK;AAC7B,WAAO,KAAK;AAAA,EAChB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,QAAQ;AACrC,YAAMD,OAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkBA,MAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAUA,KAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,UAAM,EAAE,OAAO,MAAM,UAAU,IAAI,KAAK,WAAW;AACnD,UAAM,YAAY,CAAC;AACnB,QAAI,EAAE,KAAK,KAAK,oBAAoB,YAAY,KAAK,KAAK,gBAAgB,UAAU;AAChF,iBAAW,OAAO,IAAI,MAAM;AACxB,YAAI,CAAC,UAAU,SAAS,GAAG,GAAG;AAC1B,oBAAU,KAAK,GAAG;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AACA,UAAM,QAAQ,CAAC;AACf,eAAW,OAAO,WAAW;AACzB,YAAM,eAAe,MAAM,GAAG;AAC9B,YAAM,QAAQ,IAAI,KAAK,GAAG;AAC1B,YAAM,KAAK;AAAA,QACP,KAAK,EAAE,QAAQ,SAAS,OAAO,IAAI;AAAA,QACnC,OAAO,aAAa,OAAO,IAAI,mBAAmB,KAAK,OAAO,IAAI,MAAM,GAAG,CAAC;AAAA,QAC5E,WAAW,OAAO,IAAI;AAAA,MAC1B,CAAC;AAAA,IACL;AACA,QAAI,KAAK,KAAK,oBAAoB,UAAU;AACxC,YAAM,cAAc,KAAK,KAAK;AAC9B,UAAI,gBAAgB,eAAe;AAC/B,mBAAW,OAAO,WAAW;AACzB,gBAAM,KAAK;AAAA,YACP,KAAK,EAAE,QAAQ,SAAS,OAAO,IAAI;AAAA,YACnC,OAAO,EAAE,QAAQ,SAAS,OAAO,IAAI,KAAK,GAAG,EAAE;AAAA,UACnD,CAAC;AAAA,QACL;AAAA,MACJ,WACS,gBAAgB,UAAU;AAC/B,YAAI,UAAU,SAAS,GAAG;AACtB,4BAAkB,KAAK;AAAA,YACnB,MAAM,aAAa;AAAA,YACnB,MAAM;AAAA,UACV,CAAC;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,WACS,gBAAgB,SAAS;AAAA,MAClC,OACK;AACD,cAAM,IAAI,MAAM,sDAAsD;AAAA,MAC1E;AAAA,IACJ,OACK;AAED,YAAM,WAAW,KAAK,KAAK;AAC3B,iBAAW,OAAO,WAAW;AACzB,cAAM,QAAQ,IAAI,KAAK,GAAG;AAC1B,cAAM,KAAK;AAAA,UACP,KAAK,EAAE,QAAQ,SAAS,OAAO,IAAI;AAAA,UACnC,OAAO,SAAS;AAAA,YAAO,IAAI,mBAAmB,KAAK,OAAO,IAAI,MAAM,GAAG;AAAA;AAAA,UACvE;AAAA,UACA,WAAW,OAAO,IAAI;AAAA,QAC1B,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,QAAQ,EAClB,KAAK,YAAY;AAClB,cAAM,YAAY,CAAC;AACnB,mBAAW,QAAQ,OAAO;AACtB,gBAAM,MAAM,MAAM,KAAK;AACvB,gBAAM,QAAQ,MAAM,KAAK;AACzB,oBAAU,KAAK;AAAA,YACX;AAAA,YACA;AAAA,YACA,WAAW,KAAK;AAAA,UACpB,CAAC;AAAA,QACL;AACA,eAAO;AAAA,MACX,CAAC,EACI,KAAK,CAAC,cAAc;AACrB,eAAO,YAAY,gBAAgB,QAAQ,SAAS;AAAA,MACxD,CAAC;AAAA,IACL,OACK;AACD,aAAO,YAAY,gBAAgB,QAAQ,KAAK;AAAA,IACpD;AAAA,EACJ;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,KAAK,MAAM;AAAA,EAC3B;AAAA,EACA,OAAO,SAAS;AACZ,cAAU;AACV,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,aAAa;AAAA,MACb,GAAI,YAAY,SACV;AAAA,QACE,UAAU,wBAAC,OAAO,QAAQ;AACtB,gBAAM,eAAe,KAAK,KAAK,WAAW,OAAO,GAAG,EAAE,WAAW,IAAI;AACrE,cAAI,MAAM,SAAS;AACf,mBAAO;AAAA,cACH,SAAS,UAAU,SAAS,OAAO,EAAE,WAAW;AAAA,YACpD;AACJ,iBAAO;AAAA,YACH,SAAS;AAAA,UACb;AAAA,QACJ,GATU;AAAA,MAUd,IACE,CAAC;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EACA,QAAQ;AACJ,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AAAA,EACA,cAAc;AACV,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,aAAa;AAAA,IACjB,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBA,OAAO,cAAc;AACjB,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,OAAO,8BAAO;AAAA,QACV,GAAG,KAAK,KAAK,MAAM;AAAA,QACnB,GAAG;AAAA,MACP,IAHO;AAAA,IAIX,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,SAAS;AACX,UAAM,SAAS,IAAI,WAAU;AAAA,MACzB,aAAa,QAAQ,KAAK;AAAA,MAC1B,UAAU,QAAQ,KAAK;AAAA,MACvB,OAAO,8BAAO;AAAA,QACV,GAAG,KAAK,KAAK,MAAM;AAAA,QACnB,GAAG,QAAQ,KAAK,MAAM;AAAA,MAC1B,IAHO;AAAA,MAIP,UAAU,sBAAsB;AAAA,IACpC,CAAC;AACD,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoCA,OAAO,KAAK,QAAQ;AAChB,WAAO,KAAK,QAAQ,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsBA,SAAS,OAAO;AACZ,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,UAAU;AAAA,IACd,CAAC;AAAA,EACL;AAAA,EACA,KAAK,MAAM;AACP,UAAM,QAAQ,CAAC;AACf,eAAW,OAAO,KAAK,WAAW,IAAI,GAAG;AACrC,UAAI,KAAK,GAAG,KAAK,KAAK,MAAM,GAAG,GAAG;AAC9B,cAAM,GAAG,IAAI,KAAK,MAAM,GAAG;AAAA,MAC/B;AAAA,IACJ;AACA,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,OAAO,6BAAM,OAAN;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EACA,KAAK,MAAM;AACP,UAAM,QAAQ,CAAC;AACf,eAAW,OAAO,KAAK,WAAW,KAAK,KAAK,GAAG;AAC3C,UAAI,CAAC,KAAK,GAAG,GAAG;AACZ,cAAM,GAAG,IAAI,KAAK,MAAM,GAAG;AAAA,MAC/B;AAAA,IACJ;AACA,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,OAAO,6BAAM,OAAN;AAAA,IACX,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA,EAIA,cAAc;AACV,WAAO,eAAe,IAAI;AAAA,EAC9B;AAAA,EACA,QAAQ,MAAM;AACV,UAAM,WAAW,CAAC;AAClB,eAAW,OAAO,KAAK,WAAW,KAAK,KAAK,GAAG;AAC3C,YAAM,cAAc,KAAK,MAAM,GAAG;AAClC,UAAI,QAAQ,CAAC,KAAK,GAAG,GAAG;AACpB,iBAAS,GAAG,IAAI;AAAA,MACpB,OACK;AACD,iBAAS,GAAG,IAAI,YAAY,SAAS;AAAA,MACzC;AAAA,IACJ;AACA,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,OAAO,6BAAM,UAAN;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EACA,SAAS,MAAM;AACX,UAAM,WAAW,CAAC;AAClB,eAAW,OAAO,KAAK,WAAW,KAAK,KAAK,GAAG;AAC3C,UAAI,QAAQ,CAAC,KAAK,GAAG,GAAG;AACpB,iBAAS,GAAG,IAAI,KAAK,MAAM,GAAG;AAAA,MAClC,OACK;AACD,cAAM,cAAc,KAAK,MAAM,GAAG;AAClC,YAAI,WAAW;AACf,eAAO,oBAAoB,aAAa;AACpC,qBAAW,SAAS,KAAK;AAAA,QAC7B;AACA,iBAAS,GAAG,IAAI;AAAA,MACpB;AAAA,IACJ;AACA,WAAO,IAAI,WAAU;AAAA,MACjB,GAAG,KAAK;AAAA,MACR,OAAO,6BAAM,UAAN;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EACA,QAAQ;AACJ,WAAO,cAAc,KAAK,WAAW,KAAK,KAAK,CAAC;AAAA,EACpD;AACJ;AACA,UAAU,SAAS,CAAC,OAAO,WAAW;AAClC,SAAO,IAAI,UAAU;AAAA,IACjB,OAAO,6BAAM,OAAN;AAAA,IACP,aAAa;AAAA,IACb,UAAU,SAAS,OAAO;AAAA,IAC1B,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACA,UAAU,eAAe,CAAC,OAAO,WAAW;AACxC,SAAO,IAAI,UAAU;AAAA,IACjB,OAAO,6BAAM,OAAN;AAAA,IACP,aAAa;AAAA,IACb,UAAU,SAAS,OAAO;AAAA,IAC1B,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACA,UAAU,aAAa,CAAC,OAAO,WAAW;AACtC,SAAO,IAAI,UAAU;AAAA,IACjB;AAAA,IACA,aAAa;AAAA,IACb,UAAU,SAAS,OAAO;AAAA,IAC1B,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EA1tEtC,OA0tEsC;AAAA;AAAA;AAAA,EAClC,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,UAAM,UAAU,KAAK,KAAK;AAC1B,aAAS,cAAc,SAAS;AAE5B,iBAAW,UAAU,SAAS;AAC1B,YAAI,OAAO,OAAO,WAAW,SAAS;AAClC,iBAAO,OAAO;AAAA,QAClB;AAAA,MACJ;AACA,iBAAW,UAAU,SAAS;AAC1B,YAAI,OAAO,OAAO,WAAW,SAAS;AAElC,cAAI,OAAO,OAAO,KAAK,GAAG,OAAO,IAAI,OAAO,MAAM;AAClD,iBAAO,OAAO;AAAA,QAClB;AAAA,MACJ;AAEA,YAAM,cAAc,QAAQ,IAAI,CAAC,WAAW,IAAI,SAAS,OAAO,IAAI,OAAO,MAAM,CAAC;AAClF,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AArBS;AAsBT,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,IAAI,QAAQ,IAAI,OAAO,WAAW;AAC7C,cAAM,WAAW;AAAA,UACb,GAAG;AAAA,UACH,QAAQ;AAAA,YACJ,GAAG,IAAI;AAAA,YACP,QAAQ,CAAC;AAAA,UACb;AAAA,UACA,QAAQ;AAAA,QACZ;AACA,eAAO;AAAA,UACH,QAAQ,MAAM,OAAO,YAAY;AAAA,YAC7B,MAAM,IAAI;AAAA,YACV,MAAM,IAAI;AAAA,YACV,QAAQ;AAAA,UACZ,CAAC;AAAA,UACD,KAAK;AAAA,QACT;AAAA,MACJ,CAAC,CAAC,EAAE,KAAK,aAAa;AAAA,IAC1B,OACK;AACD,UAAI,QAAQ;AACZ,YAAM,SAAS,CAAC;AAChB,iBAAW,UAAU,SAAS;AAC1B,cAAM,WAAW;AAAA,UACb,GAAG;AAAA,UACH,QAAQ;AAAA,YACJ,GAAG,IAAI;AAAA,YACP,QAAQ,CAAC;AAAA,UACb;AAAA,UACA,QAAQ;AAAA,QACZ;AACA,cAAM,SAAS,OAAO,WAAW;AAAA,UAC7B,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,YAAI,OAAO,WAAW,SAAS;AAC3B,iBAAO;AAAA,QACX,WACS,OAAO,WAAW,WAAW,CAAC,OAAO;AAC1C,kBAAQ,EAAE,QAAQ,KAAK,SAAS;AAAA,QACpC;AACA,YAAI,SAAS,OAAO,OAAO,QAAQ;AAC/B,iBAAO,KAAK,SAAS,OAAO,MAAM;AAAA,QACtC;AAAA,MACJ;AACA,UAAI,OAAO;AACP,YAAI,OAAO,OAAO,KAAK,GAAG,MAAM,IAAI,OAAO,MAAM;AACjD,eAAO,MAAM;AAAA,MACjB;AACA,YAAM,cAAc,OAAO,IAAI,CAACE,YAAW,IAAI,SAASA,OAAM,CAAC;AAC/D,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,SAAS,SAAS,CAAC,OAAO,WAAW;AACjC,SAAO,IAAI,SAAS;AAAA,IAChB,SAAS;AAAA,IACT,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AAQA,IAAM,mBAAmB,wBAAC,SAAS;AAC/B,MAAI,gBAAgB,SAAS;AACzB,WAAO,iBAAiB,KAAK,MAAM;AAAA,EACvC,WACS,gBAAgB,YAAY;AACjC,WAAO,iBAAiB,KAAK,UAAU,CAAC;AAAA,EAC5C,WACS,gBAAgB,YAAY;AACjC,WAAO,CAAC,KAAK,KAAK;AAAA,EACtB,WACS,gBAAgB,SAAS;AAC9B,WAAO,KAAK;AAAA,EAChB,WACS,gBAAgB,eAAe;AAEpC,WAAO,KAAK,aAAa,KAAK,IAAI;AAAA,EACtC,WACS,gBAAgB,YAAY;AACjC,WAAO,iBAAiB,KAAK,KAAK,SAAS;AAAA,EAC/C,WACS,gBAAgB,cAAc;AACnC,WAAO,CAAC,MAAS;AAAA,EACrB,WACS,gBAAgB,SAAS;AAC9B,WAAO,CAAC,IAAI;AAAA,EAChB,WACS,gBAAgB,aAAa;AAClC,WAAO,CAAC,QAAW,GAAG,iBAAiB,KAAK,OAAO,CAAC,CAAC;AAAA,EACzD,WACS,gBAAgB,aAAa;AAClC,WAAO,CAAC,MAAM,GAAG,iBAAiB,KAAK,OAAO,CAAC,CAAC;AAAA,EACpD,WACS,gBAAgB,YAAY;AACjC,WAAO,iBAAiB,KAAK,OAAO,CAAC;AAAA,EACzC,WACS,gBAAgB,aAAa;AAClC,WAAO,iBAAiB,KAAK,OAAO,CAAC;AAAA,EACzC,WACS,gBAAgB,UAAU;AAC/B,WAAO,iBAAiB,KAAK,KAAK,SAAS;AAAA,EAC/C,OACK;AACD,WAAO,CAAC;AAAA,EACZ;AACJ,GA5CyB;AA6ClB,IAAM,wBAAN,MAAM,+BAA8B,QAAQ;AAAA,EA92EnD,OA82EmD;AAAA;AAAA;AAAA,EAC/C,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,QAAI,IAAI,eAAe,cAAc,QAAQ;AACzC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,gBAAgB,KAAK;AAC3B,UAAM,qBAAqB,IAAI,KAAK,aAAa;AACjD,UAAM,SAAS,KAAK,WAAW,IAAI,kBAAkB;AACrD,QAAI,CAAC,QAAQ;AACT,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,SAAS,MAAM,KAAK,KAAK,WAAW,KAAK,CAAC;AAAA,QAC1C,MAAM,CAAC,aAAa;AAAA,MACxB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,OAAO,YAAY;AAAA,QACtB,MAAM,IAAI;AAAA,QACV,MAAM,IAAI;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL,OACK;AACD,aAAO,OAAO,WAAW;AAAA,QACrB,MAAM,IAAI;AAAA,QACV,MAAM,IAAI;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,IAAI,gBAAgB;AAChB,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,aAAa;AACb,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,OAAO,eAAe,SAAS,QAAQ;AAE1C,UAAM,aAAa,oBAAI,IAAI;AAE3B,eAAW,QAAQ,SAAS;AACxB,YAAM,sBAAsB,iBAAiB,KAAK,MAAM,aAAa,CAAC;AACtE,UAAI,CAAC,oBAAoB,QAAQ;AAC7B,cAAM,IAAI,MAAM,mCAAmC,aAAa,mDAAmD;AAAA,MACvH;AACA,iBAAW,SAAS,qBAAqB;AACrC,YAAI,WAAW,IAAI,KAAK,GAAG;AACvB,gBAAM,IAAI,MAAM,0BAA0B,OAAO,aAAa,CAAC,wBAAwB,OAAO,KAAK,CAAC,EAAE;AAAA,QAC1G;AACA,mBAAW,IAAI,OAAO,IAAI;AAAA,MAC9B;AAAA,IACJ;AACA,WAAO,IAAI,uBAAsB;AAAA,MAC7B,UAAU,sBAAsB;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG,oBAAoB,MAAM;AAAA,IACjC,CAAC;AAAA,EACL;AACJ;AACA,SAAS,YAAY,GAAG,GAAG;AACvB,QAAM,QAAQ,cAAc,CAAC;AAC7B,QAAM,QAAQ,cAAc,CAAC;AAC7B,MAAI,MAAM,GAAG;AACT,WAAO,EAAE,OAAO,MAAM,MAAM,EAAE;AAAA,EAClC,WACS,UAAU,cAAc,UAAU,UAAU,cAAc,QAAQ;AACvE,UAAM,QAAQ,KAAK,WAAW,CAAC;AAC/B,UAAM,aAAa,KAAK,WAAW,CAAC,EAAE,OAAO,CAAC,QAAQ,MAAM,QAAQ,GAAG,MAAM,EAAE;AAC/E,UAAM,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE;AAC5B,eAAW,OAAO,YAAY;AAC1B,YAAM,cAAc,YAAY,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC;AAC9C,UAAI,CAAC,YAAY,OAAO;AACpB,eAAO,EAAE,OAAO,MAAM;AAAA,MAC1B;AACA,aAAO,GAAG,IAAI,YAAY;AAAA,IAC9B;AACA,WAAO,EAAE,OAAO,MAAM,MAAM,OAAO;AAAA,EACvC,WACS,UAAU,cAAc,SAAS,UAAU,cAAc,OAAO;AACrE,QAAI,EAAE,WAAW,EAAE,QAAQ;AACvB,aAAO,EAAE,OAAO,MAAM;AAAA,IAC1B;AACA,UAAM,WAAW,CAAC;AAClB,aAAS,QAAQ,GAAG,QAAQ,EAAE,QAAQ,SAAS;AAC3C,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,cAAc,YAAY,OAAO,KAAK;AAC5C,UAAI,CAAC,YAAY,OAAO;AACpB,eAAO,EAAE,OAAO,MAAM;AAAA,MAC1B;AACA,eAAS,KAAK,YAAY,IAAI;AAAA,IAClC;AACA,WAAO,EAAE,OAAO,MAAM,MAAM,SAAS;AAAA,EACzC,WACS,UAAU,cAAc,QAAQ,UAAU,cAAc,QAAQ,CAAC,MAAM,CAAC,GAAG;AAChF,WAAO,EAAE,OAAO,MAAM,MAAM,EAAE;AAAA,EAClC,OACK;AACD,WAAO,EAAE,OAAO,MAAM;AAAA,EAC1B;AACJ;AAzCS;AA0CF,IAAM,kBAAN,cAA8B,QAAQ;AAAA,EAv+E7C,OAu+E6C;AAAA;AAAA;AAAA,EACzC,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,UAAM,eAAe,wBAAC,YAAY,gBAAgB;AAC9C,UAAI,UAAU,UAAU,KAAK,UAAU,WAAW,GAAG;AACjD,eAAO;AAAA,MACX;AACA,YAAM,SAAS,YAAY,WAAW,OAAO,YAAY,KAAK;AAC9D,UAAI,CAAC,OAAO,OAAO;AACf,0BAAkB,KAAK;AAAA,UACnB,MAAM,aAAa;AAAA,QACvB,CAAC;AACD,eAAO;AAAA,MACX;AACA,UAAI,QAAQ,UAAU,KAAK,QAAQ,WAAW,GAAG;AAC7C,eAAO,MAAM;AAAA,MACjB;AACA,aAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,OAAO,KAAK;AAAA,IACtD,GAfqB;AAgBrB,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,IAAI;AAAA,QACf,KAAK,KAAK,KAAK,YAAY;AAAA,UACvB,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AAAA,QACD,KAAK,KAAK,MAAM,YAAY;AAAA,UACxB,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AAAA,MACL,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,KAAK,MAAM,aAAa,MAAM,KAAK,CAAC;AAAA,IACxD,OACK;AACD,aAAO,aAAa,KAAK,KAAK,KAAK,WAAW;AAAA,QAC1C,MAAM,IAAI;AAAA,QACV,MAAM,IAAI;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC,GAAG,KAAK,KAAK,MAAM,WAAW;AAAA,QAC3B,MAAM,IAAI;AAAA,QACV,MAAM,IAAI;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC,CAAC;AAAA,IACN;AAAA,EACJ;AACJ;AACA,gBAAgB,SAAS,CAAC,MAAM,OAAO,WAAW;AAC9C,SAAO,IAAI,gBAAgB;AAAA,IACvB;AAAA,IACA;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AAEO,IAAM,WAAN,MAAM,kBAAiB,QAAQ;AAAA,EA9hFtC,OA8hFsC;AAAA;AAAA;AAAA,EAClC,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,QAAI,IAAI,eAAe,cAAc,OAAO;AACxC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,IAAI,KAAK,SAAS,KAAK,KAAK,MAAM,QAAQ;AAC1C,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,SAAS,KAAK,KAAK,MAAM;AAAA,QACzB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,MAAM;AAAA,MACV,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,OAAO,KAAK,KAAK;AACvB,QAAI,CAAC,QAAQ,IAAI,KAAK,SAAS,KAAK,KAAK,MAAM,QAAQ;AACnD,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,SAAS,KAAK,KAAK,MAAM;AAAA,QACzB,WAAW;AAAA,QACX,OAAO;AAAA,QACP,MAAM;AAAA,MACV,CAAC;AACD,aAAO,MAAM;AAAA,IACjB;AACA,UAAM,QAAQ,CAAC,GAAG,IAAI,IAAI,EACrB,IAAI,CAAC,MAAM,cAAc;AAC1B,YAAM,SAAS,KAAK,KAAK,MAAM,SAAS,KAAK,KAAK,KAAK;AACvD,UAAI,CAAC;AACD,eAAO;AACX,aAAO,OAAO,OAAO,IAAI,mBAAmB,KAAK,MAAM,IAAI,MAAM,SAAS,CAAC;AAAA,IAC/E,CAAC,EACI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACtB,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,IAAI,KAAK,EAAE,KAAK,CAAC,YAAY;AACxC,eAAO,YAAY,WAAW,QAAQ,OAAO;AAAA,MACjD,CAAC;AAAA,IACL,OACK;AACD,aAAO,YAAY,WAAW,QAAQ,KAAK;AAAA,IAC/C;AAAA,EACJ;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,KAAK,MAAM;AACP,WAAO,IAAI,UAAS;AAAA,MAChB,GAAG,KAAK;AAAA,MACR;AAAA,IACJ,CAAC;AAAA,EACL;AACJ;AACA,SAAS,SAAS,CAAC,SAAS,WAAW;AACnC,MAAI,CAAC,MAAM,QAAQ,OAAO,GAAG;AACzB,UAAM,IAAI,MAAM,uDAAuD;AAAA,EAC3E;AACA,SAAO,IAAI,SAAS;AAAA,IAChB,OAAO;AAAA,IACP,UAAU,sBAAsB;AAAA,IAChC,MAAM;AAAA,IACN,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,YAAN,MAAM,mBAAkB,QAAQ;AAAA,EApmFvC,OAomFuC;AAAA;AAAA;AAAA,EACnC,IAAI,YAAY;AACZ,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,QAAI,IAAI,eAAe,cAAc,QAAQ;AACzC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,QAAQ,CAAC;AACf,UAAM,UAAU,KAAK,KAAK;AAC1B,UAAM,YAAY,KAAK,KAAK;AAC5B,eAAW,OAAO,IAAI,MAAM;AACxB,YAAM,KAAK;AAAA,QACP,KAAK,QAAQ,OAAO,IAAI,mBAAmB,KAAK,KAAK,IAAI,MAAM,GAAG,CAAC;AAAA,QACnE,OAAO,UAAU,OAAO,IAAI,mBAAmB,KAAK,IAAI,KAAK,GAAG,GAAG,IAAI,MAAM,GAAG,CAAC;AAAA,QACjF,WAAW,OAAO,IAAI;AAAA,MAC1B,CAAC;AAAA,IACL;AACA,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,YAAY,iBAAiB,QAAQ,KAAK;AAAA,IACrD,OACK;AACD,aAAO,YAAY,gBAAgB,QAAQ,KAAK;AAAA,IACpD;AAAA,EACJ;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,OAAO,OAAO,OAAO,QAAQ,OAAO;AAChC,QAAI,kBAAkB,SAAS;AAC3B,aAAO,IAAI,WAAU;AAAA,QACjB,SAAS;AAAA,QACT,WAAW;AAAA,QACX,UAAU,sBAAsB;AAAA,QAChC,GAAG,oBAAoB,KAAK;AAAA,MAChC,CAAC;AAAA,IACL;AACA,WAAO,IAAI,WAAU;AAAA,MACjB,SAAS,UAAU,OAAO;AAAA,MAC1B,WAAW;AAAA,MACX,UAAU,sBAAsB;AAAA,MAChC,GAAG,oBAAoB,MAAM;AAAA,IACjC,CAAC;AAAA,EACL;AACJ;AACO,IAAM,SAAN,cAAqB,QAAQ;AAAA,EA1pFpC,OA0pFoC;AAAA;AAAA;AAAA,EAChC,IAAI,YAAY;AACZ,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,cAAc;AACd,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,QAAI,IAAI,eAAe,cAAc,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,UAAU,KAAK,KAAK;AAC1B,UAAM,YAAY,KAAK,KAAK;AAC5B,UAAM,QAAQ,CAAC,GAAG,IAAI,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,GAAG,UAAU;AAC/D,aAAO;AAAA,QACH,KAAK,QAAQ,OAAO,IAAI,mBAAmB,KAAK,KAAK,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,CAAC;AAAA,QAC9E,OAAO,UAAU,OAAO,IAAI,mBAAmB,KAAK,OAAO,IAAI,MAAM,CAAC,OAAO,OAAO,CAAC,CAAC;AAAA,MAC1F;AAAA,IACJ,CAAC;AACD,QAAI,IAAI,OAAO,OAAO;AAClB,YAAM,WAAW,oBAAI,IAAI;AACzB,aAAO,QAAQ,QAAQ,EAAE,KAAK,YAAY;AACtC,mBAAW,QAAQ,OAAO;AACtB,gBAAM,MAAM,MAAM,KAAK;AACvB,gBAAM,QAAQ,MAAM,KAAK;AACzB,cAAI,IAAI,WAAW,aAAa,MAAM,WAAW,WAAW;AACxD,mBAAO;AAAA,UACX;AACA,cAAI,IAAI,WAAW,WAAW,MAAM,WAAW,SAAS;AACpD,mBAAO,MAAM;AAAA,UACjB;AACA,mBAAS,IAAI,IAAI,OAAO,MAAM,KAAK;AAAA,QACvC;AACA,eAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,SAAS;AAAA,MACnD,CAAC;AAAA,IACL,OACK;AACD,YAAM,WAAW,oBAAI,IAAI;AACzB,iBAAW,QAAQ,OAAO;AACtB,cAAM,MAAM,KAAK;AACjB,cAAM,QAAQ,KAAK;AACnB,YAAI,IAAI,WAAW,aAAa,MAAM,WAAW,WAAW;AACxD,iBAAO;AAAA,QACX;AACA,YAAI,IAAI,WAAW,WAAW,MAAM,WAAW,SAAS;AACpD,iBAAO,MAAM;AAAA,QACjB;AACA,iBAAS,IAAI,IAAI,OAAO,MAAM,KAAK;AAAA,MACvC;AACA,aAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,SAAS;AAAA,IACnD;AAAA,EACJ;AACJ;AACA,OAAO,SAAS,CAAC,SAAS,WAAW,WAAW;AAC5C,SAAO,IAAI,OAAO;AAAA,IACd;AAAA,IACA;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,SAAN,MAAM,gBAAe,QAAQ;AAAA,EA7tFpC,OA6tFoC;AAAA;AAAA;AAAA,EAChC,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,QAAI,IAAI,eAAe,cAAc,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,MAAM,KAAK;AACjB,QAAI,IAAI,YAAY,MAAM;AACtB,UAAI,IAAI,KAAK,OAAO,IAAI,QAAQ,OAAO;AACnC,0BAAkB,KAAK;AAAA,UACnB,MAAM,aAAa;AAAA,UACnB,SAAS,IAAI,QAAQ;AAAA,UACrB,MAAM;AAAA,UACN,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS,IAAI,QAAQ;AAAA,QACzB,CAAC;AACD,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,QAAI,IAAI,YAAY,MAAM;AACtB,UAAI,IAAI,KAAK,OAAO,IAAI,QAAQ,OAAO;AACnC,0BAAkB,KAAK;AAAA,UACnB,MAAM,aAAa;AAAA,UACnB,SAAS,IAAI,QAAQ;AAAA,UACrB,MAAM;AAAA,UACN,WAAW;AAAA,UACX,OAAO;AAAA,UACP,SAAS,IAAI,QAAQ;AAAA,QACzB,CAAC;AACD,eAAO,MAAM;AAAA,MACjB;AAAA,IACJ;AACA,UAAM,YAAY,KAAK,KAAK;AAC5B,aAAS,YAAYC,WAAU;AAC3B,YAAM,YAAY,oBAAI,IAAI;AAC1B,iBAAW,WAAWA,WAAU;AAC5B,YAAI,QAAQ,WAAW;AACnB,iBAAO;AACX,YAAI,QAAQ,WAAW;AACnB,iBAAO,MAAM;AACjB,kBAAU,IAAI,QAAQ,KAAK;AAAA,MAC/B;AACA,aAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,UAAU;AAAA,IACpD;AAVS;AAWT,UAAM,WAAW,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,MAAM,UAAU,OAAO,IAAI,mBAAmB,KAAK,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;AACzH,QAAI,IAAI,OAAO,OAAO;AAClB,aAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,CAACA,cAAa,YAAYA,SAAQ,CAAC;AAAA,IACzE,OACK;AACD,aAAO,YAAY,QAAQ;AAAA,IAC/B;AAAA,EACJ;AAAA,EACA,IAAI,SAAS,SAAS;AAClB,WAAO,IAAI,QAAO;AAAA,MACd,GAAG,KAAK;AAAA,MACR,SAAS,EAAE,OAAO,SAAS,SAAS,UAAU,SAAS,OAAO,EAAE;AAAA,IACpE,CAAC;AAAA,EACL;AAAA,EACA,IAAI,SAAS,SAAS;AAClB,WAAO,IAAI,QAAO;AAAA,MACd,GAAG,KAAK;AAAA,MACR,SAAS,EAAE,OAAO,SAAS,SAAS,UAAU,SAAS,OAAO,EAAE;AAAA,IACpE,CAAC;AAAA,EACL;AAAA,EACA,KAAK,MAAM,SAAS;AAChB,WAAO,KAAK,IAAI,MAAM,OAAO,EAAE,IAAI,MAAM,OAAO;AAAA,EACpD;AAAA,EACA,SAAS,SAAS;AACd,WAAO,KAAK,IAAI,GAAG,OAAO;AAAA,EAC9B;AACJ;AACA,OAAO,SAAS,CAAC,WAAW,WAAW;AACnC,SAAO,IAAI,OAAO;AAAA,IACd;AAAA,IACA,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,cAAN,MAAM,qBAAoB,QAAQ;AAAA,EAnzFzC,OAmzFyC;AAAA;AAAA;AAAA,EACrC,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,SAAK,WAAW,KAAK;AAAA,EACzB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,QAAI,IAAI,eAAe,cAAc,UAAU;AAC3C,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,aAAS,cAAc,MAAM,OAAO;AAChC,aAAO,UAAU;AAAA,QACb,MAAM;AAAA,QACN,MAAM,IAAI;AAAA,QACV,WAAW,CAAC,IAAI,OAAO,oBAAoB,IAAI,gBAAgB,YAAY,GAAG,UAAe,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,QAChH,WAAW;AAAA,UACP,MAAM,aAAa;AAAA,UACnB,gBAAgB;AAAA,QACpB;AAAA,MACJ,CAAC;AAAA,IACL;AAVS;AAWT,aAAS,iBAAiB,SAAS,OAAO;AACtC,aAAO,UAAU;AAAA,QACb,MAAM;AAAA,QACN,MAAM,IAAI;AAAA,QACV,WAAW,CAAC,IAAI,OAAO,oBAAoB,IAAI,gBAAgB,YAAY,GAAG,UAAe,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,QAChH,WAAW;AAAA,UACP,MAAM,aAAa;AAAA,UACnB,iBAAiB;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL;AAVS;AAWT,UAAM,SAAS,EAAE,UAAU,IAAI,OAAO,mBAAmB;AACzD,UAAM,KAAK,IAAI;AACf,QAAI,KAAK,KAAK,mBAAmB,YAAY;AAIzC,YAAM,KAAK;AACX,aAAO,GAAG,kBAAmB,MAAM;AAC/B,cAAM,QAAQ,IAAI,SAAS,CAAC,CAAC;AAC7B,cAAM,aAAa,MAAM,GAAG,KAAK,KAAK,WAAW,MAAM,MAAM,EAAE,MAAM,CAAC,MAAM;AACxE,gBAAM,SAAS,cAAc,MAAM,CAAC,CAAC;AACrC,gBAAM;AAAA,QACV,CAAC;AACD,cAAM,SAAS,MAAM,QAAQ,MAAM,IAAI,MAAM,UAAU;AACvD,cAAM,gBAAgB,MAAM,GAAG,KAAK,QAAQ,KAAK,KAC5C,WAAW,QAAQ,MAAM,EACzB,MAAM,CAAC,MAAM;AACd,gBAAM,SAAS,iBAAiB,QAAQ,CAAC,CAAC;AAC1C,gBAAM;AAAA,QACV,CAAC;AACD,eAAO;AAAA,MACX,CAAC;AAAA,IACL,OACK;AAID,YAAM,KAAK;AACX,aAAO,GAAG,YAAa,MAAM;AACzB,cAAM,aAAa,GAAG,KAAK,KAAK,UAAU,MAAM,MAAM;AACtD,YAAI,CAAC,WAAW,SAAS;AACrB,gBAAM,IAAI,SAAS,CAAC,cAAc,MAAM,WAAW,KAAK,CAAC,CAAC;AAAA,QAC9D;AACA,cAAM,SAAS,QAAQ,MAAM,IAAI,MAAM,WAAW,IAAI;AACtD,cAAM,gBAAgB,GAAG,KAAK,QAAQ,UAAU,QAAQ,MAAM;AAC9D,YAAI,CAAC,cAAc,SAAS;AACxB,gBAAM,IAAI,SAAS,CAAC,iBAAiB,QAAQ,cAAc,KAAK,CAAC,CAAC;AAAA,QACtE;AACA,eAAO,cAAc;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EACA,aAAa;AACT,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,aAAa;AACT,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,QAAQ,OAAO;AACX,WAAO,IAAI,aAAY;AAAA,MACnB,GAAG,KAAK;AAAA,MACR,MAAM,SAAS,OAAO,KAAK,EAAE,KAAK,WAAW,OAAO,CAAC;AAAA,IACzD,CAAC;AAAA,EACL;AAAA,EACA,QAAQ,YAAY;AAChB,WAAO,IAAI,aAAY;AAAA,MACnB,GAAG,KAAK;AAAA,MACR,SAAS;AAAA,IACb,CAAC;AAAA,EACL;AAAA,EACA,UAAU,MAAM;AACZ,UAAM,gBAAgB,KAAK,MAAM,IAAI;AACrC,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB,MAAM;AAClB,UAAM,gBAAgB,KAAK,MAAM,IAAI;AACrC,WAAO;AAAA,EACX;AAAA,EACA,OAAO,OAAO,MAAM,SAAS,QAAQ;AACjC,WAAO,IAAI,aAAY;AAAA,MACnB,MAAO,OAAO,OAAO,SAAS,OAAO,CAAC,CAAC,EAAE,KAAK,WAAW,OAAO,CAAC;AAAA,MACjE,SAAS,WAAW,WAAW,OAAO;AAAA,MACtC,UAAU,sBAAsB;AAAA,MAChC,GAAG,oBAAoB,MAAM;AAAA,IACjC,CAAC;AAAA,EACL;AACJ;AACO,IAAM,UAAN,cAAsB,QAAQ;AAAA,EAr6FrC,OAq6FqC;AAAA;AAAA;AAAA,EACjC,IAAI,SAAS;AACT,WAAO,KAAK,KAAK,OAAO;AAAA,EAC5B;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,UAAM,aAAa,KAAK,KAAK,OAAO;AACpC,WAAO,WAAW,OAAO,EAAE,MAAM,IAAI,MAAM,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC;AAAA,EAC5E;AACJ;AACA,QAAQ,SAAS,CAAC,QAAQ,WAAW;AACjC,SAAO,IAAI,QAAQ;AAAA,IACf;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EAt7FxC,OAs7FwC;AAAA;AAAA;AAAA,EACpC,OAAO,OAAO;AACV,QAAI,MAAM,SAAS,KAAK,KAAK,OAAO;AAChC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,UAAU,IAAI;AAAA,QACd,MAAM,aAAa;AAAA,QACnB,UAAU,KAAK,KAAK;AAAA,MACxB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,EAAE,QAAQ,SAAS,OAAO,MAAM,KAAK;AAAA,EAChD;AAAA,EACA,IAAI,QAAQ;AACR,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,WAAW,SAAS,CAAC,OAAO,WAAW;AACnC,SAAO,IAAI,WAAW;AAAA,IAClB;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACA,SAAS,cAAc,QAAQ,QAAQ;AACnC,SAAO,IAAI,QAAQ;AAAA,IACf;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AANS;AAOF,IAAM,UAAN,MAAM,iBAAgB,QAAQ;AAAA,EAr9FrC,OAq9FqC;AAAA;AAAA;AAAA,EACjC,OAAO,OAAO;AACV,QAAI,OAAO,MAAM,SAAS,UAAU;AAChC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,YAAM,iBAAiB,KAAK,KAAK;AACjC,wBAAkB,KAAK;AAAA,QACnB,UAAU,KAAK,WAAW,cAAc;AAAA,QACxC,UAAU,IAAI;AAAA,QACd,MAAM,aAAa;AAAA,MACvB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,IAAI,IAAI,KAAK,KAAK,MAAM;AAAA,IAC1C;AACA,QAAI,CAAC,KAAK,OAAO,IAAI,MAAM,IAAI,GAAG;AAC9B,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,YAAM,iBAAiB,KAAK,KAAK;AACjC,wBAAkB,KAAK;AAAA,QACnB,UAAU,IAAI;AAAA,QACd,MAAM,aAAa;AAAA,QACnB,SAAS;AAAA,MACb,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AAAA,EACA,IAAI,UAAU;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,IAAI,OAAO;AACP,UAAM,aAAa,CAAC;AACpB,eAAW,OAAO,KAAK,KAAK,QAAQ;AAChC,iBAAW,GAAG,IAAI;AAAA,IACtB;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,SAAS;AACT,UAAM,aAAa,CAAC;AACpB,eAAW,OAAO,KAAK,KAAK,QAAQ;AAChC,iBAAW,GAAG,IAAI;AAAA,IACtB;AACA,WAAO;AAAA,EACX;AAAA,EACA,IAAI,OAAO;AACP,UAAM,aAAa,CAAC;AACpB,eAAW,OAAO,KAAK,KAAK,QAAQ;AAChC,iBAAW,GAAG,IAAI;AAAA,IACtB;AACA,WAAO;AAAA,EACX;AAAA,EACA,QAAQ,QAAQ,SAAS,KAAK,MAAM;AAChC,WAAO,SAAQ,OAAO,QAAQ;AAAA,MAC1B,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,IACP,CAAC;AAAA,EACL;AAAA,EACA,QAAQ,QAAQ,SAAS,KAAK,MAAM;AAChC,WAAO,SAAQ,OAAO,KAAK,QAAQ,OAAO,CAAC,QAAQ,CAAC,OAAO,SAAS,GAAG,CAAC,GAAG;AAAA,MACvE,GAAG,KAAK;AAAA,MACR,GAAG;AAAA,IACP,CAAC;AAAA,EACL;AACJ;AACA,QAAQ,SAAS;AACV,IAAM,gBAAN,cAA4B,QAAQ;AAAA,EAthG3C,OAshG2C;AAAA;AAAA;AAAA,EACvC,OAAO,OAAO;AACV,UAAM,mBAAmB,KAAK,mBAAmB,KAAK,KAAK,MAAM;AACjE,UAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,QAAI,IAAI,eAAe,cAAc,UAAU,IAAI,eAAe,cAAc,QAAQ;AACpF,YAAM,iBAAiB,KAAK,aAAa,gBAAgB;AACzD,wBAAkB,KAAK;AAAA,QACnB,UAAU,KAAK,WAAW,cAAc;AAAA,QACxC,UAAU,IAAI;AAAA,QACd,MAAM,aAAa;AAAA,MACvB,CAAC;AACD,aAAO;AAAA,IACX;AACA,QAAI,CAAC,KAAK,QAAQ;AACd,WAAK,SAAS,IAAI,IAAI,KAAK,mBAAmB,KAAK,KAAK,MAAM,CAAC;AAAA,IACnE;AACA,QAAI,CAAC,KAAK,OAAO,IAAI,MAAM,IAAI,GAAG;AAC9B,YAAM,iBAAiB,KAAK,aAAa,gBAAgB;AACzD,wBAAkB,KAAK;AAAA,QACnB,UAAU,IAAI;AAAA,QACd,MAAM,aAAa;AAAA,QACnB,SAAS;AAAA,MACb,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,MAAM,IAAI;AAAA,EACxB;AAAA,EACA,IAAI,OAAO;AACP,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,cAAc,SAAS,CAAC,QAAQ,WAAW;AACvC,SAAO,IAAI,cAAc;AAAA,IACrB;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EA5jGxC,OA4jGwC;AAAA;AAAA;AAAA,EACpC,SAAS;AACL,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,QAAI,IAAI,eAAe,cAAc,WAAW,IAAI,OAAO,UAAU,OAAO;AACxE,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,UAAM,cAAc,IAAI,eAAe,cAAc,UAAU,IAAI,OAAO,QAAQ,QAAQ,IAAI,IAAI;AAClG,WAAO,GAAG,YAAY,KAAK,CAAC,SAAS;AACjC,aAAO,KAAK,KAAK,KAAK,WAAW,MAAM;AAAA,QACnC,MAAM,IAAI;AAAA,QACV,UAAU,IAAI,OAAO;AAAA,MACzB,CAAC;AAAA,IACL,CAAC,CAAC;AAAA,EACN;AACJ;AACA,WAAW,SAAS,CAAC,QAAQ,WAAW;AACpC,SAAO,IAAI,WAAW;AAAA,IAClB,MAAM;AAAA,IACN,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EA1lGxC,OA0lGwC;AAAA;AAAA;AAAA,EACpC,YAAY;AACR,WAAO,KAAK,KAAK;AAAA,EACrB;AAAA,EACA,aAAa;AACT,WAAO,KAAK,KAAK,OAAO,KAAK,aAAa,sBAAsB,aAC1D,KAAK,KAAK,OAAO,WAAW,IAC5B,KAAK,KAAK;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,UAAM,SAAS,KAAK,KAAK,UAAU;AACnC,UAAM,WAAW;AAAA,MACb,UAAU,wBAAC,QAAQ;AACf,0BAAkB,KAAK,GAAG;AAC1B,YAAI,IAAI,OAAO;AACX,iBAAO,MAAM;AAAA,QACjB,OACK;AACD,iBAAO,MAAM;AAAA,QACjB;AAAA,MACJ,GARU;AAAA,MASV,IAAI,OAAO;AACP,eAAO,IAAI;AAAA,MACf;AAAA,IACJ;AACA,aAAS,WAAW,SAAS,SAAS,KAAK,QAAQ;AACnD,QAAI,OAAO,SAAS,cAAc;AAC9B,YAAM,YAAY,OAAO,UAAU,IAAI,MAAM,QAAQ;AACrD,UAAI,IAAI,OAAO,OAAO;AAClB,eAAO,QAAQ,QAAQ,SAAS,EAAE,KAAK,OAAOC,eAAc;AACxD,cAAI,OAAO,UAAU;AACjB,mBAAO;AACX,gBAAM,SAAS,MAAM,KAAK,KAAK,OAAO,YAAY;AAAA,YAC9C,MAAMA;AAAA,YACN,MAAM,IAAI;AAAA,YACV,QAAQ;AAAA,UACZ,CAAC;AACD,cAAI,OAAO,WAAW;AAClB,mBAAO;AACX,cAAI,OAAO,WAAW;AAClB,mBAAO,MAAM,OAAO,KAAK;AAC7B,cAAI,OAAO,UAAU;AACjB,mBAAO,MAAM,OAAO,KAAK;AAC7B,iBAAO;AAAA,QACX,CAAC;AAAA,MACL,OACK;AACD,YAAI,OAAO,UAAU;AACjB,iBAAO;AACX,cAAM,SAAS,KAAK,KAAK,OAAO,WAAW;AAAA,UACvC,MAAM;AAAA,UACN,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,YAAI,OAAO,WAAW;AAClB,iBAAO;AACX,YAAI,OAAO,WAAW;AAClB,iBAAO,MAAM,OAAO,KAAK;AAC7B,YAAI,OAAO,UAAU;AACjB,iBAAO,MAAM,OAAO,KAAK;AAC7B,eAAO;AAAA,MACX;AAAA,IACJ;AACA,QAAI,OAAO,SAAS,cAAc;AAC9B,YAAM,oBAAoB,wBAAC,QAAQ;AAC/B,cAAM,SAAS,OAAO,WAAW,KAAK,QAAQ;AAC9C,YAAI,IAAI,OAAO,OAAO;AAClB,iBAAO,QAAQ,QAAQ,MAAM;AAAA,QACjC;AACA,YAAI,kBAAkB,SAAS;AAC3B,gBAAM,IAAI,MAAM,2FAA2F;AAAA,QAC/G;AACA,eAAO;AAAA,MACX,GAT0B;AAU1B,UAAI,IAAI,OAAO,UAAU,OAAO;AAC5B,cAAM,QAAQ,KAAK,KAAK,OAAO,WAAW;AAAA,UACtC,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,YAAI,MAAM,WAAW;AACjB,iBAAO;AACX,YAAI,MAAM,WAAW;AACjB,iBAAO,MAAM;AAEjB,0BAAkB,MAAM,KAAK;AAC7B,eAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,MAAM,MAAM;AAAA,MACtD,OACK;AACD,eAAO,KAAK,KAAK,OAAO,YAAY,EAAE,MAAM,IAAI,MAAM,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC,EAAE,KAAK,CAAC,UAAU;AACjG,cAAI,MAAM,WAAW;AACjB,mBAAO;AACX,cAAI,MAAM,WAAW;AACjB,mBAAO,MAAM;AACjB,iBAAO,kBAAkB,MAAM,KAAK,EAAE,KAAK,MAAM;AAC7C,mBAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,MAAM,MAAM;AAAA,UACtD,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA,IACJ;AACA,QAAI,OAAO,SAAS,aAAa;AAC7B,UAAI,IAAI,OAAO,UAAU,OAAO;AAC5B,cAAM,OAAO,KAAK,KAAK,OAAO,WAAW;AAAA,UACrC,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,YAAI,CAAC,QAAQ,IAAI;AACb,iBAAO;AACX,cAAM,SAAS,OAAO,UAAU,KAAK,OAAO,QAAQ;AACpD,YAAI,kBAAkB,SAAS;AAC3B,gBAAM,IAAI,MAAM,iGAAiG;AAAA,QACrH;AACA,eAAO,EAAE,QAAQ,OAAO,OAAO,OAAO,OAAO;AAAA,MACjD,OACK;AACD,eAAO,KAAK,KAAK,OAAO,YAAY,EAAE,MAAM,IAAI,MAAM,MAAM,IAAI,MAAM,QAAQ,IAAI,CAAC,EAAE,KAAK,CAAC,SAAS;AAChG,cAAI,CAAC,QAAQ,IAAI;AACb,mBAAO;AACX,iBAAO,QAAQ,QAAQ,OAAO,UAAU,KAAK,OAAO,QAAQ,CAAC,EAAE,KAAK,CAAC,YAAY;AAAA,YAC7E,QAAQ,OAAO;AAAA,YACf,OAAO;AAAA,UACX,EAAE;AAAA,QACN,CAAC;AAAA,MACL;AAAA,IACJ;AACA,SAAK,YAAY,MAAM;AAAA,EAC3B;AACJ;AACA,WAAW,SAAS,CAAC,QAAQ,QAAQ,WAAW;AAC5C,SAAO,IAAI,WAAW;AAAA,IAClB;AAAA,IACA,UAAU,sBAAsB;AAAA,IAChC;AAAA,IACA,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACA,WAAW,uBAAuB,CAAC,YAAY,QAAQ,WAAW;AAC9D,SAAO,IAAI,WAAW;AAAA,IAClB;AAAA,IACA,QAAQ,EAAE,MAAM,cAAc,WAAW,WAAW;AAAA,IACpD,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AAEO,IAAM,cAAN,cAA0B,QAAQ;AAAA,EA7uGzC,OA6uGyC;AAAA;AAAA;AAAA,EACrC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,WAAW;AACxC,aAAO,GAAG,MAAS;AAAA,IACvB;AACA,WAAO,KAAK,KAAK,UAAU,OAAO,KAAK;AAAA,EAC3C;AAAA,EACA,SAAS;AACL,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,YAAY,SAAS,CAAC,MAAM,WAAW;AACnC,SAAO,IAAI,YAAY;AAAA,IACnB,WAAW;AAAA,IACX,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,cAAN,cAA0B,QAAQ;AAAA,EAhwGzC,OAgwGyC;AAAA;AAAA;AAAA,EACrC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,MAAM;AACnC,aAAO,GAAG,IAAI;AAAA,IAClB;AACA,WAAO,KAAK,KAAK,UAAU,OAAO,KAAK;AAAA,EAC3C;AAAA,EACA,SAAS;AACL,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,YAAY,SAAS,CAAC,MAAM,WAAW;AACnC,SAAO,IAAI,YAAY;AAAA,IACnB,WAAW;AAAA,IACX,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,aAAN,cAAyB,QAAQ;AAAA,EAnxGxC,OAmxGwC;AAAA;AAAA;AAAA,EACpC,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,QAAI,OAAO,IAAI;AACf,QAAI,IAAI,eAAe,cAAc,WAAW;AAC5C,aAAO,KAAK,KAAK,aAAa;AAAA,IAClC;AACA,WAAO,KAAK,KAAK,UAAU,OAAO;AAAA,MAC9B;AAAA,MACA,MAAM,IAAI;AAAA,MACV,QAAQ;AAAA,IACZ,CAAC;AAAA,EACL;AAAA,EACA,gBAAgB;AACZ,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,WAAW,SAAS,CAAC,MAAM,WAAW;AAClC,SAAO,IAAI,WAAW;AAAA,IAClB,WAAW;AAAA,IACX,UAAU,sBAAsB;AAAA,IAChC,cAAc,OAAO,OAAO,YAAY,aAAa,OAAO,UAAU,MAAM,OAAO;AAAA,IACnF,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,WAAN,cAAuB,QAAQ;AAAA,EA5yGtC,OA4yGsC;AAAA;AAAA;AAAA,EAClC,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAE9C,UAAM,SAAS;AAAA,MACX,GAAG;AAAA,MACH,QAAQ;AAAA,QACJ,GAAG,IAAI;AAAA,QACP,QAAQ,CAAC;AAAA,MACb;AAAA,IACJ;AACA,UAAM,SAAS,KAAK,KAAK,UAAU,OAAO;AAAA,MACtC,MAAM,OAAO;AAAA,MACb,MAAM,OAAO;AAAA,MACb,QAAQ;AAAA,QACJ,GAAG;AAAA,MACP;AAAA,IACJ,CAAC;AACD,QAAI,QAAQ,MAAM,GAAG;AACjB,aAAO,OAAO,KAAK,CAACC,YAAW;AAC3B,eAAO;AAAA,UACH,QAAQ;AAAA,UACR,OAAOA,QAAO,WAAW,UACnBA,QAAO,QACP,KAAK,KAAK,WAAW;AAAA,YACnB,IAAI,QAAQ;AACR,qBAAO,IAAI,SAAS,OAAO,OAAO,MAAM;AAAA,YAC5C;AAAA,YACA,OAAO,OAAO;AAAA,UAClB,CAAC;AAAA,QACT;AAAA,MACJ,CAAC;AAAA,IACL,OACK;AACD,aAAO;AAAA,QACH,QAAQ;AAAA,QACR,OAAO,OAAO,WAAW,UACnB,OAAO,QACP,KAAK,KAAK,WAAW;AAAA,UACnB,IAAI,QAAQ;AACR,mBAAO,IAAI,SAAS,OAAO,OAAO,MAAM;AAAA,UAC5C;AAAA,UACA,OAAO,OAAO;AAAA,QAClB,CAAC;AAAA,MACT;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,cAAc;AACV,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,SAAS,SAAS,CAAC,MAAM,WAAW;AAChC,SAAO,IAAI,SAAS;AAAA,IAChB,WAAW;AAAA,IACX,UAAU,sBAAsB;AAAA,IAChC,YAAY,OAAO,OAAO,UAAU,aAAa,OAAO,QAAQ,MAAM,OAAO;AAAA,IAC7E,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,SAAN,cAAqB,QAAQ;AAAA,EAv2GpC,OAu2GoC;AAAA;AAAA;AAAA,EAChC,OAAO,OAAO;AACV,UAAM,aAAa,KAAK,SAAS,KAAK;AACtC,QAAI,eAAe,cAAc,KAAK;AAClC,YAAM,MAAM,KAAK,gBAAgB,KAAK;AACtC,wBAAkB,KAAK;AAAA,QACnB,MAAM,aAAa;AAAA,QACnB,UAAU,cAAc;AAAA,QACxB,UAAU,IAAI;AAAA,MAClB,CAAC;AACD,aAAO;AAAA,IACX;AACA,WAAO,EAAE,QAAQ,SAAS,OAAO,MAAM,KAAK;AAAA,EAChD;AACJ;AACA,OAAO,SAAS,CAAC,WAAW;AACxB,SAAO,IAAI,OAAO;AAAA,IACd,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AACO,IAAM,QAAQ,OAAO,WAAW;AAChC,IAAM,aAAN,cAAyB,QAAQ;AAAA,EA73GxC,OA63GwC;AAAA;AAAA;AAAA,EACpC,OAAO,OAAO;AACV,UAAM,EAAE,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAC9C,UAAM,OAAO,IAAI;AACjB,WAAO,KAAK,KAAK,KAAK,OAAO;AAAA,MACzB;AAAA,MACA,MAAM,IAAI;AAAA,MACV,QAAQ;AAAA,IACZ,CAAC;AAAA,EACL;AAAA,EACA,SAAS;AACL,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACO,IAAM,cAAN,MAAM,qBAAoB,QAAQ;AAAA,EA34GzC,OA24GyC;AAAA;AAAA;AAAA,EACrC,OAAO,OAAO;AACV,UAAM,EAAE,QAAQ,IAAI,IAAI,KAAK,oBAAoB,KAAK;AACtD,QAAI,IAAI,OAAO,OAAO;AAClB,YAAM,cAAc,mCAAY;AAC5B,cAAM,WAAW,MAAM,KAAK,KAAK,GAAG,YAAY;AAAA,UAC5C,MAAM,IAAI;AAAA,UACV,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AACD,YAAI,SAAS,WAAW;AACpB,iBAAO;AACX,YAAI,SAAS,WAAW,SAAS;AAC7B,iBAAO,MAAM;AACb,iBAAO,MAAM,SAAS,KAAK;AAAA,QAC/B,OACK;AACD,iBAAO,KAAK,KAAK,IAAI,YAAY;AAAA,YAC7B,MAAM,SAAS;AAAA,YACf,MAAM,IAAI;AAAA,YACV,QAAQ;AAAA,UACZ,CAAC;AAAA,QACL;AAAA,MACJ,GAnBoB;AAoBpB,aAAO,YAAY;AAAA,IACvB,OACK;AACD,YAAM,WAAW,KAAK,KAAK,GAAG,WAAW;AAAA,QACrC,MAAM,IAAI;AAAA,QACV,MAAM,IAAI;AAAA,QACV,QAAQ;AAAA,MACZ,CAAC;AACD,UAAI,SAAS,WAAW;AACpB,eAAO;AACX,UAAI,SAAS,WAAW,SAAS;AAC7B,eAAO,MAAM;AACb,eAAO;AAAA,UACH,QAAQ;AAAA,UACR,OAAO,SAAS;AAAA,QACpB;AAAA,MACJ,OACK;AACD,eAAO,KAAK,KAAK,IAAI,WAAW;AAAA,UAC5B,MAAM,SAAS;AAAA,UACf,MAAM,IAAI;AAAA,UACV,QAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO,OAAO,GAAG,GAAG;AAChB,WAAO,IAAI,aAAY;AAAA,MACnB,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,UAAU,sBAAsB;AAAA,IACpC,CAAC;AAAA,EACL;AACJ;AACO,IAAM,cAAN,cAA0B,QAAQ;AAAA,EAr8GzC,OAq8GyC;AAAA;AAAA;AAAA,EACrC,OAAO,OAAO;AACV,UAAM,SAAS,KAAK,KAAK,UAAU,OAAO,KAAK;AAC/C,UAAM,SAAS,wBAAC,SAAS;AACrB,UAAI,QAAQ,IAAI,GAAG;AACf,aAAK,QAAQ,OAAO,OAAO,KAAK,KAAK;AAAA,MACzC;AACA,aAAO;AAAA,IACX,GALe;AAMf,WAAO,QAAQ,MAAM,IAAI,OAAO,KAAK,CAAC,SAAS,OAAO,IAAI,CAAC,IAAI,OAAO,MAAM;AAAA,EAChF;AAAA,EACA,SAAS;AACL,WAAO,KAAK,KAAK;AAAA,EACrB;AACJ;AACA,YAAY,SAAS,CAAC,MAAM,WAAW;AACnC,SAAO,IAAI,YAAY;AAAA,IACnB,WAAW;AAAA,IACX,UAAU,sBAAsB;AAAA,IAChC,GAAG,oBAAoB,MAAM;AAAA,EACjC,CAAC;AACL;AAQA,SAAS,YAAY,QAAQ,MAAM;AAC/B,QAAM,IAAI,OAAO,WAAW,aAAa,OAAO,IAAI,IAAI,OAAO,WAAW,WAAW,EAAE,SAAS,OAAO,IAAI;AAC3G,QAAM,KAAK,OAAO,MAAM,WAAW,EAAE,SAAS,EAAE,IAAI;AACpD,SAAO;AACX;AAJS;AAKF,SAAS,OAAO,OAAO,UAAU,CAAC,GAWzC,OAAO;AACH,MAAI;AACA,WAAO,OAAO,OAAO,EAAE,YAAY,CAAC,MAAM,QAAQ;AAC9C,YAAM,IAAI,MAAM,IAAI;AACpB,UAAI,aAAa,SAAS;AACtB,eAAO,EAAE,KAAK,CAACC,OAAM;AACjB,cAAI,CAACA,IAAG;AACJ,kBAAM,SAAS,YAAY,SAAS,IAAI;AACxC,kBAAM,SAAS,OAAO,SAAS,SAAS;AACxC,gBAAI,SAAS,EAAE,MAAM,UAAU,GAAG,QAAQ,OAAO,OAAO,CAAC;AAAA,UAC7D;AAAA,QACJ,CAAC;AAAA,MACL;AACA,UAAI,CAAC,GAAG;AACJ,cAAM,SAAS,YAAY,SAAS,IAAI;AACxC,cAAM,SAAS,OAAO,SAAS,SAAS;AACxC,YAAI,SAAS,EAAE,MAAM,UAAU,GAAG,QAAQ,OAAO,OAAO,CAAC;AAAA,MAC7D;AACA;AAAA,IACJ,CAAC;AACL,SAAO,OAAO,OAAO;AACzB;AAhCgB;AAkCT,IAAM,OAAO;AAAA,EAChB,QAAQ,UAAU;AACtB;AACO,IAAI;AAAA,CACV,SAAUC,wBAAuB;AAC9B,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,QAAQ,IAAI;AAClC,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,SAAS,IAAI;AACnC,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,cAAc,IAAI;AACxC,EAAAA,uBAAsB,SAAS,IAAI;AACnC,EAAAA,uBAAsB,QAAQ,IAAI;AAClC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,UAAU,IAAI;AACpC,EAAAA,uBAAsB,SAAS,IAAI;AACnC,EAAAA,uBAAsB,UAAU,IAAI;AACpC,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,UAAU,IAAI;AACpC,EAAAA,uBAAsB,uBAAuB,IAAI;AACjD,EAAAA,uBAAsB,iBAAiB,IAAI;AAC3C,EAAAA,uBAAsB,UAAU,IAAI;AACpC,EAAAA,uBAAsB,WAAW,IAAI;AACrC,EAAAA,uBAAsB,QAAQ,IAAI;AAClC,EAAAA,uBAAsB,QAAQ,IAAI;AAClC,EAAAA,uBAAsB,aAAa,IAAI;AACvC,EAAAA,uBAAsB,SAAS,IAAI;AACnC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,SAAS,IAAI;AACnC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,eAAe,IAAI;AACzC,EAAAA,uBAAsB,aAAa,IAAI;AACvC,EAAAA,uBAAsB,aAAa,IAAI;AACvC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,UAAU,IAAI;AACpC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,YAAY,IAAI;AACtC,EAAAA,uBAAsB,aAAa,IAAI;AACvC,EAAAA,uBAAsB,aAAa,IAAI;AAC3C,GAAG,0BAA0B,wBAAwB,CAAC,EAAE;AAKxD,IAAM,iBAAiB,wBAEvB,KAAK,SAAS;AAAA,EACV,SAAS,yBAAyB,IAAI,IAAI;AAC9C,MAAM,OAAO,CAAC,SAAS,gBAAgB,KAAK,MAAM,GAJ3B;AAKvB,IAAM,aAAa,UAAU;AAC7B,IAAM,aAAa,UAAU;AAC7B,IAAM,UAAU,OAAO;AACvB,IAAM,aAAa,UAAU;AAC7B,IAAM,cAAc,WAAW;AAC/B,IAAM,WAAW,QAAQ;AACzB,IAAM,aAAa,UAAU;AAC7B,IAAM,gBAAgB,aAAa;AACnC,IAAM,WAAW,QAAQ;AACzB,IAAM,UAAU,OAAO;AACvB,IAAM,cAAc,WAAW;AAC/B,IAAM,YAAY,SAAS;AAC3B,IAAM,WAAW,QAAQ;AACzB,IAAM,YAAY,SAAS;AAC3B,IAAM,aAAa,UAAU;AAC7B,IAAM,mBAAmB,UAAU;AACnC,IAAM,YAAY,SAAS;AAC3B,IAAM,yBAAyB,sBAAsB;AACrD,IAAM,mBAAmB,gBAAgB;AACzC,IAAM,YAAY,SAAS;AAC3B,IAAM,aAAa,UAAU;AAC7B,IAAM,UAAU,OAAO;AACvB,IAAM,UAAU,OAAO;AACvB,IAAM,eAAe,YAAY;AACjC,IAAM,WAAW,QAAQ;AACzB,IAAM,cAAc,WAAW;AAC/B,IAAM,WAAW,QAAQ;AACzB,IAAM,iBAAiB,cAAc;AACrC,IAAM,cAAc,WAAW;AAC/B,IAAM,cAAc,WAAW;AAC/B,IAAM,eAAe,YAAY;AACjC,IAAM,eAAe,YAAY;AACjC,IAAM,iBAAiB,WAAW;AAClC,IAAM,eAAe,YAAY;AACjC,IAAM,UAAU,6BAAM,WAAW,EAAE,SAAS,GAA5B;AAChB,IAAM,UAAU,6BAAM,WAAW,EAAE,SAAS,GAA5B;AAChB,IAAM,WAAW,6BAAM,YAAY,EAAE,SAAS,GAA7B;AACV,IAAM,SAAS;AAAA,EAClB,QAAS,wBAAC,QAAQ,UAAU,OAAO,EAAE,GAAG,KAAK,QAAQ,KAAK,CAAC,GAAlD;AAAA,EACT,QAAS,wBAAC,QAAQ,UAAU,OAAO,EAAE,GAAG,KAAK,QAAQ,KAAK,CAAC,GAAlD;AAAA,EACT,SAAU,wBAAC,QAAQ,WAAW,OAAO;AAAA,IACjC,GAAG;AAAA,IACH,QAAQ;AAAA,EACZ,CAAC,GAHS;AAAA,EAIV,QAAS,wBAAC,QAAQ,UAAU,OAAO,EAAE,GAAG,KAAK,QAAQ,KAAK,CAAC,GAAlD;AAAA,EACT,MAAO,wBAAC,QAAQ,QAAQ,OAAO,EAAE,GAAG,KAAK,QAAQ,KAAK,CAAC,GAAhD;AACX;AAEO,IAAM,QAAQ;;;ACpmHd,IAAM,oBAAN,MAAwB;AAAA,EAR/B,OAQ+B;AAAA;AAAA;AAAA;AAAA,EAE7B,OAAwB,cAAc;AAAA,IACpC,MAAM,iBAAE,OAAO,EAAE,KAAK,qBAAqB;AAAA,IAC3C,OAAO,iBAAE,OAAO,EAAE,MAAM,sBAAsB;AAAA,IAC9C,KAAK,iBAAE,OAAO,EAAE,IAAI,oBAAoB;AAAA,IACxC,MAAM,iBAAE,OAAO,EAAE,SAAS,qBAAqB;AAAA,IAC/C,iBAAiB,iBAAE,OAAO,EAAE,IAAI,EAAE,SAAS,4BAA4B;AAAA,IACvE,gBAAgB,iBAAE,OAAO,EAAE,IAAI,GAAG,wBAAwB;AAAA,IAC1D,gBAAgB,iBAAE,OAAO,EAAE,SAAS;AAAA,EACtC;AAAA;AAAA,EAGA,OAAwB,cAAc;AAAA,IACpC,UAAU,iBAAE,KAAK;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,IAED,aAAa,iBAAE,OAAO;AAAA,MACpB,YAAY,iBAAE,KAAK,CAAC,QAAQ,YAAY,QAAQ,WAAW,CAAC;AAAA,MAC5D,WAAW,iBAAE,KAAK,CAAC,SAAS,YAAY,eAAe,CAAC;AAAA,MACxD,OAAO,iBAAE,KAAK,CAAC,UAAU,cAAc,gBAAgB,gBAAgB,QAAQ,CAAC;AAAA,MAChF,QAAQ,iBAAE,KAAK,CAAC,WAAW,iBAAiB,mBAAmB,CAAC;AAAA,MAChE,UAAU,iBAAE,KAAK,CAAC,QAAQ,SAAS,qBAAqB,CAAC;AAAA,MACzD,cAAc,iBAAE,KAAK,CAAC,kBAAkB,oBAAoB,qBAAqB,CAAC;AAAA,MAClF,YAAY,iBAAE,KAAK,CAAC,SAAS,YAAY,eAAe,CAAC;AAAA,IAC3D,CAAC;AAAA,IAED,gBAAgB,iBAAE,OAAO;AAAA,MACvB,UAAU,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MAC1B,SAAS,iBAAE,MAAM,iBAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAC/B,UAAU,iBAAE,OAAO;AAAA,QACjB,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,QAC/B,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,MACjC,CAAC,EAAE,SAAS;AAAA,IACd,CAAC;AAAA,IAED,YAAY,iBAAE,OAAO;AAAA,MACnB,WAAW,KAAK,YAAY;AAAA,MAC5B,UAAU,iBAAE,OAAO;AAAA,MACnB,QAAQ,iBAAE,OAAO,iBAAE,OAAO,CAAC;AAAA,MAC3B,gBAAgB,iBAAE,OAAO;AAAA,MACzB,iBAAiB,iBAAE,MAAM,iBAAE,OAAO,CAAC;AAAA,MACnC,aAAa,KAAK,YAAY;AAAA,IAChC,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,OAAwB,kBAAkB;AAAA,IACxC,UAAU,iBAAE,OAAO;AAAA,MACjB,WAAW,KAAK,YAAY;AAAA,MAC5B,UAAU,iBAAE,KAAK,CAAC,QAAQ,SAAS,CAAC;AAAA,MACpC,SAAS,iBAAE,OAAO,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MACtC,QAAQ,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IAClD,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,OAAwB,cAAc;AAAA,IACpC,SAAS,iBAAE,OAAO;AAAA,MAChB,OAAO,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG;AAAA,MAChC,SAAS,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACzB,SAAS,iBAAE,OAAO,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MACtC,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,MAC9B,MAAM,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MACnC,aAAa,iBAAE,QAAQ,EAAE,SAAS;AAAA,MAClC,YAAY,iBAAE,QAAQ,EAAE,SAAS;AAAA,IACnC,CAAC;AAAA,IAED,eAAe,iBAAE,OAAO;AAAA,MACtB,OAAO,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MAC3C,SAAS,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MACpC,SAAS,iBAAE,OAAO,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MACtC,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,MAC9B,MAAM,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MACnC,aAAa,iBAAE,QAAQ,EAAE,SAAS;AAAA,MAClC,YAAY,iBAAE,QAAQ,EAAE,SAAS;AAAA,IACnC,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,OAAwB,mBAAmB;AAAA,IACzC,OAAO,iBAAE,OAAO;AAAA,MACd,WAAW,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MAC3B,WAAW,iBAAE,OAAO,iBAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MACtC,WAAW,KAAK,YAAY,KAAK,SAAS;AAAA,MAC1C,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,IACjC,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,OAAwB,gBAAgB;AAAA,IACtC,YAAY,iBAAE,OAAO;AAAA,MACnB,eAAe,KAAK,YAAY;AAAA,MAChC,aAAa,iBAAE,KAAK,CAAC,QAAQ,YAAY,QAAQ,WAAW,CAAC;AAAA,MAC7D,iBAAiB,iBAAE,OAAO,EAAE,SAAS;AAAA,MACrC,iBAAiB,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MAC/C,WAAW,iBAAE,KAAK,CAAC,WAAW,QAAQ,YAAY,qBAAqB,QAAQ,CAAC,EAAE,SAAS;AAAA,MAC3F,kBAAkB,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,IAClD,CAAC;AAAA,IAED,WAAW,iBAAE,OAAO;AAAA,MAClB,eAAe,KAAK,YAAY;AAAA,MAChC,WAAW,iBAAE,KAAK;AAAA,MAClB,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,MAC/B,eAAe,iBAAE,OAAO,EAAE,SAAS;AAAA,MACnC,SAAS,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MACzB,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,MAC9B,YAAY,iBAAE,OAAO,EAAE,SAAS;AAAA,MAChC,oBAAoB,iBAAE,OAAO,iBAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MAC/C,gBAAgB,iBAAE,OAAO,iBAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MAC3C,SAAS,iBAAE,OAAO,iBAAE,IAAI,CAAC,EAAE,SAAS;AAAA,IACtC,CAAC;AAAA,IAED,OAAO,iBAAE,OAAO;AAAA,MACd,eAAe,KAAK,YAAY;AAAA,MAChC,YAAY,iBAAE,KAAK,CAAC,UAAU,cAAc,gBAAgB,gBAAgB,QAAQ,CAAC;AAAA,MACrF,YAAY,iBAAE,MAAM,iBAAE,OAAO;AAAA,QAC3B,IAAI,iBAAE,OAAO;AAAA,QACb,MAAM,iBAAE,OAAO;AAAA,QACf,MAAM,iBAAE,OAAO,EAAE,SAAS;AAAA,QAC1B,QAAQ,iBAAE,OAAO,EAAE,SAAS;AAAA,QAC5B,YAAY,iBAAE,QAAQ;AAAA,QACtB,SAAS,iBAAE,OAAO;AAAA,QAClB,iBAAiB,iBAAE,OAAO,EAAE,SAAS;AAAA,MACvC,CAAC,CAAC;AAAA,MACF,eAAe,iBAAE,OAAO,iBAAE,IAAI,CAAC,EAAE,SAAS;AAAA,MAC1C,qBAAqB,iBAAE,OAAO,EAAE,SAAS;AAAA,MACzC,kBAAkB,iBAAE,KAAK,CAAC,QAAQ,UAAU,WAAW,UAAU,aAAa,SAAS,CAAC,EAAE,SAAS;AAAA,IACrG,CAAC;AAAA,IAED,QAAQ,iBAAE,OAAO;AAAA,MACf,eAAe,KAAK,YAAY;AAAA,MAChC,aAAa,iBAAE,KAAK,CAAC,WAAW,iBAAiB,mBAAmB,CAAC;AAAA,MACrE,aAAa,iBAAE,OAAO,EAAE,SAAS;AAAA,MACjC,gBAAgB,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MAC9C,eAAe,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MAC5C,eAAe,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MAC7C,eAAe,iBAAE,MAAM,iBAAE,OAAO;AAAA,QAC9B,OAAO,iBAAE,OAAO;AAAA,QAChB,YAAY,iBAAE,OAAO;AAAA,QACrB,aAAa,iBAAE,OAAO;AAAA,QACtB,cAAc,iBAAE,MAAM,iBAAE,OAAO,CAAC;AAAA,MAClC,CAAC,CAAC,EAAE,SAAS;AAAA,IACf,CAAC;AAAA,IAED,UAAU,iBAAE,OAAO;AAAA,MACjB,eAAe,KAAK,YAAY;AAAA,MAChC,aAAa,iBAAE,KAAK,CAAC,QAAQ,SAAS,qBAAqB,CAAC;AAAA,MAC5D,eAAe,iBAAE,KAAK,CAAC,UAAU,YAAY,WAAW,eAAe,YAAY,CAAC,EAAE,SAAS;AAAA,MAC/F,gBAAgB,iBAAE,OAAO,EAAE,SAAS;AAAA,MACpC,gBAAgB,iBAAE,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,SAAS;AAAA,MACpD,qBAAqB,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MACnD,yBAAyB,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,IACxD,CAAC;AAAA,IAED,cAAc,iBAAE,OAAO;AAAA,MACrB,eAAe,KAAK,YAAY;AAAA,MAChC,aAAa,iBAAE,KAAK,CAAC,kBAAkB,oBAAoB,qBAAqB,CAAC;AAAA,MACjF,qBAAqB,iBAAE,KAAK,CAAC,wBAAwB,mBAAmB,mBAAmB,gBAAgB,gBAAgB,CAAC,EAAE,SAAS;AAAA,MACvI,uBAAuB,iBAAE,KAAK,CAAC,wBAAwB,mBAAmB,mBAAmB,gBAAgB,gBAAgB,CAAC,EAAE,SAAS;AAAA,MACzI,iBAAiB,iBAAE,KAAK,CAAC,UAAU,WAAW,YAAY,cAAc,CAAC,EAAE,SAAS;AAAA,MACpF,oBAAoB,iBAAE,OAAO,iBAAE,OAAO,CAAC,EAAE,SAAS;AAAA,MAClD,oBAAoB,iBAAE,KAAK,CAAC,aAAa,WAAW,cAAc,oBAAoB,CAAC,EAAE,SAAS;AAAA,IACpG,CAAC;AAAA,IAED,YAAY,iBAAE,OAAO;AAAA,MACnB,eAAe,KAAK,YAAY;AAAA,MAChC,WAAW,iBAAE,KAAK;AAAA,MAClB,UAAU,iBAAE,OAAO,EAAE,IAAI,CAAC;AAAA,MAC1B,gBAAgB,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAC7C,eAAe,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAC5C,gBAAgB,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAC7C,mBAAmB,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAChD,gBAAgB,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE;AAAA,MAC9C,iBAAiB,iBAAE,OAAO,iBAAE,IAAI,CAAC;AAAA,IACnC,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,uBAAuB,MAAgB;AAC5C,QAAI;AACF,aAAO,KAAK,YAAY,eAAe,MAAM,IAAI;AAAA,IACnD,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,iBAAiB,MAAgB;AACtC,QAAI;AACF,aAAO,KAAK,gBAAgB,SAAS,MAAM,IAAI;AAAA,IACjD,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,oBAAoB,MAAgB;AACzC,QAAI;AACF,aAAO,KAAK,YAAY,QAAQ,MAAM,IAAI;AAAA,IAC5C,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,uBAAuB,MAAgB;AAC5C,QAAI;AACF,aAAO,KAAK,iBAAiB,MAAM,MAAM,IAAI;AAAA,IAC/C,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,sBAAsB,QAAgB,MAAgB;AAC3D,QAAI;AACF,YAAM,SAAS,KAAK,cAAc,MAAyC;AAC3E,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI;AAAA,UACR,mBAAmB,MAAM;AAAA,UACzB,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AACA,aAAO,OAAO,MAAM,IAAI;AAAA,IAC1B,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR,WAAW,MAAM;AAAA,UACjB,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAa,MAAsB;AACxC,QAAI;AACF,aAAO,KAAK,YAAY,KAAK,MAAM,IAAI;AAAA,IACzC,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,mBAAmB,QAA8C;AACtE,QAAI;AACF,YAAM,SAAS,iBAAE,OAAO;AAAA,QACtB,MAAM,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC;AAAA,QACvC,OAAO,iBAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE,QAAQ,EAAE;AAAA,MACpD,CAAC;AACD,aAAO,OAAO,MAAM,MAAM;AAAA,IAC5B,SAAS,OAAO;AACd,UAAI,iBAAiB,iBAAE,UAAU;AAC/B,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,eAAe,OAAe,YAAoB,KAAc;AACrE,QAAI,OAAO,UAAU,UAAU;AAC7B,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAGA,UAAM,UAAU,MACb,KAAK,EACL,QAAQ,SAAS,EAAE,EACnB,QAAQ,iBAAiB,EAAE,EAC3B,MAAM,GAAG,SAAS;AAErB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,kBAAkB,IAAqB;AAC5C,UAAMC,aAAY;AAClB,UAAMC,aAAY;AAElB,WAAOD,WAAU,KAAK,EAAE,KAAKC,WAAU,KAAK,EAAE;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,kBAAkB,WAA4B;AACnD,QAAI,OAAO,cAAc,SAAU,QAAO;AAC1C,QAAI,UAAU,WAAW,KAAK,UAAU,SAAS,IAAK,QAAO;AAG7D,WAAO,qCAAqC,KAAK,SAAS;AAAA,EAC5D;AACF;;;AClXO,IAAM,mBAAmB,8BAAO,GAAY,SAA8B;AAC/E,MAAI;AAEF,UAAM,gBAAgB,CAAC;AAGvB,UAAM,oBAAoB,CAAC;AAG3B,UAAM,oBAAoB,CAAC;AAG3B,sBAAkB,CAAC;AAEnB,UAAM,KAAK;AAAA,EACb,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAMC,YAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,OAAO,MAAM;AAAA,QACb,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,OAAO,cAAc,KAAK,OAAO,WAAW;AAAA,MAC/D;AAEA,QAAE,OAAO,MAAM,UAAU;AACzB,YAAM,EAAE,KAAKA,SAAQ;AACrB;AAAA,IACF;AAGA,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,OAAO,cAAc,KAAK,OAAO,WAAW;AAAA,IAC/D;AAEA,MAAE,OAAO,GAAG;AACZ,UAAM,EAAE,KAAK,QAAQ;AACrB;AAAA,EACF;AACF,GAzCgC;AA8ChC,eAAe,gBAAgB,GAA2B;AACxD,QAAM,UAAU,EAAE,IAAI,OAAO;AAG7B,QAAM,kBAAkB,CAAC,MAAM;AAC/B,aAAW,UAAU,iBAAiB;AACpC,QAAI,CAAC,QAAQ,MAAM,GAAG;AACpB,YAAM,IAAI;AAAA,QACR,4BAA4B,MAAM;AAAA,QAClC,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,QAAM,aAAa,EAAE,IAAI,OAAO,eAAe;AAC/C,MAAI,cAAc,CAAC,kBAAkB,UAAU,GAAG;AAChD,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAGA,QAAM,YAAY,EAAE,IAAI,OAAO,cAAc;AAC7C,MAAI,aAAa,CAAC,YAAY,SAAS,GAAG;AACxC,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF;AAlCe;AAuCf,eAAe,oBAAoB,GAA2B;AAC5D,QAAM,gBAAgB,EAAE,IAAI,OAAO,gBAAgB;AAEnD,MAAI,eAAe;AACjB,UAAM,OAAO,SAAS,aAAa;AACnC,UAAM,UAAU,KAAK,OAAO;AAE5B,QAAI,OAAO,SAAS;AAClB,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAfe;AAoBf,eAAe,oBAAoB,GAA2B;AAC5D,QAAM,SAAS,EAAE,IAAI;AACrB,QAAM,cAAc,EAAE,IAAI,OAAO,cAAc;AAG/C,MAAI,CAAC,QAAQ,OAAO,OAAO,EAAE,SAAS,MAAM,GAAG;AAC7C,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAGA,UAAM,iBAAiB;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,KAAK,eAAe;AAC1B,UAAM,WAAW,GAAG,SAAS,GAAG,KAAK,GAAG,MAAM,GAAG,EAAE,CAAC,KAAK,IAAI,KAAK,IAAI,GAAG,KAAK;AAC9E,QAAI,CAAC,eAAe,SAAS,QAAQ,GAAG;AACtC,YAAM,IAAI;AAAA,QACR,6BAA6B,QAAQ;AAAA,QACrC,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AA/Be;AAoCf,SAAS,kBAAkB,GAAkB;AAC3C,QAAM,YAAY,EAAE,IAAI,OAAO,YAAY;AAE3C,MAAI,aAAa,CAAC,kBAAkB,kBAAkB,SAAS,GAAG;AAChE,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF;AAVS;AAeT,SAAS,kBAAkB,YAA6B;AAEtD,QAAM,WAAW;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,SAAO,SAAS,KAAK,aAAW,QAAQ,KAAK,UAAU,CAAC;AAC1D;AATS;AAcT,SAAS,YAAY,MAAuB;AAC1C,QAAMC,aAAY;AAClB,SAAOA,WAAU,KAAK,IAAI;AAC5B;AAHS;;;ACzKT,IAAM,uBAAuB,iBAAE,OAAO;AAAA,EACpC,UAAU,iBAAE,OAAO,EAAE,IAAI,GAAG,uBAAuB;AAAA,EACnD,SAAS,iBAAE,MAAM,iBAAE,IAAI,CAAC,EAAE,IAAI,GAAG,iCAAiC;AAAA,EAClE,UAAU,iBAAE,OAAO;AAAA,IACjB,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,IAC/B,WAAW,iBAAE,OAAO,EAAE,SAAS;AAAA,EACjC,CAAC,EAAE,SAAS;AACd,CAAC;AAKD,IAAM,uBAAuB,iBAAE,OAAO;AAAA,EACpC,WAAW,iBAAE,OAAO,EAAE,IAAI,GAAG,wBAAwB;AAAA,EACrD,MAAM,iBAAE,IAAI,EAAE,SAAS;AAAA,EACvB,WAAW,iBAAE,OAAO,EAAE,KAAK,2BAA2B,EAAE,SAAS;AAAA,EACjE,WAAW,iBAAE,OAAO,EAAE,SAAS;AACjC,CAAC;AAGD,IAAM,oBAAoB,iBAAE,OAAO;AAAA,EACjC,OAAO,iBAAE,OAAO,EAAE,IAAI,GAAG,mBAAmB,EAAE,IAAI,KAAK,gBAAgB;AAAA,EACvE,SAAS,iBAAE,OAAO,EAAE,IAAI,GAAG,qBAAqB;AAAA,EAChD,SAAS,iBAAE,OAAO,EAAE,IAAI,KAAK,kBAAkB,EAAE,SAAS;AAAA,EAC1D,UAAU,iBAAE,OAAO,EAAE,SAAS;AAAA,EAC9B,MAAM,iBAAE,MAAM,iBAAE,OAAO,CAAC,EAAE,SAAS;AACrC,CAAC;AA2BM,IAAM,yBAAyB,8BAAO,GAAwB,SAAe;AAClF,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,yBAAqB,MAAM,IAAI;AAC/B,WAAO,KAAK;AAAA,EACd,SAAS,OAAO;AACd,QAAI,iBAAiB,iBAAE,UAAU;AAC/B,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACF,GAhBsC;AAkB/B,IAAM,mBAAmB,8BAAO,GAAwB,SAAe;AAC5E,UAAQ,IAAI,oCAAoC;AAEhD,MAAI;AAEF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAG9B,QAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAAC,KAAK,YAAY,CAAC,CAAC,QAAQ,SAAS,EAAE,SAAS,KAAK,QAAQ,GAAG;AAClE,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAEA,UAAM,KAAK;AAAA,EACb,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AAGA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,GArCgC;AAuCzB,IAAM,yBAAyB,8BAAO,GAAwB,SAAe;AAClF,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,yBAAqB,MAAM,IAAI;AAC/B,UAAM,KAAK;AAAA,EACb,SAAS,OAAO;AACd,QAAI,iBAAiB,iBAAE,UAAU;AAC/B,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AACA,UAAM;AAAA,EACR;AACF,GAhBsC;;;AChH/B,IAAM,cAAc,wBAAC,UAAkB,aAAqB;AACjE,SAAO,OAAO,GAA+B,SAAe;AAC1D,UAAM,KAAK,EAAE,IAAI,OAAO,kBAAkB,KAC/B,EAAE,IAAI,OAAO,gBAAgB,KAC7B;AAEX,UAAM,MAAM,cAAc,EAAE;AAC5B,UAAM,gBAAgB,KAAK,MAAM,WAAW,GAAI;AAEhD,QAAI;AAEF,UAAI,CAAC,EAAE,IAAI,IAAI;AACb,gBAAQ,KAAK,0CAA0C;AACvD,eAAO,KAAK;AAAA,MACd;AAEA,YAAM,UAAU,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG;AACtC,YAAM,QAAQ,UAAU,SAAS,OAAO,IAAI;AAE5C,UAAI,SAAS,UAAU;AACrB,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAGA,YAAM,EAAE,IAAI,GAAG,IAAI,MAAM,QAAQ,GAAG,SAAS,GAAG;AAAA,QAC9C,eAAe;AAAA,MACjB,CAAC;AAED,YAAM,KAAK;AAAA,IACb,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AAGA,cAAQ,KAAK,qCAAqC,KAAK;AACvD,YAAM,KAAK;AAAA,IACb;AAAA,EACF;AACF,GA3C2B;;;ACiBpB,IAAM,oBAAN,MAAwB;AAAA,EA1B/B,OA0B+B;AAAA;AAAA;AAAA,EACrB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOR,YAAY,WAA4B,cAA4B;AAClE,SAAK,YAAY;AACjB,SAAK,eAAe;AAAA,EACtB;AAAA,EAEA,MAAM,aAAa,aAAsB,MAAsB;AAC7D,QAAI;AACF,YAAM,YAAY,MAAM,KAAK,UAAU,UAAU,aAAa;AAC9D,YAAM,gBAAgB,aAClB,UAAU,OAAO,CAAC,SAAc,KAAK,QAAQ,IAC7C;AACJ,aAAO,cAAc,IAAI,CAAC,UAAe;AAAA,QACvC,IAAI,KAAK;AAAA,QACT,MAAM,KAAK,QAAQ;AAAA,QACnB,aAAa,KAAK,eAAe;AAAA,QACjC,UAAU,KAAK,YAAY;AAAA,QAC3B,YAAY,KAAK;AAAA,QACjB,UAAU,KAAK,YAAY;AAAA,MAC7B,EAAE;AAAA,IACJ,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,MAAM,cAAc,UAAgC;AAClD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,UAAU,UAAU,SAAS,QAAQ;AAC/D,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI;AAAA,UACR,cAAc,QAAQ;AAAA,UACtB,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,QACL,IAAI,OAAO;AAAA,QACX,MAAM,OAAO,QAAQ;AAAA,QACrB,aAAa,OAAO,eAAe;AAAA,QACnC,UAAU,OAAO,YAAY;AAAA,QAC7B,YAAY,OAAO;AAAA,QACnB,UAAU,OAAO,YAAY;AAAA,MAC/B;AAAA,IACF,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR,8CAA8C,QAAQ;AAAA,QACtD,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,cAAc,WAAiC;AACnD,QAAI;AAEF,YAAM,WAAW,eAAe,SAAS;AACzC,YAAM,eAAe,MAAM,KAAK,aAAa,IAAI,QAAQ;AAEzD,UAAI,cAAc;AAChB,eAAO;AAAA,MACT;AAGA,YAAM,UAAU,MAAM,KAAK,UAAU,aAAa,SAAS,SAAS;AAEpE,UAAI,CAAC,SAAS;AACZ,cAAM,IAAI;AAAA,UACR,iBAAiB,SAAS;AAAA,UAC1B,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAGA,YAAM,aAAa,OAAO,QAAQ,eAAe,WAC7C,KAAK,MAAM,QAAQ,UAAU,IAC5B,QAAQ,cAAc,CAAC;AAG5B,YAAM,SAAS;AAAA,QACb,WAAW,QAAQ;AAAA,QACnB,UAAU,QAAQ;AAAA,QAClB,QAAQ,WAAW,UAAU,CAAC;AAAA,QAC9B,gBAAgB,WAAW,kBAAkB;AAAA,QAC7C,iBAAiB,WAAW,mBAAmB,CAAC;AAAA,QAChD,aAAa,OAAO,QAAQ,cAAc,WACtC,QAAQ,aACR,oBAAI,KAAK,GAAE,YAAY;AAAA,MAC7B;AAGA,YAAM,KAAK,aAAa,IAAI,UAAU,QAAQ,EAAE,KAAK,MAAM,CAAC;AAE5D,aAAO;AAAA,IACT,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR,0CAA0C,SAAS;AAAA,QACnD,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,gBAAgB,aAOF;AAClB,QAAI;AACF,YAAM,sBAA2B;AAAA,QAC/B,YAAY,YAAY;AAAA,QACxB,SAAS,YAAY;AAAA,QACrB,QAAQ,YAAY;AAAA,QACpB,iBAAiB,YAAY,mBAAmB;AAAA,MAClD;AAEA,UAAI,YAAY,WAAW;AACzB,4BAAoB,YAAY,YAAY;AAAA,MAC9C;AACA,UAAI,YAAY,eAAe;AAC7B,4BAAoB,YAAY,YAAY;AAAA,MAC9C;AAEA,aAAO,MAAM,KAAK,UAAU,aAAa,OAAO,mBAAmB;AAAA,IACrE,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AC9KA,IAAM,aAAa,IAAIC,MAAiB;AAGxC,WAAW,IAAI,KAAK,OAAO,MAA2B;AACpD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,eAAe,EAAE,IAAI,cAAc;AACzC,UAAM,oBAAoB,IAAI,kBAAkB,WAAW,YAAY;AAEvE,UAAM,YAAY,MAAM,kBAAkB,aAAa,IAAI;AAE3D,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW,IAAI,cAAc,OAAO,MAA2B;AAC7D,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AAEvC,MAAI;AACF,sBAAkB,eAAe,UAAU,EAAE;AAE7C,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,eAAe,EAAE,IAAI,cAAc;AACzC,UAAM,oBAAoB,IAAI,kBAAkB,WAAW,YAAY;AAEvE,UAAM,aAAa,MAAM,kBAAkB,cAAc,QAAQ;AAEjE,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS,0BAA0B,QAAQ;AAAA,MAC3C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,8CAA8C,QAAQ;AAAA,MACtD,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW,IAAI,wBAAwB,OAAO,MAA2B;AACvE,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AAEvC,MAAI;AACF,sBAAkB,eAAe,UAAU,EAAE;AAE7C,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,eAAe,EAAE,IAAI,cAAc;AACzC,UAAM,oBAAoB,IAAI,kBAAkB,WAAW,YAAY;AAEvE,UAAM,aAAa,MAAM,kBAAkB,cAAc,QAAQ;AAGjE,UAAM,aAAa,OAAO,WAAW,eAAe,WAChD,KAAK,MAAM,WAAW,UAAU,IAChC,WAAW;AAEf,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,UAAU,WAAW;AAAA,QACrB,MAAM,WAAW;AAAA,QACjB,aAAa,WAAW;AAAA,QACxB,UAAU,WAAW;AAAA,QACrB,eAAe,WAAW,iBAAiB;AAAA,QAC3C,WAAW,WAAW,aAAa;AAAA,QACnC,cAAc,WAAW,gBAAgB;AAAA;AAAA,MAE3C;AAAA,MACA,SAAS,+BAA+B,QAAQ;AAAA,MAChD,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,+CAA+C,QAAQ;AAAA,MACvD,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW;AAAA,EAAK;AAAA,EACd,YAAY,IAAI,GAAK;AAAA;AAAA,EACrB;AAAA,EACA,OAAO,MAA2B;AAChC,QAAI;AACF,YAAM,aAA6B,MAAM,EAAE,IAAI,KAAK;AACpD,YAAM,YAAY,EAAE,IAAI,WAAW;AACnC,YAAM,eAAe,EAAE,IAAI,cAAc;AACzC,YAAM,oBAAoB,IAAI,kBAAkB,WAAW,YAAY;AAGvE,YAAM,kBAAkB,cAAc,WAAW,QAAQ;AAGzD,YAAM,SAAS,MAAM,OAAO,EAAE,IAAI,OAAO,kBAAkB,KAAK,SAAS;AAGzE,YAAM,YAAY,MAAM,kBAAkB,gBAAgB;AAAA,QACxD,YAAY,WAAW;AAAA,QACvB,aAAa,WAAW;AAAA,QACxB,YAAY,CAAC;AAAA;AAAA,QACb,WAAW,WAAW,UAAU,aAAa;AAAA,QAC7C,eAAe;AAAA,QACf,iBAAiB;AAAA;AAAA,MACnB,CAAC;AAID,YAAM,SAAqB;AAAA,QACzB;AAAA,QACA,UAAU,WAAW;AAAA,QACrB,QAAQ,CAAC;AAAA,QACT,gBAAgB;AAAA,QAChB,iBAAiB,CAAC;AAAA,QAClB,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACtC;AAEA,YAAM,WAAoC;AAAA,QACxC,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,WAAW,IAAI,uBAAuB,OAAO,MAA2B;AACtE,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AAEzC,MAAI;AACF,sBAAkB,aAAa,SAAS;AAExC,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,eAAe,EAAE,IAAI,cAAc;AACzC,UAAM,oBAAoB,IAAI,kBAAkB,WAAW,YAAY;AAEvE,UAAM,SAAS,MAAM,kBAAkB,cAAc,SAAS;AAE9D,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS,sBAAsB,SAAS;AAAA,MACxC,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,0CAA0C,SAAS;AAAA,MACnD,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW,IAAI,oBAAoB,OAAO,MAA2B;AACnE,QAAM,WAAW,EAAE,IAAI,MAAM,UAAU;AAEvC,MAAI;AACF,sBAAkB,eAAe,UAAU,EAAE;AAE7C,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,UAAM,gBAAgB,MAAM,UAAU,aAAa,MAAM,EAAE,YAAY,SAAS,CAAC;AAGjF,UAAM,iBAAiB,MAAM,UAAU,aAAa,WAAW,UAAU,EAAE;AAE3E,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA,gBAAgB,eAAe;AAAA,QAC/B,cAAc,eAAe,CAAC,GAAG,aAAa;AAAA,MAChD;AAAA,MACA,SAAS,kBAAkB,QAAQ;AAAA,MACnC,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,gDAAgD,QAAQ;AAAA,MACxD,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,eAAe,OAAO,IAA6B;AACjD,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,EAAE;AAC9B,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,SAAO,UAAU,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACpE;AANe;;;AC9Pf,IAAM,aAAa,IAAIC,MAAiB;AAGxC,WAAW,IAAI,aAAa,OAAO,MAAM;AACvC,QAAM,OAAO,SAAS,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG;AAChD,QAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AAEnD,MAAI;AAEF,UAAM,WAA8B;AAAA,MAClC,SAAS;AAAA,MACT,MAAM,CAAC;AAAA,MACP,YAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW,IAAI,iBAAiB,OAAO,MAAM;AAC3C,QAAM,KAAK,EAAE,IAAI,MAAM,IAAI;AAE3B,MAAI;AAEF,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS,gBAAgB,EAAE;AAAA,MAC3B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR,oCAAoC,EAAE;AAAA,MACtC,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,WAAW;AAAA,EAAK;AAAA,EACd,YAAY,IAAI,GAAK;AAAA;AAAA,EACrB,OAAO,MAAM;AACX,UAAM,KAAK,EAAE,IAAI,MAAM,IAAI;AAE3B,QAAI;AAEF,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,SAAS,kCAAkC,EAAE;AAAA,QAC7C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,MACnC;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,4CAA4C,EAAE;AAAA,QAC9C,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;ACtFO,IAAK,wBAAL,kBAAKC,2BAAL;AACL,EAAAA,uBAAA,eAAY;AACZ,EAAAA,uBAAA,iBAAc;AACd,EAAAA,uBAAA,mBAAgB;AAChB,EAAAA,uBAAA,UAAO;AACP,EAAAA,uBAAA,WAAQ;AALE,SAAAA;AAAA,GAAA;AAoBL,IAAM,uBAAN,MAA2B;AAAA,EA5BlC,OA4BkC;AAAA;AAAA;AAAA;AAAA,EAEhC,OAAe,oBAA6D;AAAA,IAC1E,CAAC,2BAA+B,GAAG;AAAA,MACjC;AAAA,IACF;AAAA,IACA,CAAC,+BAAiC,GAAG;AAAA,MACnC;AAAA,IACF;AAAA,IACA,CAAC,mCAAmC,GAAG;AAAA,MACrC;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,IACF;AAAA,IACA,CAAC,iBAA0B,GAAG;AAAA,MAC5B;AAAA,IACF;AAAA,IACA,CAAC,mBAA2B,GAAG;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,aACZ,SACA,YACqB;AACrB,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,QACL,SAAS;AAAA,QACT,oBAAoB,CAAC;AAAA,QACrB,UAAU;AAAA,MACZ;AAAA,IACF;AAEA,UAAM,oBAAoB,cAAc,OAAO,OAAO,qBAAqB;AAC3E,UAAM,qBAA8C,CAAC;AAGrD,eAAW,YAAY,mBAAmB;AACxC,YAAM,WAAW,KAAK,kBAAkB,QAAQ,KAAK,CAAC;AAEtD,iBAAW,WAAW,UAAU;AAC9B,YAAI,QAAQ,KAAK,OAAO,GAAG;AACzB,6BAAmB,KAAK,QAAQ;AAChC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI,WAAsC;AAC1C,QAAI,mBAAmB,SAAS,+BAAiC,KAC7D,mBAAmB,SAAS,mBAA2B,GAAG;AAC5D,iBAAW;AAAA,IACb,WAAW,mBAAmB,SAAS,KAC7B,mBAAmB,SAAS,mCAAmC,GAAG;AAC1E,iBAAW;AAAA,IACb;AAEA,WAAO;AAAA,MACL,SAAS,mBAAmB,WAAW;AAAA,MACvC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,cACZ,SACA,YACqB;AACrB,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,QACL,SAAS;AAAA,QACT,oBAAoB,CAAC;AAAA,QACrB,iBAAiB;AAAA,QACjB,UAAU;AAAA,MACZ;AAAA,IACF;AAEA,UAAM,qBAAqB,cAAc,OAAO,OAAO,qBAAqB;AAC5E,UAAM,qBAA8C,CAAC;AACrD,QAAI,kBAAkB;AAGtB,eAAW,YAAY,oBAAoB;AACzC,YAAM,WAAW,KAAK,kBAAkB,QAAQ,KAAK,CAAC;AAEtD,iBAAW,WAAW,UAAU;AAC9B,YAAI,QAAQ,KAAK,OAAO,GAAG;AACzB,6BAAmB,KAAK,QAAQ;AAChC,4BAAkB,gBAAgB,QAAQ,SAAS,KAAK;AAAA,QAC1D;AAAA,MACF;AAAA,IACF;AAGA,QAAI,WAAsC;AAC1C,QAAI,mBAAmB,SAAS,+BAAiC,KAC7D,mBAAmB,SAAS,mBAA2B,GAAG;AAC5D,iBAAW;AAAA,IACb,WAAW,mBAAmB,SAAS,KAC7B,mBAAmB,SAAS,mCAAmC,GAAG;AAC1E,iBAAW;AAAA,IACb;AAEA,WAAO;AAAA,MACL,SAAS,mBAAmB,WAAW;AAAA,MACvC;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,OAAc,gBACZ,SACA,mBAA4C;AAAA,IAC1C;AAAA,IACA;AAAA,EACF,GACA,iBAA0C;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,EACF,GACqB;AAErB,UAAM,eAAe,KAAK,aAAa,SAAS,gBAAgB;AAChE,QAAI,CAAC,aAAa,SAAS;AACzB,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,UACE,YAAY,aAAa;AAAA,UACzB,UAAU,aAAa;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAGA,UAAM,aAAa,KAAK,aAAa,SAAS,cAAc;AAG5D,QAAI,CAAC,WAAW,SAAS;AACvB,YAAM,iBAAiB,KAAK,cAAc,SAAS,cAAc;AACjE,aAAO;AAAA,QACL,GAAG;AAAA,QACH,oBAAoB;AAAA,UAClB,GAAG,aAAa;AAAA,UAChB,GAAG,eAAe;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAGA,WAAO;AAAA,MACL,SAAS;AAAA,MACT,oBAAoB,CAAC;AAAA,MACrB,iBAAiB;AAAA,MACjB,UAAU;AAAA,IACZ;AAAA,EACF;AACF;;;ACpMA,IAAM,iBAAiB,IAAIC,MAAiB;AAG5C,eAAe;AAAA,EAAK;AAAA,EAClB,YAAY,GAAG,GAAK;AAAA;AAAA,EACpB;AAAA;AAAA,EACA,OAAO,MAA2B;AAChC,QAAI;AACF,YAAM,eAAe,MAAM,EAAE,IAAI,KAAK;AACtC,YAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,UAAI,aAAa,WAAW;AAC1B,cAAM,UAAU,MAAM,UAAU,aAAa,SAAS,aAAa,SAAS;AAC5E,YAAI,CAAC,SAAS;AACZ,gBAAM,IAAI;AAAA,YACR,eAAe,aAAa,SAAS;AAAA,YACrC,YAAY;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGA,UAAI,kBAAkB,aAAa;AACnC,UAAI,eAAe;AAEnB,UAAI,aAAa,SAAS;AAExB,uBAAe,qBAAqB;AAAA,UAClC,aAAa;AAAA,UACb,qDAA+D;AAAA;AAAA,UAC/D,+CAA4D;AAAA;AAAA,QAC9D;AAGA,0BAAkB,aAAa;AAAA,MACjC;AAGA,YAAM,aAAa,MAAM,UAAU,aAAa,OAAO;AAAA,QACrD,WAAW,aAAa;AAAA,QACxB,cAAc,aAAa;AAAA,QAC3B,SAAS;AAAA,QACT,QAAQ,aAAa,WAAW,aAAa,aAAa,SAAS,IAAI;AAAA,MACzE,CAAC;AAGD,YAAM,UAAU,gBAAgB,OAAO;AAAA,QACrC,WAAW;AAAA,QACX,WAAW;AAAA,UACT,cAAc,aAAa;AAAA,UAC3B,YAAY,CAAC,CAAC,aAAa;AAAA,UAC3B,aAAa,gBAAgB,CAAC,aAAa;AAAA,UAC3C,WAAW,aAAa;AAAA,QAC1B;AAAA,QACA,WAAW,aAAa;AAAA,QACxB,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,QAC/C,WAAW,EAAE,IAAI,OAAO,YAAY;AAAA,MACtC,CAAC;AAED,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,UACJ;AAAA,UACA,QAAQ;AAAA,UACR,iBAAiB,gBAAgB,CAAC,aAAa;AAAA,QACjD;AAAA,QACA,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,eAAe,IAAI,UAAU,OAAO,MAA2B;AAC7D,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,UAAM,QAAQ,EAAE,IAAI,MAAM,OAAO;AAEjC,QAAI;AACJ,QAAI,SAAS,UAAU,OAAO;AAE5B,YAAM,UAAU,oBAAI,KAAK;AACzB,YAAM,YAAY,oBAAI,KAAK;AAE3B,UAAI,UAAU,MAAM;AAClB,kBAAU,QAAQ,UAAU,QAAQ,IAAI,CAAC;AAAA,MAC3C,WAAW,UAAU,OAAO;AAC1B,kBAAU,QAAQ,UAAU,QAAQ,IAAI,EAAE;AAAA,MAC5C,WAAW,UAAU,OAAO;AAC1B,kBAAU,QAAQ,UAAU,QAAQ,IAAI,EAAE;AAAA,MAC5C;AAEA,cAAQ,MAAM,UAAU,aAAa;AAAA,QACnC,UAAU,YAAY;AAAA,QACtB,QAAQ,YAAY;AAAA,MACtB;AAAA,IACF,OAAO;AAEL,cAAQ,MAAM,UAAU,aAAa,SAAS;AAAA,IAChD;AAEA,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,GAAG;AAAA,QACH,WAAW,SAAS;AAAA,QACpB,WAAW,MAAM,gBAAgB,IAC7B,KAAK,MAAO,MAAM,gBAAgB,MAAM,gBAAiB,GAAG,IAC5D;AAAA,MACN;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,eAAe,IAAI,aAAa,OAAO,MAA2B;AAChE,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAEnC,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AACnD,UAAM,OAAO,SAAS,EAAE,IAAI,MAAM,MAAM,KAAK,GAAG;AAGhD,sBAAkB,mBAAmB,EAAE,MAAM,OAAO,KAAK,IAAI,OAAO,EAAE,EAAE,CAAC;AAGzE,UAAM,WAAW,MAAM,UAAU,aAAa,YAAY,KAAK;AAG/D,UAAM,QAAQ,MAAM,UAAU,aAAa,SAAS;AAEpD,UAAM,WAA8B;AAAA,MAClC,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA,OAAO,MAAM;AAAA,QACb,YAAY,KAAK,KAAK,MAAM,eAAe,KAAK;AAAA,QAChD,SAAS,OAAO,QAAQ,MAAM;AAAA,QAC9B,SAAS,OAAO;AAAA,MAClB;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,eAAe,IAAI,uBAAuB,OAAO,MAA2B;AAC1E,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,sBAAkB,aAAa,SAAS;AAGxC,UAAM,WAAW,MAAM,UAAU,aAAa,gBAAgB,SAAS;AAEvE,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS,wBAAwB,SAAS;AAAA,MAC1C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AC/ND,IAAM,kBAAkB,IAAIC,MAAiB;AAG7C,gBAAgB;AAAA,EAAK;AAAA,EACnB,YAAY,KAAK,GAAK;AAAA;AAAA,EACtB;AAAA;AAAA,EACA,OAAO,MAA2B;AAChC,QAAI;AACF,YAAM,YAAY,MAAM,EAAE,IAAI,KAAK;AACnC,YAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,YAAM,UAAU,MAAM,UAAU,gBAAgB,OAAO;AAAA,QACrD,WAAW,UAAU;AAAA,QACrB,WAAW,UAAU;AAAA,QACrB,WAAW,UAAU;AAAA,QACrB,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,QAC/C,WAAW,EAAE,IAAI,OAAO,YAAY;AAAA,MACtC,CAAC;AAED,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,UACJ;AAAA,UACA,QAAQ;AAAA,QACV;AAAA,QACA,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,gBAAgB;AAAA,EAAK;AAAA,EACnB,YAAY,IAAI,GAAK;AAAA;AAAA,EACrB,OAAO,MAA2B;AAChC,QAAI;AACF,YAAM,EAAE,OAAO,IAAI,MAAM,EAAE,IAAI,KAAK;AACpC,YAAM,YAAY,EAAE,IAAI,WAAW;AAEnC,UAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,WAAW,GAAG;AACjD,cAAM,IAAI;AAAA,UACR;AAAA,UACA,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAGA,aAAO,QAAQ,WAAS;AACtB,YAAI,CAAC,MAAM,WAAW;AACpB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA,YAAY;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAGD,YAAM,YAAY,EAAE,IAAI,OAAO,kBAAkB,KAAK;AACtD,YAAM,YAAY,EAAE,IAAI,OAAO,YAAY,KAAK;AAEhD,YAAM,iBAAiB,OAAO,IAAI,CAAC,WAAgB;AAAA,QACjD,WAAW,MAAM;AAAA,QACjB,WAAW,MAAM;AAAA,QACjB,WAAW,MAAM;AAAA,QACjB;AAAA,QACA;AAAA,MACF,EAAE;AAGF,YAAM,QAAQ,MAAM,UAAU,gBAAgB,YAAY,cAAc;AAExE,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,UACJ,YAAY;AAAA,UACZ,QAAQ;AAAA,QACV;AAAA,QACA,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AACA,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,gBAAgB,IAAI,UAAU,OAAO,MAA2B;AAC9D,QAAM,YAAY,EAAE,IAAI,MAAM,OAAO,KAAK;AAE1C,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,QAAI;AACJ,QAAI;AAEJ,QAAI,cAAc,OAAO;AACvB,iBAAU,oBAAI,KAAK,GAAE,YAAY;AACjC,YAAM,QAAQ,oBAAI,KAAK;AAEvB,UAAI,cAAc,MAAM;AACtB,cAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AAAA,MACnC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,OAAO;AACL,cAAM,IAAI;AAAA,UACR,uBAAuB,SAAS;AAAA,UAChC,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,kBAAY,MAAM,YAAY;AAAA,IAChC;AAGA,UAAM,WAAW,MAAM,UAAU,gBAAgB,YAAY,WAAW,OAAO;AAG/E,UAAM,cAAc,cAAc,OAAO,IAAI,cAAc,QAAQ,KAAK;AACxE,UAAM,aAAa,MAAM,UAAU,gBAAgB,cAAc,WAAW;AAE5E,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA,cAAa,oBAAI,KAAK,GAAE,YAAY;AAAA,MACtC;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,gBAAgB,IAAI,qBAAqB,OAAO,MAA2B;AACzE,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,QAAM,YAAY,EAAE,IAAI,MAAM,OAAO,KAAK;AAE1C,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,sBAAkB,eAAe,WAAW,GAAG;AAG/C,QAAI;AACJ,QAAI;AAEJ,QAAI,cAAc,OAAO;AACvB,iBAAU,oBAAI,KAAK,GAAE,YAAY;AACjC,YAAM,QAAQ,oBAAI,KAAK;AAEvB,UAAI,cAAc,MAAM;AACtB,cAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AAAA,MACnC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,OAAO;AACL,cAAM,IAAI;AAAA,UACR,uBAAuB,SAAS;AAAA,UAChC,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,kBAAY,MAAM,YAAY;AAAA,IAChC;AAGA,UAAM,cAAc,cAAc,OAAO,IAAI,cAAc,QAAQ,KAAK;AACxE,UAAM,aAAa,MAAM,UAAU,gBAAgB,cAAc,aAAa,SAAS;AAGvF,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AACnD,UAAM,eAAe,MAAM,UAAU,gBAAgB;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ;AAAA,QACA,aAAa,WAAW,OAAO,CAAC,KAAa,QAAa,MAAM,IAAI,OAAO,CAAC;AAAA,QAC5E;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,SAAS,8BAA8B,SAAS;AAAA,MAChD,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,iDAAiD,SAAS;AAAA,MAC1D,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,gBAAgB,IAAI,wBAAwB,OAAO,MAA2B;AAC5E,QAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AAEzC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,sBAAkB,aAAa,SAAS;AAGxC,UAAM,SAAS,MAAM,UAAU,gBAAgB,gBAAgB,SAAS;AAGxE,UAAM,UAAU,MAAM,UAAU,aAAa,SAAS,SAAS;AAE/D,QAAI,CAAC,OAAO,QAAQ;AAClB,YAAM,IAAI;AAAA,QACR,mCAAmC,SAAS;AAAA,QAC5C,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAEA,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ;AAAA,QACA,aAAa;AAAA,QACb;AAAA,QACA,YAAY,OAAO;AAAA,QACnB,gBAAgB,OAAO,CAAC,EAAE;AAAA,QAC1B,eAAe,OAAO,OAAO,SAAS,CAAC,EAAE;AAAA,MAC3C;AAAA,MACA,SAAS,4BAA4B,SAAS;AAAA,MAC9C,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR,gDAAgD,SAAS;AAAA,MACzD,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,gBAAgB,IAAI,kBAAkB,OAAO,MAA2B;AACtE,QAAM,YAAY,EAAE,IAAI,MAAM,OAAO,KAAK;AAE1C,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,QAAI;AACJ,QAAI;AAEJ,QAAI,cAAc,OAAO;AACvB,iBAAU,oBAAI,KAAK,GAAE,YAAY;AACjC,YAAM,QAAQ,oBAAI,KAAK;AAEvB,UAAI,cAAc,MAAM;AACtB,cAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AAAA,MACnC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,WAAW,cAAc,OAAO;AAC9B,cAAM,QAAQ,MAAM,QAAQ,IAAI,EAAE;AAAA,MACpC,OAAO;AACL,cAAM,IAAI;AAAA,UACR,uBAAuB,SAAS;AAAA,UAChC,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,kBAAY,MAAM,YAAY;AAAA,IAChC;AAGA,UAAM,eAAe,MAAM,UAAU,gBAAgB;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAGA,UAAM,aAAa,aAAa;AAAA,MAAO,CAAC,UACtC,MAAM,UAAU,WAAW,eAAe;AAAA,IAC5C;AAGA,UAAM,oBAAoB,WAAW,IAAI,OAAO,UAAe;AAC7D,YAAM,WAAW,MAAM,UAAU,QAAQ,iBAAiB,EAAE;AAC5D,UAAI;AACF,eAAO,MAAM,UAAU,UAAU,SAAS,QAAQ;AAAA,MACpD,SAAS,GAAG;AACV,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAED,UAAM,aAAa,MAAM,QAAQ,IAAI,iBAAiB,GACnD,OAAO,UAAQ,SAAS,IAAI;AAE/B,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,cAAc,WAAW,IAAI,CAAC,OAAY,WAAmB;AAAA,UAC3D,UAAU,MAAM,UAAU,QAAQ,iBAAiB,EAAE;AAAA,UACrD,OAAO,MAAM;AAAA,UACb,YAAY,MAAM;AAAA,UAClB,MAAM,UAAU,KAAK,GAAG,QAAQ;AAAA,UAChC,aAAa,UAAU,KAAK,GAAG,eAAe;AAAA,QAChD,EAAE;AAAA,QACF;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,iBAAiB,aAAa;AAChC,YAAM;AAAA,IACR;AACA,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;ACrYD,IAAM,eAAe,IAAIC,MAAiB;AAG1C,aAAa,IAAI,WAAW,OAAO,MAAM;AACvC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,MAAM,UAAU,YAAY;AAEhD,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,QAAQ,YAAY;AAAA,QACpB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,aAAa,EAAE,MAAM,aAAa;AAAA,QAClC,SAAS;AAAA,QACT,UAAU;AAAA,UACR,UAAU,YAAY;AAAA,UACtB,OAAO;AAAA;AAAA,UACP,SAAS;AAAA;AAAA,QACX;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,UAAU,YAAY,WAAW,YAAY,MAAM,GAAG;AAAA,EACtE,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,aAAa,IAAI,oBAAoB,OAAO,MAAM;AAChD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,MAAM,UAAU,YAAY;AAEhD,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,UAAU,YAAY,WAAW,YAAY,MAAM,GAAG;AAAA,EACtE,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,aAAa;AAAA,EAAI;AAAA,EACf,YAAY,IAAI,GAAK;AAAA;AAAA,EACrB,OAAO,MAAM;AACX,QAAI;AACF,YAAM,YAAY,EAAE,IAAI,WAAW;AACnC,YAAM,QAAQ,MAAM,UAAU,cAAc;AAE5C,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,aAAa,IAAI,eAAe,OAAO,MAAM;AAC3C,MAAI;AAKF,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,mBAAmB,CAAC;AAAA,MACtB;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,aAAa,IAAI,iBAAiB,OAAO,MAAM;AAC7C,MAAI;AAEF,QAAI,CAAC,EAAE,KAAK;AACV,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,MACT,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,UAAU;AAChB,UAAM,YAAY,EAAE,WAAW,KAAK,IAAI,EAAE;AAE1C,UAAM,EAAE,IAAI,IAAI,EAAE,IAAI,SAAS,KAAK,UAAU,SAAS,GAAG,EAAE,eAAe,GAAG,CAAC;AAC/E,UAAM,YAAY,MAAM,EAAE,IAAI,IAAI,EAAE,IAAI,OAAO;AAC/C,UAAM,EAAE,IAAI,IAAI,EAAE,OAAO,OAAO;AAEhC,UAAM,YAAY,cAAc;AAEhC,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,QAAQ,YAAY,YAAY;AAAA,QAChC,SAAS;AAAA;AAAA,QACT,SAAS;AAAA,UACP,YAAY;AAAA,UACZ,WAAW;AAAA,QACb;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,UAAU,YAAY,MAAM,GAAG;AAAA,EAC/C,SAAS,OAAO;AACd,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,UAAU,GAAG;AAAA,EAC7B;AACF,CAAC;AAGD,aAAa,IAAI,WAAW,OAAO,MAAM;AACvC,MAAI;AACF,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,aAAa,EAAE,MAAM,aAAa;AAAA,QAClC,SAAS;AAAA,QACT,UAAU;AAAA,UACR,WAAW;AAAA,UACX,UAAU;AAAA,UACV,SAAS;AAAA,UACT,cAAc;AAAA,QAChB;AAAA,QACA,QAAQ;AAAA,UACN,gBAAgB;AAAA,UAChB,mBAAmB;AAAA,UACnB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAGD,aAAa;AAAA,EAAK;AAAA,EAChB,YAAY,GAAG,IAAO;AAAA;AAAA,EACtB,OAAO,MAAM;AACX,QAAI;AACF,YAAM,YAAY,EAAE,IAAI,WAAW;AACnC,YAAM,SAAS,MAAM,UAAU,mBAAmB;AAElD,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,aAAa;AAAA,EAAK;AAAA,EAChB,YAAY,GAAG,IAAO;AAAA;AAAA,EACtB,OAAO,MAAM;AACX,QAAI;AACF,YAAM,YAAY,EAAE,IAAI,WAAW;AACnC,YAAM,SAAS,MAAM,UAAU,aAAa;AAE5C,YAAM,WAAwB;AAAA,QAC5B,SAAS;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B;AAEA,aAAO,EAAE,KAAK,QAAQ;AAAA,IACxB,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAGA,aAAa,IAAI,SAAS,OAAO,MAAM;AACrC,MAAI;AACF,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,aAAa;AAAA,QACb,QAAQ;AAAA;AAAA,QACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,aAAa,EAAE,MAAM,aAAa;AAAA,QAClC,SAAS;AAAA,QACT,WAAW;AAAA,QACX,UAAU;AAAA,QACV,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B;AAEA,WAAO,EAAE,KAAK,QAAQ;AAAA,EACxB,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AC/RM,IAAe,YAAf,MAAyB;AAAA,EAThC,OASgC;AAAA;AAAA;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EAEV,YAAY,KAAU,WAAmB;AACvC,QAAI,CAAC,IAAI,IAAI;AACX,YAAM,IAAI,YAAY,qCAAqC,YAAY,gBAAgB,GAAG;AAAA,IAC5F;AAEA,SAAK,KAAK,IAAI;AACd,SAAK,KAAK,IAAI,MAAM;AACpB,SAAK,YAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,IAAc,WAAuB;AACnC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,aACd,OACA,SAAgB,CAAC,GACH;AACd,QAAI;AACF,YAAM,OAAO,KAAK,GAAG,QAAQ,KAAK;AAClC,YAAM,SAAS,OAAO,SAAS,IAC3B,MAAM,KAAK,KAAK,GAAG,MAAM,EAAE,IAAI,IAC/B,MAAM,KAAK,IAAI;AAEnB,UAAI,CAAC,OAAO,SAAS;AACnB,cAAM,IAAI;AAAA,UACR,0BAA0B,OAAO,KAAK;AAAA,UACtC,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,aAAO,OAAO;AAAA,IAChB,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AAEA,YAAM,IAAI;AAAA,QACR,8BAA8B,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QACtF,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,kBACd,OACA,SAAgB,CAAC,GACE;AACnB,QAAI;AACF,YAAM,OAAO,KAAK,GAAG,QAAQ,KAAK;AAClC,YAAM,SAAS,OAAO,SAAS,IAC3B,MAAM,KAAK,KAAK,GAAG,MAAM,EAAE,MAAM,IACjC,MAAM,KAAK,MAAM;AAErB,aAAO;AAAA,IACT,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,0BAA0B,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QAClF,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,WACd,OACA,SAAgB,CAAC,GACE;AACnB,QAAI;AACF,YAAM,OAAO,KAAK,GAAG,QAAQ,KAAK;AAClC,YAAM,SAAS,OAAO,SAAS,IAC3B,MAAM,KAAK,KAAK,GAAG,MAAM,EAAE,IAAI,IAC/B,MAAM,KAAK,IAAI;AAEnB,UAAI,CAAC,OAAO,SAAS;AACnB,cAAM,IAAI;AAAA,UACR,8BAA8B,OAAO,KAAK;AAAA,UAC1C,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AAEA,YAAM,IAAI;AAAA,QACR,8BAA8B,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QACtF,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,SACd,KACA,MACA,MAAc,MACC;AACf,QAAI;AACF,YAAM,KAAK,GAAG,IAAI,KAAK,KAAK,UAAU,IAAI,GAAG;AAAA,QAC3C,eAAe;AAAA,MACjB,CAAC;AAAA,IACH,SAAS,OAAO;AAEd,cAAQ,KAAK,2BAA2B,KAAK;AAAA,IAC/C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,SAAkB,KAAgC;AAChE,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GAAG,IAAI,GAAG;AACpC,aAAO,SAAS,KAAK,MAAM,MAAM,IAAI;AAAA,IACvC,SAAS,OAAO;AACd,cAAQ,KAAK,2BAA2B,KAAK;AAC7C,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAgB,YAAY,KAA4B;AACtD,QAAI;AACF,YAAM,KAAK,GAAG,OAAO,GAAG;AAAA,IAC1B,SAAS,OAAO;AACd,cAAQ,KAAK,0BAA0B,KAAK;AAAA,IAC9C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKU,aAAqB;AAE7B,WAAQ,WAAmB,QAAQ,aAC9B,WAAmB,OAAO,WAAW,IACtC,GAAG,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA,EAKU,gBAAgB,MAAqB;AAC7C,YAAQ,QAAQ,oBAAI,KAAK,GAAG,YAAY;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA,EAKU,iBAAiB,MAA2B,QAAwB;AAC5E,UAAM,UAAU,OAAO,OAAO,WAAS,CAAC,KAAK,KAAK,CAAC;AAEnD,QAAI,QAAQ,SAAS,GAAG;AACtB,YAAM,IAAI;AAAA,QACR,4BAA4B,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC9C,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKU,YAAY,SAAiB,OAAiC,kBAAkB,SAAiB,KAAkB;AAC3H,WAAO,IAAI,YAAY,SAAS,YAAY,IAAI,GAAG,MAAM;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,MAAM,cAAsB,IAAI,SAAgB,CAAC,GAAoB;AAChF,UAAM,QAAQ,cAAc,UAAU,WAAW,MAAM;AACvD,UAAM,SAAS,MAAM,KAAK,kBAAqC,iCAAiC,KAAK,SAAS,GAAG,KAAK,IAAI,MAAM;AAChI,WAAO,QAAQ,SAAS;AAAA,EAC1B;AACF;;;AC7MO,IAAM,sBAAN,cAAkC,UAAU;AAAA,EARnD,OAQmD;AAAA;AAAA;AAAA,EACjD,YAAY,KAAU;AACpB,UAAM,KAAK,kBAAkB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,sBAAiD;AACrD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,KAAK,sBAAsB,KAAK,CAAC;AAAA,IAC9D,SAAS,OAAO;AACd,cAAQ,MAAM,iEAAe,KAAK;AAClC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,OAA0C;AAChE,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,KAAK,KAAK,EACV,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,KAAK,sBAAsB,KAAK,CAAC;AAAA,IAC9D,SAAS,OAAO;AACd,cAAQ,MAAM,eAAK,KAAK,qDAAa,KAAK;AAC1C,YAAM,IAAI,MAAM,eAAK,KAAK,kDAAU;AAAA,IACtC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAAc,IAA4C;AAC9D,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,+DAA+D,EACvE,KAAK,EAAE,EACP,MAAM;AAET,aAAO,SAAS,KAAK,uBAAuB,MAAM,IAAI;AAAA,IACxD,SAAS,OAAO;AACd,cAAQ,MAAM,uCAAS,EAAE,iBAAO,KAAK;AACrC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,IAAY,WAAmB,QAA+B;AACpF,QAAI;AACF,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,KAAK,WAAW,QAAQ,EAAE,EAC1B,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,uCAAS,EAAE,yCAAW,KAAK;AACzC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAKH;AACD,QAAI;AAEF,YAAM,cAAc,MAAM,KAAK,GAC5B,QAAQ,4EAA4E,EACpF,MAAM;AAET,YAAM,YAAY,MAAM,KAAK,GAC1B,QAAQ,gHAAgH,EACxH,MAAM;AAET,YAAM,eAAe,MAAM,KAAK,GAC7B,QAAQ,iEAAiE,EACzE,IAAI;AAEP,UAAI,CAAC,eAAe,CAAC,WAAW;AAC9B,eAAO;AAAA,UACL,cAAc;AAAA,UACd,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,cAAc,CAAC;AAAA,QACjB;AAAA,MACF;AAEA,aAAO;AAAA,QACL,cAAe,YAAoB,eAAe;AAAA,QAClD,YAAa,UAAkB,aAAa,KAAe;AAAA,QAC3D,eAAgB,UAAkB,gBAAgB,KAAe;AAAA,QACjE,cAAc,aAAa,SAAS,IAAI,CAAC,QAAa,IAAI,KAAe,KAAK,CAAC;AAAA,MACjF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6EAAiB,KAAK;AACpC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,uBAAuB,KAA0B;AACvD,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,MAAM,IAAI;AAAA,MACV,aAAa,IAAI;AAAA,MACjB,MAAM,IAAI;AAAA,MACV,OAAQ,IAAY,OAAO;AAAA,MAC3B,WAAW,IAAI;AAAA,MACf,QAAQ,IAAI;AAAA,MACZ,UAAU,QAAQ,IAAI,SAAS;AAAA,MAC/B,OAAO,IAAI;AAAA,MACX,UAAU,KAAK,MAAM,IAAI,aAAuB;AAAA,MAChD,eAAe,IAAI;AAAA,MACnB,WAAW,IAAI;AAAA,MACf,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,MAC5C,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AC5IO,IAAM,sBAAN,cAAkC,UAAU;AAAA,EAfnD,OAemD;AAAA;AAAA;AAAA,EACjD,YAAY,KAAU;AACpB,UAAM,KAAK,iBAAiB;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,sBAAoD;AACxD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,IAAI;AAEP,YAAM,UAA+B,CAAC;AAEtC,aAAO,SAAS,QAAQ,CAAC,QAAQ;AAC/B,YAAI;AACF,kBAAS,IAAY,KAAK,CAAW,IAAI,KAAK,MAAO,IAAY,OAAO,CAAW;AAAA,QACrF,SAAS,OAAO;AACd,kBAAQ,KAAK,2BAAQ,IAAY,KAAK,CAAC,iBAAO,KAAK;AACnD,kBAAS,IAAY,KAAK,CAAW,IAAK,IAAY,OAAO;AAAA,QAC/D;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,KAA2B;AAC9C,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,mEAAmE,EAC3E,KAAK,GAAG,EACR,MAAM;AAET,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,MACT;AAEA,UAAI;AACF,eAAO,KAAK,MAAO,OAAe,OAAO,CAAW;AAAA,MACtD,SAAS,OAAO;AACd,gBAAQ,KAAK,2BAAO,GAAG,iBAAO,KAAK;AACnC,eAAQ,OAAe,OAAO;AAAA,MAChC;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,2BAAO,GAAG,iBAAO,KAAK;AACpC,YAAM,IAAI,MAAM,sCAAQ;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAAa,KAAa,OAAY,aAAqC;AAC/E,QAAI;AACF,YAAM,YAAY,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU,KAAK;AAE1E,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA,SAGR,EACA,KAAK,KAAK,WAAW,eAAe,EAAE,EACtC,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,2BAAO,GAAG,iBAAO,KAAK;AACpC,YAAM,IAAI,MAAM,sCAAQ;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,SAA6C;AACpE,QAAI;AACF,YAAM,OAAO,KAAK,GAAG,QAAQ;AAAA;AAAA;AAAA,OAG5B;AAED,YAAM,QAAQ,OAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM;AAC1D,cAAM,YAAY,OAAO,UAAU,WAAW,QAAQ,KAAK,UAAU,KAAK;AAC1E,eAAO,KAAK,KAAK,KAAK,SAAS;AAAA,MACjC,CAAC;AAED,YAAM,KAAK,GAAG,MAAM,KAAK;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,aAAa,KAA4B;AAC7C,QAAI;AACF,YAAM,KAAK,GACR,QAAQ,2CAA2C,EACnD,KAAK,GAAG,EACR,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,2BAAO,GAAG,iBAAO,KAAK;AACpC,YAAM,IAAI,MAAM,sCAAQ;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAA+C;AACnD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,KAAK,sBAAsB,KAAK,CAAC;AAAA,IAC9D,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,uBAAuB,KAA8B;AAC3D,WAAO;AAAA,MACL,KAAK,IAAI;AAAA,MACT,OAAO,IAAI;AAAA,MACX,aAAa,IAAI;AAAA,MACjB,UAAU,QAAQ,IAAI,SAAS;AAAA,MAC/B,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AC1HO,IAAM,aAAa;AAAA,EACxB,aAAa;AAAA,EACb,aAAa;AAAA,EACb,cAAc;AAAA,EACd,cAAc;AAChB;AAGO,IAAM,YAAY;AAAA,EACvB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,eAAe;AAAA,EACf,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,aAAa;AACf;;;AClDA,eAAe,WAAW,OAAgC;AACxD,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,KAAK;AACjC,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,SAAO,UAAU,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACpE;AANe;AAuCR,IAAM,sBAAN,cAAkC,UAAU;AAAA,EAhDnD,OAgDmD;AAAA;AAAA;AAAA,EACjD,YAAY,KAAU;AACpB,UAAM,KAAK,UAAU,gBAAgB;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,WAAsD;AACjE,SAAK,iBAAiB,WAAW,CAAC,WAAW,CAAC;AAE9C,UAAM,KAAK,KAAK,WAAW;AAC3B,UAAM,MAAM,KAAK,gBAAgB;AAGjC,UAAM,gBAAgB,UAAU,YAC5B,MAAM,WAAW,UAAU,SAAS,IACpC;AAEJ,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM9B,UAAM,SAAS;AAAA,MACb;AAAA,MACA,UAAU;AAAA,MACV,UAAU,YAAY,KAAK,UAAU,UAAU,SAAS,IAAI;AAAA,MAC5D,UAAU,aAAa;AAAA,MACvB;AAAA,MACA,UAAU,aAAa;AAAA,MACvB;AAAA,IACF;AAEA,UAAM,KAAK,WAAW,OAAO,MAAM;AAEnC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cACJ,WACA,SACA,QAAgB,IACO;AACvB,QAAI,cAAc;AAClB,UAAM,SAAgB,CAAC;AAEvB,QAAI,aAAa,SAAS;AACxB,oBAAc;AACd,aAAO,KAAK,WAAW,OAAO;AAAA,IAChC;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,yDAIuC,KAAK,SAAS,IAAI,WAAW;AAAA,aACzE,KAAK,SAAS;AAAA,QACnB,WAAW;AAAA;AAAA;AAAA;AAAA;AAMf,WAAO,KAAK,KAAK;AAEjB,UAAM,UAAU,MAAM,KAAK,aAAkB,OAAO,MAAM;AAE1D,WAAO,QAAQ,IAAI,UAAQ;AAAA,MACzB,WAAW,IAAI;AAAA,MACf,OAAO,IAAI;AAAA,MACX,YAAY,IAAI;AAAA,IAClB,EAAE;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,YACJ,WACA,SAC4B;AAC5B,UAAM,YAAY,aAAa,UAC3B,GAAG,SAAS,OAAO,OAAO,KAC1B;AAEJ,QAAI,cAAc;AAClB,UAAM,SAAgB,CAAC;AAEvB,QAAI,aAAa,SAAS;AACxB,oBAAc;AACd,aAAO,KAAK,WAAW,OAAO;AAAA,IAChC;AAGA,UAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA,aAIb,KAAK,SAAS;AAAA,QACnB,WAAW;AAAA;AAGf,UAAM,iBAAiB,MAAM,KAAK,kBAAuB,eAAe,MAAM;AAG9E,UAAM,YAAY,MAAM,KAAK,cAAc,WAAW,SAAS,CAAC;AAEhE,WAAO;AAAA,MACL,aAAa,gBAAgB,gBAAgB;AAAA,MAC7C,gBAAgB,gBAAgB,mBAAmB;AAAA,MACnD;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBACJ,WACA,QAAgB,KAChB,WACA,SAC2B;AAC3B,QAAI,cAAc;AAClB,UAAM,SAAgB,CAAC,SAAS;AAEhC,QAAI,aAAa,SAAS;AACxB,qBAAe;AACf,aAAO,KAAK,WAAW,OAAO;AAAA,IAChC;AAEA,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA,QAC5B,WAAW;AAAA;AAAA;AAAA;AAKf,WAAO,KAAK,KAAK;AAEjB,WAAO,KAAK,aAA6B,OAAO,MAAM;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAgB,WAA8C;AAClE,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,WAAO,KAAK,aAA6B,OAAO,CAAC,SAAS,CAAC;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cACJ,OAAe,IACf,WACiD;AACjD,QAAI,cAAc,wCAAwC,IAAI;AAC9D,UAAM,SAAgB,CAAC;AAEvB,QAAI,WAAW;AACb,qBAAe;AACf,aAAO,KAAK,SAAS;AAAA,IACvB;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIL,KAAK,SAAS;AAAA,QACnB,WAAW;AAAA;AAAA;AAAA;AAKf,UAAM,UAAU,MAAM,KAAK,aAAkB,OAAO,MAAM;AAE1D,WAAO,QAAQ,IAAI,UAAQ;AAAA,MACzB,MAAM,IAAI;AAAA,MACV,OAAO,IAAI;AAAA,IACb,EAAE;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,WAA8C;AACjE,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,WAAO,KAAK,aAA6B,OAAO,CAAC,SAAS,CAAC;AAAA,EAC7D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBAAoB,UAAkB,IAAqB;AAC/D,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,QAAQ,WAAW,QAAQ,IAAI,OAAO;AACjD,UAAM,kBAAkB,KAAK,gBAAgB,UAAU;AAEvD,UAAM,QAAQ,eAAe,KAAK,SAAS;AAC3C,UAAM,SAAS,MAAM,KAAK,WAAW,OAAO,CAAC,eAAe,CAAC;AAE7D,WAAQ,OAAe,WAAW;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,YAAY,QAAqD;AACrE,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;AAAA,IACT;AAEA,UAAM,MAAM,KAAK,gBAAgB;AACjC,UAAM,SAAmB,CAAC;AAC1B,UAAM,SAAgB,CAAC;AAEvB,eAAW,aAAa,QAAQ;AAC9B,YAAM,KAAK,KAAK,WAAW;AAC3B,YAAM,gBAAgB,UAAU,YAC5B,MAAM,WAAW,UAAU,SAAS,IACpC;AAEJ,aAAO,KAAK,uBAAuB;AACnC,aAAO;AAAA,QACL;AAAA,QACA,UAAU;AAAA,QACV,UAAU,YAAY,KAAK,UAAU,UAAU,SAAS,IAAI;AAAA,QAC5D,UAAU,aAAa;AAAA,QACvB;AAAA,QACA,UAAU,aAAa;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAEA,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA,iBAGjB,OAAO,KAAK,IAAI,CAAC;AAAA;AAG9B,UAAM,SAAS,MAAM,KAAK,WAAW,OAAO,MAAM;AAClD,WAAQ,OAAe,WAAW;AAAA,EACpC;AACF;;;AC5SA,IAAM,iBAAiB,IAAIC,MAAiB;AAG5C,eAAe,IAAI,WAAW,OAAO,MAAM;AACzC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,oBAAoB,UAAU,GAAG;AAEzD,UAAM,UAAU,MAAM,YAAY,oBAAoB;AAEtD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,qDAAa,KAAK;AAChC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,IAAI,YAAY,OAAO,MAAM;AAC1C,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,oBAAoB,UAAU,GAAG;AAEzD,UAAM,UAAU,MAAM,YAAY,oBAAoB;AAEtD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,IAAI,mBAAmB,OAAO,MAAM;AACjD,MAAI;AACF,UAAM,QAAQ,EAAE,IAAI,MAAM,OAAO;AACjC,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,oBAAoB,UAAU,GAAG;AAEzD,UAAM,UAAU,MAAM,YAAY,kBAAkB,KAAK;AAEzD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,eAAK,EAAE,IAAI,MAAM,OAAO,CAAC,qDAAa,KAAK;AACzD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,IAAI,UAAU,OAAO,MAAM;AACxC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,UAAM,YAAY,MAAM,UAAU,GAAG,QAAQ,gDAAgD,EAAE,MAAM;AACrG,YAAQ,IAAI,sBAAsB,SAAS;AAE3C,UAAM,cAAc,IAAI,oBAAoB,UAAU,GAAG;AAEzD,UAAM,QAAQ,MAAM,YAAY,gBAAgB;AAEhD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,KAAK,cAAc,OAAO,MAAM;AAC7C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,WAAW,WAAW,WAAW,SAAS,SAAS,IAAI;AAE/D,QAAI,CAAC,aAAa,CAAC,SAAS;AAC1B,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,MACnC,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,iBAAiB,IAAI,oBAAoB,UAAU,EAAE;AAG3D,UAAM,eAAe,OAAO;AAAA,MAC1B,WAAW,YAAY,SAAS;AAAA,MAChC,WAAW;AAAA,QACT,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACF;AAAA,MACA;AAAA,MACA,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,MACzC,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,IACjD,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,eAAe,IAAI,gBAAgB,OAAO,MAAM;AAC9C,MAAI;AACF,UAAM,MAAM,EAAE,IAAI,MAAM,KAAK;AAC7B,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,oBAAoB,UAAU,EAAE;AAExD,UAAM,SAAS,MAAM,YAAY,eAAe,GAAG;AAEnD,QAAI,CAAC,QAAQ;AACX,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,MACnC,GAAG,GAAG;AAAA,IACR;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,2BAAO,EAAE,IAAI,MAAM,KAAK,CAAC,iBAAO,KAAK;AACnD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW,KAAK;AAAA,IACnC,GAAG,GAAG;AAAA,EACR;AACF,CAAC;;;ACtKM,IAAM,mBAAN,cAA+B,UAAU;AAAA,EAlChD,OAkCgD;AAAA;AAAA;AAAA,EAC9C,YAAY,KAAU;AACpB,UAAM,KAAK,cAAc;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,OAAe,WAAmB,SAAS,QAAgB,IAA6B;AACnG,QAAI;AACF,cAAQ,IAAI,+CAAY,EAAE,OAAO,UAAU,MAAM,CAAC;AAGlD,YAAM,cAA8B;AAAA,QAClC;AAAA,UACE,IAAI;AAAA,UACJ,aAAa;AAAA,UACb,WAAW;AAAA,UACX,OAAO;AAAA,UACP,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,aAAa;AAAA,QACf;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,aAAa;AAAA,UACb,WAAW;AAAA,UACX,OAAO;AAAA,UACP,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,aAAa;AAAA,QACf;AAAA,MACF;AAEA,cAAQ,IAAI,qDAAa,WAAW;AACpC,aAAO;AAAA,IAWT,SAAS,OAAO;AACd,cAAQ,MAAM,6BAAS,KAAK;AAC5B,YAAM,IAAI,MAAM,0BAAM;AAAA,IACxB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,qBAAqB,OAAe,WAAmB,SAAS,QAAgB,IAAiC;AACrH,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUR,EACA;AAAA,QACC;AAAA,QACA,IAAI,KAAK;AAAA,QACT,IAAI,KAAK;AAAA,QACT;AAAA,MACF,EACC,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,CAAC,KAAK,WAAW;AAAA,QAC1C,IAAI,cAAc,KAAK;AAAA,QACvB,MAAM,IAAI,OAAO;AAAA,QACjB,MAAM,IAAI,cAAc;AAAA,QACxB,WAAW,IAAI,iBAAiB;AAAA,MAClC,EAAE,KAAK,CAAC;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,WAAmB,SAAS,QAAgB,IAAuB;AAC1F,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMR,EACA,KAAK,UAAU,KAAK,EACpB,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,CAAC,QAAa,IAAI,SAAS,CAAW,KAAK,CAAC;AAAA,IACzE,SAAS,OAAO;AACd,cAAQ,MAAM,2DAAc,KAAK;AACjC,YAAM,IAAI,MAAM,wDAAW;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,qBAAqB,IAA2B;AACpD,QAAI;AACF,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,KAAK,EAAE,EACP,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAAA,IAClC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBAAoB,SAAiB,WAAmB,SAAwB;AACpF,QAAI;AACF,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMR,EACA,KAAK,OAAO,WAAW,GAAG,SAAS,QAAQ,EAC3C,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,2DAAc,KAAK;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,MAAgF;AACnG,QAAI;AACF,YAAM,KAAK,OAAO,WAAW;AAE7B,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,SAKR,EACA;AAAA,QACC;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,eAAe;AAAA,QACpB,KAAK,WAAW;AAAA,QAChB,KAAK,YAAY;AAAA,QACjB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP,EACC,IAAI;AAEP,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,IAAY,MAA+C;AACjF,QAAI;AACF,YAAM,UAAoB,CAAC;AAC3B,YAAM,SAAgB,CAAC;AAEvB,UAAI,KAAK,UAAU,QAAW;AAC5B,gBAAQ,KAAK,WAAW;AACxB,eAAO,KAAK,KAAK,KAAK;AAAA,MACxB;AACA,UAAI,KAAK,gBAAgB,QAAW;AAClC,gBAAQ,KAAK,iBAAiB;AAC9B,eAAO,KAAK,KAAK,WAAW;AAAA,MAC9B;AACA,UAAI,KAAK,YAAY,QAAW;AAC9B,gBAAQ,KAAK,aAAa;AAC1B,eAAO,KAAK,KAAK,OAAO;AAAA,MAC1B;AACA,UAAI,KAAK,aAAa,QAAW;AAC/B,gBAAQ,KAAK,cAAc;AAC3B,eAAO,KAAK,KAAK,QAAQ;AAAA,MAC3B;AACA,UAAI,KAAK,mBAAmB,QAAW;AACrC,gBAAQ,KAAK,qBAAqB;AAClC,eAAO,KAAK,KAAK,cAAc;AAAA,MACjC;AAEA,UAAI,QAAQ,WAAW,EAAG;AAE1B,cAAQ,KAAK,gCAAgC;AAC7C,aAAO,KAAK,EAAE;AAEd,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA,gBAED,QAAQ,KAAK,IAAI,CAAC;AAAA;AAAA,SAEzB,EACA,KAAK,GAAG,MAAM,EACd,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,IAA2B;AACjD,QAAI;AACF,YAAM,KAAK,GACR,QAAQ,uCAAuC,EAC/C,KAAK,EAAE,EACP,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAa,KAAK;AAChC,YAAM,IAAI,MAAM,kDAAU;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBF;;;AC9RA,IAAM,eAAe,IAAIC,MAAiB;AAG1C,aAAa,IAAI,KAAK,OAAO,MAAM;AACjC,MAAI;AACF,UAAM,QAAQ,EAAE,IAAI,MAAM,GAAG;AAC7B,UAAM,WAAW,EAAE,IAAI,MAAM,MAAM,KAAK;AACxC,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AAEnD,QAAI,CAAC,SAAS,MAAM,KAAK,EAAE,WAAW,GAAG;AACvC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,iBAAiB,UAAU,GAAG;AACtD,UAAM,iBAAiB,IAAI,oBAAoB,UAAU,GAAG;AAG5D,UAAM,UAAU,MAAM,YAAY,OAAO,MAAM,KAAK,GAAG,UAAU,KAAK;AAGtE,UAAM,eAAe,OAAO;AAAA,MAC1B,WAAW;AAAA,MACX,WAAW;AAAA,QACT,OAAO,MAAM,KAAK;AAAA,QAClB;AAAA,QACA,aAAa,QAAQ;AAAA,QACrB;AAAA,MACF;AAAA,MACA,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,MACzC,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,IACjD,CAAC;AAGD,UAAM,YAAY,oBAAoB,MAAM,KAAK,GAAG,QAAQ;AAE5D,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,OAAO,MAAM,KAAK;AAAA,QAClB;AAAA,QACA,OAAO,QAAQ;AAAA,QACf;AAAA,MACF;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAY;AACnB,YAAQ,MAAM,6BAAS,KAAK;AAC5B,YAAQ,MAAM,6BAAS;AAAA,MACrB,SAAS,MAAM;AAAA,MACf,OAAO,MAAM;AAAA,MACb,MAAM,MAAM;AAAA,IACd,CAAC;AACD,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,aAAa,IAAI,gBAAgB,OAAO,MAAM;AAC5C,MAAI;AACF,UAAM,QAAQ,EAAE,IAAI,MAAM,GAAG;AAC7B,UAAM,WAAW,EAAE,IAAI,MAAM,MAAM,KAAK;AACxC,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AAEnD,QAAI,CAAC,SAAS,MAAM,KAAK,EAAE,WAAW,GAAG;AACvC,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,MAAM,CAAC;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,CAAC;AAAA,IACH;AAEA,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,iBAAiB,UAAU,GAAG;AAEtD,UAAM,cAAc,MAAM,YAAY,qBAAqB,MAAM,KAAK,GAAG,UAAU,KAAK;AAExF,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,qDAAa,KAAK;AAChC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,aAAa,IAAI,YAAY,OAAO,MAAM;AACxC,MAAI;AACF,UAAM,WAAW,EAAE,IAAI,MAAM,MAAM,KAAK;AACxC,UAAM,QAAQ,SAAS,EAAE,IAAI,MAAM,OAAO,KAAK,IAAI;AAEnD,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,iBAAiB,UAAU,GAAG;AAEtD,UAAM,WAAW,MAAM,YAAY,mBAAmB,UAAU,KAAK;AAErE,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,2DAAc,KAAK;AACjC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,aAAa,IAAI,UAAU,OAAO,MAAM;AACtC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AAGnC,UAAM,gBAAgB,MAAM,UAAU,GACnC,QAAQ,iFAAiF,EACzF,MAAM;AAET,UAAM,gBAAgB,MAAM,UAAU,GACnC,QAAQ,uDAAuD,EAC/D,MAAM;AAET,UAAM,iBAAiB,MAAM,UAAU,GACpC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,QAAQ;AAAA,MACZ,eAAe,eAAe,SAAmB;AAAA,MACjD,eAAe,eAAe,SAAmB;AAAA,MACjD,gBAAgB,eAAe,SAAS,IAAI,CAAC,SAAc;AAAA,QACzD,MAAM,KAAK,MAAM,IAAI,UAAoB;AAAA,QACzC,WAAW,IAAI;AAAA,MACjB,EAAE,KAAK,CAAC;AAAA,IACV;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,qDAAa,KAAK;AAChC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,aAAa,KAAK,UAAU,OAAO,MAAM;AACvC,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,eAAe,YAAY,SAAS,IAAI;AAEhD,QAAI,CAAC,eAAe;AAClB,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,IAAI,iBAAiB,UAAU,GAAG;AACtD,UAAM,iBAAiB,IAAI,oBAAoB,UAAU,GAAG;AAG5D,UAAM,YAAY,qBAAqB,aAAa;AAGpD,UAAM,eAAe,OAAO;AAAA,MAC1B,WAAW;AAAA,MACX,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,MACzC,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,IACjD,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;;;ACpNM,IAAM,uBAAN,cAAmC,UAAU;AAAA,EA/BpD,OA+BoD;AAAA;AAAA;AAAA,EAClD,YAAY,KAAU;AACpB,UAAM,KAAK,kBAAkB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,aAA2F;AACjH,QAAI;AACF,YAAM,KAAK,OAAO,WAAW;AAE7B,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMR,EACA;AAAA,QACC;AAAA,QACA,YAAY,aAAa;AAAA,QACzB,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY,iBAAiB,IAAI;AAAA,QACjC,YAAY,mBAAmB,IAAI;AAAA,QACnC,YAAY,mBAAmB,IAAI;AAAA,QACnC,YAAY,sBAAsB,IAAI;AAAA,QACtC,YAAY,uBAAuB,IAAI;AAAA,QACvC,YAAY,sBAAsB,IAAI;AAAA,MACxC,EACC,IAAI;AAEP,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,iEAAe,KAAK;AAClC,YAAM,IAAI,MAAM,8DAAY;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,0BAA0B,WAAwD;AACtF,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,qDAAqD,EAC7D,KAAK,SAAS,EACd,MAAM;AAET,aAAO,SAAS,KAAK,4BAA4B,MAAM,IAAI;AAAA,IAC7D,SAAS,OAAO;AACd,cAAQ,MAAM,2BAAO,SAAS,2DAAc,KAAK;AACjD,YAAM,IAAI,MAAM,8DAAY;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,qBAAqB,WAAmB,SAA4C;AACxF,QAAI;AACF,YAAM,KAAK,GACR,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASR,EACA;AAAA,QACC,OAAO,WAAW;AAAA,QAClB;AAAA,QACA,QAAQ,iBAAiB,IAAI;AAAA,QAC7B,QAAQ,mBAAmB,IAAI;AAAA,QAC/B,QAAQ,mBAAmB,IAAI;AAAA,MACjC,EACC,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,2BAAO,SAAS,sDAAmB,KAAK;AACtD,YAAM,IAAI,MAAM,yDAAiB;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,yBAMH;AACD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOR,EACA,MAAM;AAET,UAAI,CAAC,QAAQ;AACX,eAAO;AAAA,UACL,YAAY;AAAA,UACZ,gBAAgB;AAAA,UAChB,kBAAkB;AAAA,UAClB,kBAAkB;AAAA,UAClB,aAAa;AAAA,QACf;AAAA,MACF;AAEA,YAAM,aAAa,OAAO,aAAa;AACvC,YAAM,iBAAiB,OAAO,iBAAiB,KAAe;AAC9D,YAAM,mBAAmB,OAAO,mBAAmB,KAAe;AAClE,YAAM,mBAAmB,OAAO,mBAAmB,KAAe;AAElE,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa,aAAa,IAAK,iBAAiB,aAAc,MAAM;AAAA,MACtE;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,4DAAoB,KAAK;AACvC,YAAM,IAAI,MAAM,yDAAiB;AAAA,IACnC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,0BAA0B,UAAkB,KAAsB;AACtE,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA,iDAEgC,OAAO;AAAA;AAAA,SAE/C,EACA,IAAI;AAEP,aAAO,OAAO,KAAK,WAAW;AAAA,IAChC,SAAS,OAAO;AACd,cAAQ,MAAM,6EAAiB,KAAK;AACpC,YAAM,IAAI,MAAM,0EAAc;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,QAAgB,KAAK,SAAiB,GAAmC;AAChG,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA,SAIR,EACA,KAAK,OAAO,MAAM,EAClB,IAAI;AAEP,aAAO,OAAO,SAAS,IAAI,KAAK,2BAA2B,KAAK,CAAC;AAAA,IACnE,SAAS,OAAO;AACd,cAAQ,MAAM,6EAAiB,KAAK;AACpC,YAAM,IAAI,MAAM,0EAAc;AAAA,IAChC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,IAA2B;AACjD,QAAI;AACF,YAAM,KAAK,GACR,QAAQ,2CAA2C,EACnD,KAAK,EAAE,EACP,IAAI;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,mDAAW,EAAE,iBAAO,KAAK;AACvC,YAAM,IAAI,MAAM,8DAAY;AAAA,IAC9B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKQ,4BAA4B,KAA+B;AACjE,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,WAAW,IAAI;AAAA,MACf,UAAU,IAAI;AAAA,MACd,OAAO,IAAI;AAAA,MACX,gBAAgB,QAAQ,IAAI,eAAe;AAAA,MAC3C,kBAAkB,QAAQ,IAAI,iBAAiB;AAAA,MAC/C,kBAAkB,QAAQ,IAAI,iBAAiB;AAAA,MAC/C,qBAAqB,QAAQ,IAAI,oBAAoB;AAAA,MACrD,sBAAsB,QAAQ,IAAI,sBAAsB;AAAA,MACxD,qBAAqB,QAAQ,IAAI,oBAAoB;AAAA,MACrD,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,MAC5C,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AC1OA,IAAM,gBAAgB,IAAIC,MAAiB;AAG3C,cAAc,IAAI,uBAAuB,OAAO,MAAM;AACpD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAE/D,UAAM,cAAc,MAAM,iBAAiB,0BAA0B,SAAS;AAE9E,QAAI,CAAC,aAAa;AAChB,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,MAAM;AAAA,UACJ,gBAAgB;AAAA,UAChB,kBAAkB;AAAA,UAClB,kBAAkB;AAAA,UAClB,gBAAgB;AAAA,QAClB;AAAA,QACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,CAAC;AAAA,IACH;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,gBAAgB,YAAY;AAAA,QAC5B,kBAAkB,YAAY;AAAA,QAC9B,kBAAkB,YAAY;AAAA,QAC9B,gBAAgB;AAAA,QAChB,UAAU,YAAY;AAAA,QACtB,OAAO,YAAY;AAAA,MACrB;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,4DAAoB,KAAK;AACvC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,KAAK,YAAY,OAAO,MAAM;AAC1C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,WAAW,gBAAgB,kBAAkB,iBAAiB,IAAI;AAE1E,QAAI,CAAC,aAAa,OAAO,mBAAmB,WAAW;AACrD,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,GAAG,GAAG;AAAA,IACR;AAEA,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAC/D,UAAM,iBAAiB,IAAI,oBAAoB,UAAU,GAAG;AAG5D,UAAM,iBAAiB,qBAAqB,WAAW;AAAA,MACrD;AAAA,MACA;AAAA,MACA,kBAAkB,oBAAoB;AAAA,MACtC,kBAAkB,oBAAoB;AAAA,MACtC,WAAW,oBAAI,KAAK;AAAA,IACtB,CAAC;AAGD,UAAM,eAAe,OAAO;AAAA,MAC1B,WAAW;AAAA,MACX,WAAW;AAAA,QACT;AAAA,QACA;AAAA,QACA,kBAAkB,oBAAoB;AAAA,QACtC,kBAAkB,oBAAoB;AAAA,MACxC;AAAA,MACA,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,MACzC,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,IACjD,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,4DAAoB,KAAK;AACvC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,IAAI,2BAA2B,OAAO,MAAM;AACxD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAE/D,UAAM,cAAc,MAAM,iBAAiB,0BAA0B,SAAS;AAE9E,QAAI,CAAC,aAAa;AAChB,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,GAAG,GAAG;AAAA,IACR;AAEA,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,IAAI,2BAA2B,OAAO,MAAM;AACxD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,UAAU,OAAO,qBAAqB,sBAAsB,oBAAoB,IAAI;AAE5F,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAG/D,UAAM,sBAAsB,MAAM,iBAAiB,0BAA0B,SAAS;AAEtF,QAAI,CAAC,qBAAqB;AACxB,aAAO,EAAE,KAAK;AAAA,QACZ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,WAAW,EAAE,IAAI,WAAW;AAAA,MAC9B,GAAG,GAAG;AAAA,IACR;AAGA,UAAM,qBAAqB;AAAA,MACzB,GAAG;AAAA,MACH,UAAU,YAAY,oBAAoB;AAAA,MAC1C,OAAO,SAAS,oBAAoB;AAAA,MACpC,qBAAqB,wBAAwB,SAAY,sBAAsB,oBAAoB;AAAA,MACnG,sBAAsB,yBAAyB,SAAY,uBAAuB,oBAAoB;AAAA,MACtG,qBAAqB,wBAAwB,SAAY,sBAAsB,oBAAoB;AAAA,IACrG;AAEA,UAAM,iBAAiB,kBAAkB,kBAAkB;AAE3D,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,iEAAe,KAAK;AAClC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,IAAI,UAAU,OAAO,MAAM;AACvC,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAE/D,UAAM,QAAQ,MAAM,iBAAiB,uBAAuB;AAE5D,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,4DAAoB,KAAK;AACvC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,KAAK,YAAY,OAAO,MAAM;AAC1C,MAAI;AACF,UAAM,OAAO,MAAM,EAAE,IAAI,KAAK;AAC9B,UAAM,EAAE,UAAU,IAAI,IAAI;AAE1B,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAE/D,UAAM,eAAe,MAAM,iBAAiB,0BAA0B,OAAO;AAE7E,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,QACJ;AAAA,QACA,SAAS,qBAAM,OAAO;AAAA,MACxB;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,6EAAiB,KAAK;AACpC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;AAGD,cAAc,KAAK,wBAAwB,OAAO,MAAM;AACtD,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,MAAM,WAAW;AACzC,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,mBAAmB,IAAI,qBAAqB,UAAU,GAAG;AAC/D,UAAM,iBAAiB,IAAI,oBAAoB,UAAU,GAAG;AAG5D,UAAM,iBAAiB,qBAAqB,WAAW;AAAA,MACrD;AAAA,MACA,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,WAAW,oBAAI,KAAK;AAAA,IACtB,CAAC;AAGD,UAAM,eAAe,OAAO;AAAA,MAC1B,WAAW;AAAA,MACX,WAAW;AAAA,QACT;AAAA,QACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MACpC;AAAA,MACA,WAAW,EAAE,IAAI,OAAO,YAAY,KAAK;AAAA,MACzC,WAAW,EAAE,IAAI,OAAO,kBAAkB,KAAK;AAAA,IACjD,CAAC;AAED,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,CAAC;AAAA,EACH,SAAS,OAAO;AACd,YAAQ,MAAM,gDAAkB,KAAK;AACrC,WAAO,EAAE,KAAK;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAW,EAAE,IAAI,WAAW;AAAA,IAC9B,GAAG,GAAG;AAAA,EACR;AACF,CAAC;;;AC/RM,IAAM,kBAAN,MAAsB;AAAA,EAf7B,OAe6B;AAAA;AAAA;AAAA,EACnB;AAAA,EAER,YAAY,KAAU;AACpB,QAAI,CAAC,IAAI,IAAI;AACX,YAAM,IAAI,YAAY,qCAAqC,YAAY,gBAAgB,GAAG;AAAA,IAC5F;AACA,SAAK,KAAK,IAAI;AAAA,EAChB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,qBAAoC;AAChD,UAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvB,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,cAAc,EAAE,IAAI;AACzD,UAAI,CAAC,OAAO,SAAS;AACnB,cAAM,IAAI,MAAM,OAAO,SAAS,mCAAmC;AAAA,MACrE;AAAA,IACF,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,yCAAyC,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QACjG,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,uBAA0C;AACtD,QAAI;AACF,YAAM,SAAS,MAAM,KAAK,GAAG,QAAQ,mDAAmD,EAAE,IAAI;AAE9F,UAAI,CAAC,OAAO,SAAS;AACnB,cAAM,IAAI,MAAM,OAAO,SAAS,oCAAoC;AAAA,MACtE;AAEA,aAAO,OAAO,QAAQ,IAAI,CAAC,QAAa,IAAI,EAAE;AAAA,IAChD,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,qCAAqC,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QAC7F,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,eAAe,WAAqC;AAChE,QAAI;AAEF,YAAM,kBAAkB,MAAM,KAAK,GAAG,QAAQ,UAAU,GAAG,EAAE,IAAI;AAEjE,UAAI,CAAC,gBAAgB,SAAS;AAC5B,cAAM,IAAI,MAAM,gBAAgB,SAAS,gCAAgC;AAAA,MAC3E;AAGA,YAAM,eAAe,MAAM,KAAK,GAC7B,QAAQ,gEAAgE,EACxE,KAAK,UAAU,IAAI,UAAU,OAAM,oBAAI,KAAK,GAAE,YAAY,CAAC,EAC3D,IAAI;AAEP,UAAI,CAAC,aAAa,SAAS;AACzB,cAAM,IAAI,MAAM,aAAa,SAAS,4BAA4B;AAAA,MACpE;AAEA,cAAQ,IAAI,sBAAsB,UAAU,EAAE,MAAM,UAAU,IAAI,EAAE;AAAA,IACtE,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,6BAA6B,UAAU,EAAE,KAAK,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QACtG,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAAc,YAAwC;AAC1D,QAAI;AAEF,YAAM,KAAK,mBAAmB;AAG9B,YAAM,oBAAoB,MAAM,KAAK,qBAAqB;AAG1D,YAAM,oBAAoB,WAAW;AAAA,QACnC,eAAa,CAAC,kBAAkB,SAAS,UAAU,EAAE;AAAA,MACvD;AAEA,UAAI,kBAAkB,WAAW,GAAG;AAClC,gBAAQ,IAAI,gCAAgC;AAC5C;AAAA,MACF;AAEA,cAAQ,IAAI,YAAY,kBAAkB,MAAM,wBAAwB;AAGxE,iBAAW,aAAa,mBAAmB;AACzC,cAAM,KAAK,eAAe,SAAS;AAAA,MACrC;AAEA,cAAQ,IAAI,qCAAqC;AAAA,IACnD,SAAS,OAAO;AACd,UAAI,iBAAiB,aAAa;AAChC,cAAM;AAAA,MACR;AAEA,YAAM,IAAI;AAAA,QACR,4BAA4B,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QACpF,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,YAGtB;AACD,QAAI;AACF,YAAM,KAAK,mBAAmB;AAC9B,YAAM,sBAAsB,MAAM,KAAK,qBAAqB;AAE5D,YAAM,UAAU,WAAW;AAAA,QAAO,eAChC,oBAAoB,SAAS,UAAU,EAAE;AAAA,MAC3C;AAEA,YAAM,UAAU,WAAW;AAAA,QAAO,eAChC,CAAC,oBAAoB,SAAS,UAAU,EAAE;AAAA,MAC5C;AAEA,aAAO,EAAE,SAAS,QAAQ;AAAA,IAC5B,SAAS,OAAO;AACd,YAAM,IAAI;AAAA,QACR,mCAAmC,iBAAiB,QAAQ,MAAM,UAAU,eAAe;AAAA,QAC3F,YAAY;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;ACtIO,IAAM,gBAAN,cAA4B,UAAU;AAAA,EAxC7C,OAwC6C;AAAA;AAAA;AAAA,EAC3C,YAAY,KAAU;AACpB,UAAM,KAAK,UAAU,UAAU;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,cAAmD;AAC9D,SAAK,iBAAiB,cAAc,CAAC,MAAM,QAAQ,YAAY,QAAQ,CAAC;AAExE,UAAM,MAAM,KAAK,gBAAgB;AAEjC,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM9B,UAAM,SAAS;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa,eAAe;AAAA,MAC5B,KAAK,UAAU,aAAa,MAAM;AAAA,MAClC,aAAa,aAAa,QAAQ,IAAI;AAAA,MACtC,aAAa,aAAa;AAAA,MAC1B;AAAA,MACA;AAAA,IACF;AAEA,UAAM,KAAK,WAAW,OAAO,MAAM;AAGnC,UAAM,WAAW,GAAG,WAAW,WAAW,GAAG,aAAa,EAAE;AAC5D,UAAM,KAAK,SAAS,UAAU,aAAa,QAAQ,IAAI;AAEvD,WAAO,aAAa;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAoC;AACxC,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAqB,QAAQ;AAEvD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,UAAM,UAAU,MAAM,KAAK,aAAuB,KAAK;AAGvD,UAAM,KAAK,SAAS,UAAU,SAAS,IAAI;AAE3C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS,IAAsC;AACnD,UAAM,QAAQ,iBAAiB,KAAK,SAAS;AAC7C,WAAO,KAAK,kBAA4B,OAAO,CAAC,EAAE,CAAC;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAAe,UAAuC;AAC1D,UAAM,WAAW,uBAAuB,QAAQ;AAChD,UAAM,SAAS,MAAM,KAAK,SAAqB,QAAQ;AAEvD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,UAAM,UAAU,MAAM,KAAK,aAAuB,OAAO,CAAC,QAAQ,CAAC;AAGnE,UAAM,KAAK,SAAS,UAAU,SAAS,IAAI;AAE3C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,UAAU,IAAwC;AACtD,UAAM,WAAW,GAAG,WAAW,WAAW,GAAG,EAAE;AAC/C,UAAM,SAAS,MAAM,KAAK,SAAqB,QAAQ;AAEvD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,MAAM,KAAK,SAAS,EAAE;AAEvC,QAAI,CAAC,UAAU;AACb,aAAO;AAAA,IACT;AAEA,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,SAAS,UAAU;AAG7C,YAAM,KAAK,SAAS,UAAU,QAAQ,IAAI;AAE1C,aAAO;AAAA,IACT,SAAS,OAAO;AACd,cAAQ,MAAM,gCAAgC,KAAK;AACnD,aAAO;AAAA,IACT;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,IAAY,YAAwD;AAC/E,UAAM,MAAM,KAAK,gBAAgB;AACjC,UAAM,SAAmB,CAAC;AAC1B,UAAM,SAAgB,CAAC;AAGvB,QAAI,WAAW,SAAS,QAAW;AACjC,aAAO,KAAK,UAAU;AACtB,aAAO,KAAK,WAAW,IAAI;AAAA,IAC7B;AAEA,QAAI,WAAW,aAAa,QAAW;AACrC,aAAO,KAAK,cAAc;AAC1B,aAAO,KAAK,WAAW,QAAQ;AAAA,IACjC;AAEA,QAAI,WAAW,gBAAgB,QAAW;AACxC,aAAO,KAAK,iBAAiB;AAC7B,aAAO,KAAK,WAAW,WAAW;AAAA,IACpC;AAEA,QAAI,WAAW,WAAW,QAAW;AACnC,aAAO,KAAK,iBAAiB;AAC7B,aAAO,KAAK,KAAK,UAAU,WAAW,MAAM,CAAC;AAAA,IAC/C;AAEA,QAAI,WAAW,aAAa,QAAW;AACrC,aAAO,KAAK,eAAe;AAC3B,aAAO,KAAK,WAAW,WAAW,IAAI,CAAC;AAAA,IACzC;AAEA,QAAI,WAAW,cAAc,QAAW;AACtC,aAAO,KAAK,gBAAgB;AAC5B,aAAO,KAAK,WAAW,SAAS;AAAA,IAClC;AAEA,QAAI,OAAO,WAAW,GAAG;AACvB;AAAA,IACF;AAEA,WAAO,KAAK,gBAAgB;AAC5B,WAAO,KAAK,GAAG;AACf,WAAO,KAAK,EAAE;AAEd,UAAM,QAAQ;AAAA,eACH,KAAK,SAAS;AAAA,YACjB,OAAO,KAAK,IAAI,CAAC;AAAA;AAAA;AAIzB,UAAM,KAAK,WAAW,OAAO,MAAM;AAGnC,UAAM,KAAK,YAAY,GAAG,WAAW,WAAW,GAAG,EAAE,EAAE;AACvD,UAAM,KAAK,YAAY,mBAAmB;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAW,IAA2B;AAC1C,UAAM,KAAK,OAAO,IAAI,EAAE,UAAU,MAAM,CAAC;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAmC;AACvC,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAmB,QAAQ;AAErD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA,aAEL,KAAK,SAAS;AAAA;AAAA;AAAA;AAKvB,UAAM,UAAU,MAAM,KAAK,aAAmC,KAAK;AACnE,UAAM,aAAa,QAAQ,IAAI,SAAO,IAAI,QAAQ;AAGlD,UAAM,KAAK,SAAS,UAAU,YAAY,IAAI;AAE9C,WAAO;AAAA,EACT;AACF;;;AC7PA,eAAeC,YAAW,OAAgC;AACxD,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,OAAO,QAAQ,OAAO,KAAK;AACjC,QAAM,aAAa,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAC7D,QAAM,YAAY,MAAM,KAAK,IAAI,WAAW,UAAU,CAAC;AACvD,SAAO,UAAU,IAAI,OAAK,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AACpE;AANe,OAAAA,aAAA;AAkCR,IAAM,mBAAN,cAA+B,UAAU;AAAA,EA3ChD,OA2CgD;AAAA;AAAA;AAAA,EAC9C,YAAY,KAAU;AACpB,UAAM,KAAK,UAAU,aAAa;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,aAAqD;AAChE,SAAK,iBAAiB,aAAa,CAAC,cAAc,WAAW,QAAQ,CAAC;AAEtE,UAAM,KAAK,KAAK,WAAW;AAC3B,UAAM,MAAM,KAAK,gBAAgB;AAGjC,UAAM,gBAAgB,YAAY,YAC9B,MAAMA,YAAW,YAAY,SAAS,IACtC;AAEJ,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM9B,UAAM,SAAS;AAAA,MACb;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,UAAU,YAAY,OAAO;AAAA,MAClC,KAAK,UAAU,YAAY,MAAM;AAAA,MACjC,YAAY,aAAa;AAAA,MACzB;AAAA,MACA,YAAY,mBAAmB;AAAA,MAC/B;AAAA,IACF;AAEA,UAAM,KAAK,WAAW,OAAO,MAAM;AAGnC,UAAM,WAAW,GAAG,WAAW,WAAW,GAAG,EAAE;AAC/C,UAAM,KAAK,SAAS,UAAU;AAAA,MAC5B;AAAA,MACA,YAAY,YAAY;AAAA,MACxB,QAAQ,YAAY;AAAA,MACpB,WAAW;AAAA,IACb,GAAG,KAAK;AAER,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS,IAAyC;AAEtD,UAAM,WAAW,GAAG,WAAW,WAAW,GAAG,EAAE;AAC/C,UAAM,SAAS,MAAM,KAAK,SAAsB,QAAQ;AAExD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,iBAAiB,KAAK,SAAS;AAC7C,UAAM,SAAS,MAAM,KAAK,kBAA+B,OAAO,CAAC,EAAE,CAAC;AAEpE,QAAI,QAAQ;AAEV,YAAM,KAAK,SAAS,UAAU,QAAQ,IAAI;AAAA,IAC5C;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,YAA+C;AACtE,UAAM,WAAW,cAAc,UAAU;AACzC,UAAM,SAAS,MAAM,KAAK,SAA2B,QAAQ;AAE7D,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,aAKL,KAAK,SAAS;AAAA;AAAA;AAIvB,UAAM,SAAS,MAAM,KAAK,kBAAuB,OAAO,CAAC,UAAU,CAAC;AAEpE,UAAM,QAA0B;AAAA,MAC9B,eAAe,QAAQ,kBAAkB;AAAA,MACzC,cAAc,QAAQ,aAAa;AAAA,MACnC,gBAAgB,QAAQ,mBAAmB;AAAA,IAC7C;AAGA,UAAM,KAAK,SAAS,UAAU,OAAO,IAAI;AAEzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,QAAgB,IAA4B;AAClE,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,WAAO,KAAK,aAA0B,OAAO,CAAC,KAAK,CAAC;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,2BACJ,WACA,SACA,YACiB;AACjB,QAAI,QAAQ;AAAA;AAAA,aAEH,KAAK,SAAS;AAAA;AAAA;AAGvB,UAAM,SAAS,CAAC,WAAW,OAAO;AAElC,QAAI,YAAY;AACd,eAAS;AACT,aAAO,KAAK,UAAU;AAAA,IACxB;AAEA,UAAM,SAAS,MAAM,KAAK,kBAAqC,OAAO,MAAM;AAC5E,WAAO,QAAQ,SAAS;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,sBAAsB,UAAkB,IAAqB;AACjE,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,QAAQ,WAAW,QAAQ,IAAI,OAAO;AACjD,UAAM,kBAAkB,KAAK,gBAAgB,UAAU;AAEvD,UAAM,QAAQ,eAAe,KAAK,SAAS;AAC3C,UAAM,SAAS,MAAM,KAAK,WAAW,OAAO,CAAC,eAAe,CAAC;AAE7D,WAAQ,OAAe,WAAW;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,sBAAsB,IAAY,UAAiC;AACvE,UAAM,QAAQ;AAAA,eACH,KAAK,SAAS;AAAA;AAAA;AAAA;AAKzB,UAAM,KAAK,WAAW,OAAO,CAAC,UAAU,EAAE,CAAC;AAG3C,UAAM,WAAW,GAAG,WAAW,WAAW,GAAG,EAAE;AAC/C,UAAM,KAAK,YAAY,QAAQ;AAAA,EACjC;AACF;;;AC9JO,IAAM,mBAAN,cAA+B,UAAU;AAAA,EA5DhD,OA4DgD;AAAA;AAAA;AAAA,EAC9C,YAAY,KAAU;AACpB,UAAM,KAAK,UAAU,aAAa;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,aAAqD;AAChE,SAAK,iBAAiB,aAAa,CAAC,SAAS,SAAS,CAAC;AAEvD,UAAM,KAAK,KAAK,WAAW;AAC3B,UAAM,MAAM,KAAK,gBAAgB;AAEjC,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAO9B,UAAM,SAAS;AAAA,MACb;AAAA,MACA,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY,WAAW;AAAA,MACvB,YAAY,YAAY;AAAA,MACxB,KAAK,UAAU,YAAY,QAAQ,CAAC,CAAC;AAAA,MACrC;AAAA;AAAA,MACA;AAAA;AAAA,MACA,YAAY,gBAAgB,QAAQ,IAAI;AAAA,MACxC,YAAY,eAAe,OAAO,IAAI;AAAA,MACtC,YAAY,gBAAgB,YAAY,gBAAgB,QAAQ,MAAM;AAAA,MACtE;AAAA,MACA;AAAA,IACF;AAEA,UAAM,KAAK,WAAW,OAAO,MAAM;AAGnC,UAAM,KAAK,YAAY,oBAAoB;AAC3C,UAAM,KAAK,YAAY,mBAAmB;AAE1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,QACJ,OAAe,GACf,QAAgB,IAChB,UACgD;AAChD,UAAM,UAAU,OAAO,KAAK;AAC5B,UAAM,WAAW,aAAa,IAAI,IAAI,KAAK,IAAI,YAAY,KAAK;AAChE,UAAM,SAAS,MAAM,KAAK,SAAgD,QAAQ;AAElF,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAGA,QAAI,cAAc;AAClB,UAAM,SAAgB,CAAC;AAEvB,QAAI,UAAU;AACZ,qBAAe;AACf,aAAO,KAAK,QAAQ;AAAA,IACtB;AAGA,UAAM,aAAa,iCAAiC,KAAK,SAAS,IAAI,WAAW;AACjF,UAAM,cAAc,MAAM,KAAK,kBAAqC,YAAY,MAAM;AACtF,UAAM,QAAQ,aAAa,SAAS;AAGpC,UAAM,YAAY;AAAA;AAAA;AAAA;AAAA,aAIT,KAAK,SAAS;AAAA,QACnB,WAAW;AAAA;AAAA;AAAA;AAKf,UAAM,WAAW,MAAM,KAAK,aAAkB,WAAW,CAAC,GAAG,QAAQ,OAAO,MAAM,CAAC;AAGnF,UAAM,OAA8B,SAAS,IAAI,cAAY;AAAA,MAC3D,IAAI,QAAQ;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,UAAU,QAAQ;AAAA,MAClB,MAAM,KAAK,MAAM,QAAQ,aAAa,IAAI;AAAA,MAC1C,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ;AAAA,MACnB,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,IACrB,EAAE;AAEF,UAAM,aAAa,KAAK,KAAK,QAAQ,KAAK;AAC1C,UAAM,SAAgD;AAAA,MACpD;AAAA,MACA,YAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,OAAO;AAAA,QAChB,SAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAGA,UAAM,KAAK,SAAS,UAAU,QAAQ,GAAG;AAEzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS,IAAyC;AACtD,UAAM,WAAW,GAAG,WAAW,YAAY,GAAG,EAAE;AAChD,UAAM,SAAS,MAAM,KAAK,SAAsB,QAAQ;AAExD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ,iBAAiB,KAAK,SAAS;AAC7C,UAAM,SAAS,MAAM,KAAK,kBAA+B,OAAO,CAAC,EAAE,CAAC;AAEpE,QAAI,QAAQ;AAEV,YAAM,KAAK,SAAS,UAAU,QAAQ,IAAI;AAAA,IAC5C;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,IAA2B;AAClD,UAAM,QAAQ;AAAA,eACH,KAAK,SAAS;AAAA;AAAA;AAAA;AAKzB,UAAM,KAAK,WAAW,OAAO,CAAC,EAAE,CAAC;AAGjC,UAAM,KAAK,YAAY,GAAG,WAAW,YAAY,GAAG,EAAE,EAAE;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,IAA2B;AAClD,UAAM,QAAQ;AAAA,eACH,KAAK,SAAS;AAAA;AAAA;AAAA;AAKzB,UAAM,KAAK,WAAW,OAAO,CAAC,EAAE,CAAC;AAGjC,UAAM,KAAK,YAAY,GAAG,WAAW,YAAY,GAAG,EAAE,EAAE;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBAAoB,QAAgB,GAAmC;AAC3E,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAgC,QAAQ;AAElE,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIL,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAMvB,UAAM,WAAW,MAAM,KAAK,aAAkB,OAAO,CAAC,KAAK,CAAC;AAG5D,UAAM,OAA8B,SAAS,IAAI,cAAY;AAAA,MAC3D,IAAI,QAAQ;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,UAAU,QAAQ;AAAA,MAClB,MAAM,KAAK,MAAM,QAAQ,aAAa,IAAI;AAAA,MAC1C,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ;AAAA,MACnB,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,IACrB,EAAE;AAGF,UAAM,KAAK,SAAS,UAAU,MAAM,IAAI;AAExC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,QAAgB,GAAmC;AAC1E,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAgC,QAAQ;AAElE,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,aAIL,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAMvB,UAAM,WAAW,MAAM,KAAK,aAAkB,OAAO,CAAC,KAAK,CAAC;AAG5D,UAAM,OAA8B,SAAS,IAAI,cAAY;AAAA,MAC3D,IAAI,QAAQ;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,UAAU,QAAQ;AAAA,MAClB,MAAM,KAAK,MAAM,QAAQ,aAAa,IAAI;AAAA,MAC1C,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ;AAAA,MACnB,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,IACrB,EAAE;AAGF,UAAM,KAAK,SAAS,UAAU,MAAM,IAAI;AAExC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAmC;AACvC,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAmB,QAAQ;AAErD,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA,aAEL,KAAK,SAAS;AAAA;AAAA;AAAA;AAKvB,UAAM,UAAU,MAAM,KAAK,aAAmC,KAAK;AACnE,UAAM,aAAa,QAAQ,IAAI,SAAO,IAAI,QAAQ;AAGlD,UAAM,KAAK,SAAS,UAAU,YAAY,IAAI;AAE9C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OACJ,SACA,OAAe,GACf,QAAgB,IACgC;AAChD,UAAM,UAAU,OAAO,KAAK;AAC5B,UAAM,aAAa,IAAI,OAAO;AAG9B,UAAM,aAAa;AAAA;AAAA,aAEV,KAAK,SAAS;AAAA;AAAA;AAAA;AAIvB,UAAM,cAAc,MAAM,KAAK;AAAA,MAC7B;AAAA,MACA,CAAC,YAAY,YAAY,UAAU;AAAA,IACrC;AACA,UAAM,QAAQ,aAAa,SAAS;AAGpC,UAAM,cAAc;AAAA;AAAA;AAAA;AAAA,aAIX,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAOvB,UAAM,WAAW,MAAM,KAAK;AAAA,MAC1B;AAAA,MACA,CAAC,YAAY,YAAY,YAAY,OAAO,MAAM;AAAA,IACpD;AAGA,UAAM,OAA8B,SAAS,IAAI,cAAY;AAAA,MAC3D,IAAI,QAAQ;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,UAAU,QAAQ;AAAA,MAClB,MAAM,KAAK,MAAM,QAAQ,aAAa,IAAI;AAAA,MAC1C,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ;AAAA,MACnB,aAAa,QAAQ;AAAA,MACrB,WAAW,QAAQ;AAAA,IACrB,EAAE;AAEF,UAAM,aAAa,KAAK,KAAK,QAAQ,KAAK;AAC1C,WAAO;AAAA,MACL;AAAA,MACA,YAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS,OAAO;AAAA,QAChB,SAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AACF;;;AC7XO,IAAM,oBAAN,cAAgC,UAAU;AAAA,EAjCjD,OAiCiD;AAAA;AAAA;AAAA,EAC/C,YAAY,KAAU;AACpB,UAAM,KAAK,UAAU,aAAa;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,cAAuD;AAClE,SAAK,iBAAiB,cAAc,CAAC,cAAc,CAAC;AAEpD,UAAM,KAAK,KAAK,WAAW;AAC3B,UAAM,MAAM,KAAK,gBAAgB;AAEjC,UAAM,QAAQ;AAAA,oBACE,KAAK,SAAS;AAAA;AAAA;AAAA;AAK9B,UAAM,SAAS;AAAA,MACb;AAAA,MACA,aAAa,aAAa;AAAA,MAC1B,aAAa;AAAA,MACb,aAAa,WAAW;AAAA,MACxB,aAAa,UAAU;AAAA,MACvB;AAAA,IACF;AAEA,UAAM,KAAK,WAAW,OAAO,MAAM;AAGnC,UAAM,KAAK,YAAY,gBAAgB;AAEvC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAmC;AACvC,UAAM,WAAW;AACjB,UAAM,SAAS,MAAM,KAAK,SAAwB,QAAQ;AAE1D,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAEA,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOL,KAAK,SAAS;AAAA;AAGvB,UAAM,SAAS,MAAM,KAAK,kBAAuB,KAAK;AAEtD,UAAM,QAAuB;AAAA,MAC3B,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,cAAc,QAAQ,iBAAiB;AAAA,IACzC;AAGA,UAAM,KAAK,SAAS,UAAU,OAAO,IAAI;AAEzC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAAgB,WAA4C;AAChE,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,WAAO,KAAK,aAA2B,OAAO,CAAC,SAAS,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAkB,QAAgB,IAA6B;AACnE,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAKhC,WAAO,KAAK,aAA2B,OAAO,CAAC,KAAK,CAAC;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,YAAY,QAAgB,IAA6B;AAC7D,UAAM,QAAQ;AAAA,sBACI,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAMhC,WAAO,KAAK,aAA2B,OAAO,CAAC,KAAK,CAAC;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,oBACJ,WACA,SACwB;AACxB,UAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOL,KAAK,SAAS;AAAA;AAAA;AAIvB,UAAM,SAAS,MAAM,KAAK,kBAAuB,OAAO,CAAC,WAAW,OAAO,CAAC;AAE5E,WAAO;AAAA,MACL,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,eAAe,QAAQ,kBAAkB;AAAA,MACzC,cAAc,QAAQ,iBAAiB;AAAA,IACzC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,sBAAsB,UAAkB,KAAsB;AAClE,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,QAAQ,WAAW,QAAQ,IAAI,OAAO;AACjD,UAAM,kBAAkB,KAAK,gBAAgB,UAAU;AAEvD,UAAM,QAAQ,eAAe,KAAK,SAAS;AAC3C,UAAM,SAAS,MAAM,KAAK,WAAW,OAAO,CAAC,eAAe,CAAC;AAG7D,UAAM,KAAK,YAAY,gBAAgB;AAEvC,WAAQ,OAAe,WAAW;AAAA,EACpC;AACF;;;ACpKO,IAAM,yBAAN,cAAqC,UAAU;AAAA,EA5BtD,OA4BsD;AAAA;AAAA;AAAA,EACpD,YAAY,KAAU;AACpB,UAAM,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,MAAM,OAAO,MAAoD;AAC/D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,mBAAmB;AAAA,MACxB,KAAK,kBAAkB,KAAK,UAAU,KAAK,eAAe,IAAI;AAAA,MAC9D,KAAK,aAAa;AAAA,MAClB,KAAK,mBAAmB,KAAK,UAAU,KAAK,gBAAgB,IAAI;AAAA,OAChE,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,uCAAuC,gBAAgB;AAAA,IAChF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAA8D;AACtF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,6DAA6D,EACrE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,cAAc,SAAmD;AACrE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,mFAAmF,EAC3F,KAAK,OAAO,EACZ,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,kBAAkB,SAIrB;AACD,UAAM,cAAc,MAAM,KAAK,GAC5B,QAAQ,0EAA0E,EAClF,KAAK,OAAO,EACZ,MAAM;AAET,UAAM,QAAQ;AAAA,MACJ,eAAgB,cAAc,OAAO,KAAgB;AAAA,IAC/D;AAEA,QAAI,YAAY,QAAQ;AACtB,YAAM,mBAAmB,MAAM,KAAK,GACjC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,SAKR,EACA,KAAK,OAAO,EACZ,IAAI;AAEP,YAAM,eAAuC,CAAC;AAC9C,uBAAiB,QAAQ,QAAQ,CAAC,QAAa;AAC7C,qBAAa,IAAI,gBAAgB,IAAI,IAAI;AAAA,MAC3C,CAAC;AAED,aAAO,EAAE,GAAG,OAAO,6BAA6B,aAAa;AAAA,IAC/D;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,UAAU,KAAiC;AACjD,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,aAAa,IAAI;AAAA,MACjB,iBAAkB,IAAI,oBAA+B;AAAA,MACrD,iBAAiB,IAAI,mBAAmB,KAAK,MAAM,IAAI,gBAA0B,IAAI;AAAA,MACrF,WAAY,IAAI,cAAmF;AAAA,MACnG,kBAAkB,IAAI,oBAAoB,KAAK,MAAM,IAAI,iBAA2B,IAAI;AAAA,MACxF,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AChGO,IAAM,wBAAN,cAAoC,UAAU;AAAA,EApCrD,OAoCqD;AAAA;AAAA;AAAA,EACnD,YAAY,KAAU;AACpB,UAAM,KAAK,oBAAoB;AAAA,EACjC;AAAA,EAEA,MAAM,OAAO,MAAmD;AAC9D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK,UAAU,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA;AAAA,MACzC,KAAK,aAAa;AAAA,MAClB,KAAK,iBAAiB;AAAA,MACtB,KAAK;AAAA,MACL,KAAK,YAAY;AAAA,MACjB,KAAK,cAAc;AAAA,MACnB,KAAK,qBAAqB,KAAK,UAAU,KAAK,kBAAkB,IAAI;AAAA,MACpE,KAAK,iBAAiB,KAAK,UAAU,KAAK,cAAc,IAAI;AAAA,MAC5D,KAAK,UAAU,KAAK,UAAU,KAAK,OAAO,IAAI;AAAA,OAC9C,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,sCAAsC,gBAAgB;AAAA,IAC/E;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAA6D;AACrF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,4DAA4D,EACpE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,cAAc,SAAkD;AACpE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,8EAA8E,EACtF,KAAK,OAAO,EACZ,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,yBAA0D;AAC9D,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,QAAQ,IAAI,IAAI;AAAA,IACnC,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,qBAAqB,WAAiB,SAAgD;AAC1F,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA,OAIR,EACA;AAAA,MACC,UAAU,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,MACpC,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,IACpC,EACC,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEQ,UAAU,KAAgC;AAChD,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,MAC5C,WAAY,IAAI,cAAyB;AAAA,MACzC,eAAgB,IAAI,kBAA6B;AAAA,MACjD,SAAS,IAAI;AAAA,MACb,UAAW,IAAI,aAAwB;AAAA,MACvC,YAAa,IAAI,eAA0B;AAAA,MAC3C,oBAAoB,IAAI,sBAAsB,KAAK,MAAM,IAAI,mBAA6B,IAAI;AAAA,MAC9F,gBAAgB,IAAI,kBAAkB,KAAK,MAAM,IAAI,eAAyB,IAAI;AAAA,MAClF,SAAS,IAAI,UAAU,KAAK,MAAM,IAAI,OAAiB,IAAI;AAAA,MAC3D,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AC7GO,IAAM,oBAAN,cAAgC,UAAU;AAAA,EAtCjD,OAsCiD;AAAA;AAAA;AAAA,EAC/C,YAAY,KAAU;AACpB,UAAM,KAAK,gBAAgB;AAAA,EAC7B;AAAA,EAEA,MAAM,OAAO,MAA+C;AAC1D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,UAAU,KAAK,UAAU;AAAA,MAC9B,KAAK,gBAAgB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,MAC1D,KAAK,uBAAuB;AAAA,MAC5B,KAAK,oBAAoB;AAAA,OACzB,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,kCAAkC,gBAAgB;AAAA,IAC3E;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAAyD;AACjF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,wDAAwD,EAChE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,iBAAiB,YAAiD;AACtE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,6EAA6E,EACrF,KAAK,UAAU,EACf,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,uBAAuB,UAA+C;AAC1E,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,mFAAmF,EAC3F,KAAK,QAAQ,EACb,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,qBAAsD;AAC1D,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA,IAAI;AAEP,UAAM,QAAgC,CAAC;AACvC,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,YAAM,IAAI,WAAW,IAAI,IAAI;AAAA,IAC/B,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,gBAAgB,QAAgB,IAAyD;AAG7F,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,KAAK,KAAK,EACV,IAAI;AAEP,UAAM,aAAqC,CAAC;AAE5C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,QAAQ,KAAK,MAAM,IAAI,WAAqB;AAClD,cAAM,QAAQ,UAAQ;AACpB,qBAAW,KAAK,IAAI,KAAK,WAAW,KAAK,IAAI,KAAK,KAAK;AAAA,QACzD,CAAC;AAAA,MACH,SAAS,OAAO;AACd,gBAAQ,KAAK,qCAAqC,KAAK;AAAA,MACzD;AAAA,IACF,CAAC;AAED,WAAO,OAAO,QAAQ,UAAU,EAC7B,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAC5B,MAAM,GAAG,KAAK,EACd,IAAI,CAAC,CAAC,UAAU,KAAK,OAAO,EAAE,UAAU,MAAM,EAAE;AAAA,EACrD;AAAA,EAEQ,UAAU,KAA4B;AAC5C,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,YAAY,IAAI;AAAA,MAChB,YAAY,KAAK,MAAM,IAAI,WAAqB;AAAA,MAChD,eAAe,IAAI,iBAAiB,KAAK,MAAM,IAAI,cAAwB,IAAI;AAAA,MAC/E,qBAAsB,IAAI,wBAAmC;AAAA,MAC7D,kBAAmB,IAAI,qBAA4F;AAAA,MACnH,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AC9HO,IAAM,qBAAN,cAAiC,UAAU;AAAA,EAxClD,OAwCkD;AAAA;AAAA;AAAA,EAChD,YAAY,KAAU;AACpB,UAAM,KAAK,iBAAiB;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO,MAAgD;AAC3D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,eAAe;AAAA,MACpB,KAAK,iBAAiB,KAAK,UAAU,KAAK,cAAc,IAAI;AAAA,MAC5D,KAAK,gBAAgB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,MAC1D,KAAK,gBAAgB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,MAC1D,KAAK,gBAAgB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,OAC1D,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,mCAAmC,gBAAgB;AAAA,IAC5E;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAA0D;AAClF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,yDAAyD,EACjE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,cAAc,SAA+C;AACjE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,+EAA+E,EACvF,KAAK,OAAO,EACZ,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,6BAA8D;AAClE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,YAAY,IAAI,IAAI;AAAA,IACvC,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,kBAAkB,QAAgB,IAAsD;AAC5F,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,6EAA6E,EACrF,IAAI;AAEP,UAAM,eAAuC,CAAC;AAE9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,UAAU,KAAK,MAAM,IAAI,cAAwB;AAOvD,gBAAQ,QAAQ,WAAS;AACvB,uBAAa,MAAM,KAAK,KAAK,aAAa,MAAM,KAAK,KAAK,KAAK;AAAA,QACjE,CAAC;AAAA,MACH,SAAS,OAAO;AACd,gBAAQ,KAAK,wCAAwC,KAAK;AAAA,MAC5D;AAAA,IACF,CAAC;AAED,WAAO,OAAO,QAAQ,YAAY,EAC/B,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,EAC5B,MAAM,GAAG,KAAK,EACd,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,EAAE,OAAO,MAAM,EAAE;AAAA,EAC/C;AAAA,EAEA,MAAM,2BAA4D;AAChE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,+EAA+E,EACvF,IAAI;AAEP,UAAM,cAA8D,CAAC;AAErE,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,SAAS,KAAK,MAAM,IAAI,eAAyB;AAEvD,eAAO,QAAQ,MAAM,EAAE,QAAQ,CAAC,CAAC,UAAU,KAAK,MAAM;AACpD,cAAI,CAAC,YAAY,QAAQ,GAAG;AAC1B,wBAAY,QAAQ,IAAI,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,UAC7C;AACA,sBAAY,QAAQ,EAAE,OAAO;AAC7B,sBAAY,QAAQ,EAAE,SAAS;AAAA,QACjC,CAAC;AAAA,MACH,SAAS,OAAO;AACd,gBAAQ,KAAK,yCAAyC,KAAK;AAAA,MAC7D;AAAA,IACF,CAAC;AAED,UAAM,WAAmC,CAAC;AAC1C,WAAO,QAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC,UAAU,EAAE,KAAK,MAAM,CAAC,MAAM;AAClE,eAAS,QAAQ,IAAI,KAAK,MAAO,MAAM,QAAS,GAAG,IAAI;AAAA,IACzD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEQ,UAAU,KAA6B;AAC7C,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,aAAa,IAAI;AAAA,MACjB,aAAc,IAAI,gBAA2B;AAAA,MAC7C,gBAAgB,IAAI,kBAAkB,KAAK,MAAM,IAAI,eAAyB,IAAI;AAAA,MAClF,eAAe,IAAI,iBAAiB,KAAK,MAAM,IAAI,cAAwB,IAAI;AAAA,MAC/E,eAAe,IAAI,iBAAiB,KAAK,MAAM,IAAI,cAAwB,IAAI;AAAA,MAC/E,eAAe,IAAI,iBAAiB,KAAK,MAAM,IAAI,cAAwB,IAAI;AAAA,MAC/E,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;ACjKO,IAAM,uBAAN,cAAmC,UAAU;AAAA,EA9BpD,OA8BoD;AAAA;AAAA;AAAA,EAClD,YAAY,KAAU;AACpB,UAAM,KAAK,mBAAmB;AAAA,EAChC;AAAA,EAEA,MAAM,OAAO,MAAkD;AAC7D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,iBAAiB;AAAA,MACtB,KAAK,kBAAkB;AAAA,MACvB,KAAK,kBAAkB;AAAA,MACvB,KAAK,sBAAsB,KAAK,UAAU,KAAK,mBAAmB,IAAI;AAAA,MACtE,KAAK,0BAA0B,KAAK,UAAU,KAAK,uBAAuB,IAAI;AAAA,OAC9E,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,qCAAqC,gBAAgB;AAAA,IAC9E;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAA4D;AACpF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,2DAA2D,EACnE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,cAAc,SAAiD;AACnE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,iFAAiF,EACzF,KAAK,OAAO,EACZ,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,+BAAgE;AACpE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,cAAc,IAAI,IAAI;AAAA,IACzC,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,yBAMH;AACD,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQR,EACA,MAAM;AAGT,UAAM,eAAe,MAAM,KAAK,GAC7B,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUR,EACA,MAAM;AAET,WAAO;AAAA,MACG,SAAS,KAAK,OAAO,UAAU,WAAW,KAAe,KAAK,GAAG,IAAI;AAAA,MAC3E,QAAQ,eAAe,iBAAiB,KAAe;AAAA,MACvD,KAAK,UAAU,WAAW,KAAe;AAAA,MACzC,KAAK,UAAU,WAAW,KAAe;AAAA,MACzC,OAAO,UAAU,OAAO,KAAe;AAAA,IAC3C;AAAA,EACF;AAAA,EAEA,MAAM,4BAA6D;AACjE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,gBAAgB,IAAI,IAAI;AAAA,IAC3C,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEQ,UAAU,KAA+B;AAC/C,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,aAAa,IAAI;AAAA,MACjB,eAAgB,IAAI,kBAAuF;AAAA,MAC3G,gBAAiB,IAAI,mBAA8B;AAAA,MACnD,gBAAiB,IAAI,mBAA8B;AAAA,MACnD,qBAAqB,IAAI,uBAAuB,KAAK,MAAM,IAAI,oBAA8B,IAAI;AAAA,MACjG,yBAAyB,IAAI,2BAA2B,KAAK,MAAM,IAAI,wBAAkC,IAAI;AAAA,MAC7G,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AChKO,IAAM,2BAAN,cAAuC,UAAU;AAAA,EA9BxD,OA8BwD;AAAA;AAAA;AAAA,EACtD,YAAY,KAAU;AACpB,UAAM,KAAK,uBAAuB;AAAA,EACpC;AAAA,EAEA,MAAM,OAAO,MAAsD;AACjE,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,uBAAuB;AAAA,MAC5B,KAAK,yBAAyB;AAAA,MAC9B,KAAK,mBAAmB;AAAA,MACxB,KAAK,qBAAqB,KAAK,UAAU,KAAK,kBAAkB,IAAI;AAAA,MACpE,KAAK,sBAAsB;AAAA,OAC3B,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,yCAAyC,gBAAgB;AAAA,IAClF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAAgE;AACxF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,+DAA+D,EACvE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,cAAc,SAAqD;AACvE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,qFAAqF,EAC7F,KAAK,OAAO,EACZ,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,8BAA+D;AACnE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,qBAAqB,IAAI,IAAI;AAAA,IAChD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,iCAAkE;AACtE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,gBAAgB,IAAI,IAAI;AAAA,IAC3C,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oCAAqE;AACzE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,mBAAmB,IAAI,IAAI;AAAA,IAC9C,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,+BAAgE;AACpE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,6FAA6F,EACrG,IAAI;AAEP,UAAM,cAA8D,CAAC;AAErE,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,SAAS,KAAK,MAAM,IAAI,mBAA6B;AAE3D,eAAO,QAAQ,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,KAAK,MAAM;AACjD,cAAI,CAAC,YAAY,KAAK,GAAG;AACvB,wBAAY,KAAK,IAAI,EAAE,KAAK,GAAG,OAAO,EAAE;AAAA,UAC1C;AACA,sBAAY,KAAK,EAAE,OAAO;AAC1B,sBAAY,KAAK,EAAE,SAAS;AAAA,QAC9B,CAAC;AAAA,MACH,SAAS,OAAO;AACd,gBAAQ,KAAK,6CAA6C,KAAK;AAAA,MACjE;AAAA,IACF,CAAC;AAED,UAAM,WAAmC,CAAC;AAC1C,WAAO,QAAQ,WAAW,EAAE,QAAQ,CAAC,CAAC,OAAO,EAAE,KAAK,MAAM,CAAC,MAAM;AAC/D,eAAS,KAAK,IAAI,KAAK,MAAO,MAAM,QAAS,GAAG,IAAI;AAAA,IACtD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,sBAIF;AACF,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWR,EACA,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,CAAC,SAAc;AAAA,MACxC,cAAc,IAAI;AAAA,MAClB,iBAAiB,IAAI;AAAA,MACrB,OAAO,IAAI;AAAA,IACb,EAAE;AAAA,EACJ;AAAA,EAEQ,UAAU,KAAmC;AACnD,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,aAAa,IAAI;AAAA,MACjB,qBAAqB,IAAI,yBAA+H;AAAA,MACxJ,uBAAuB,IAAI,2BAAiI;AAAA,MAC5J,iBAAiB,IAAI,oBAA0E;AAAA,MAC/F,oBAAoB,IAAI,sBAAsB,KAAK,MAAM,IAAI,mBAA6B,IAAI;AAAA,MAC9F,oBAAoB,IAAI,uBAAwF;AAAA,MAChH,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;ACzKO,IAAM,yBAAN,cAAqC,UAAU;AAAA,EA/CtD,OA+CsD;AAAA;AAAA;AAAA,EACpD,YAAY,KAAU;AACpB,UAAM,KAAK,qBAAqB;AAAA,EAClC;AAAA,EAEA,MAAM,OAAO,MAAoD;AAC/D,UAAM,KAAK,KAAK,WAAW;AAE3B,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMR,EACA;AAAA,MACC;AAAA,MACA,KAAK;AAAA,MACL,KAAK,UAAU,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA;AAAA,MACzC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,UAAU,KAAK,eAAe;AAAA,OACnC,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzB,EACC,IAAI;AAEP,QAAI,CAAC,OAAO,SAAS;AACnB,YAAM,KAAK,YAAY,uCAAuC,gBAAgB;AAAA,IAChF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,oBAAoB,eAA8D;AACtF,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,6DAA6D,EACrE,KAAK,aAAa,EAClB,MAAM;AAET,QAAI,CAAC,QAAQ;AACX,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,UAAU,MAAM;AAAA,EAC9B;AAAA,EAEA,MAAM,qBAAqB,gBAA0D;AACnF,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ,uFAAuF,EAC/F,KAAK,cAAc,EACnB,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,0BAA2D;AAC/D,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,gBAAgB,IAAI,IAAI;AAAA,IAC3C,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,+BAAgE;AACpE,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,OAKR,EACA,IAAI;AAEP,UAAM,eAAuC,CAAC;AAC9C,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,mBAAa,IAAI,cAAc,IAAI,IAAI;AAAA,IACzC,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,qBAAqB,WAAiB,SAAiD;AAC3F,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA,OAIR,EACA;AAAA,MACC,UAAU,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,MACpC,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,IACpC,EACC,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,YAAU,KAAK,UAAU,MAAM,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAM,uBAKH;AACD,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA,OAER,EACA,IAAI;AAEP,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AAErB,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,QAAQ,KAAK,MAAM,IAAI,gBAA0B;AACvD,YAAI,MAAM,eAAe;AACvB,cAAI,MAAM,cAAc,SAAS,EAAE,EAAG;AACtC,cAAI,MAAM,cAAc,SAAS,EAAE,EAAG;AACtC,cAAI,MAAM,cAAc,SAAS,EAAE,EAAG;AAAA,QACxC;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,KAAK,0CAA0C,KAAK;AAAA,MAC9D;AAAA,IACF,CAAC;AAED,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,oBAAoB,iBAAiB,iBAAiB;AAAA,IACxD;AAAA,EACF;AAAA,EAEA,MAAM,qBAAsD;AAC1D,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA,OAER,EACA,IAAI;AAEP,UAAM,mBAA2C;AAAA,MAC/C,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAEA,YAAQ,QAAQ,QAAQ,CAAC,QAAa;AACpC,UAAI;AACF,cAAM,QAAQ,KAAK,MAAM,IAAI,gBAA0B;AACvD,YAAI,MAAM,mBAAmB;AAC3B,gBAAM,kBAAkB,QAAQ,CAAC,WAAW;AAC1C,gBAAI,OAAO,UAAU,eAAe,KAAK,kBAAkB,MAAM,GAAG;AAClE,+BAAiB,MAAM,KAAK,iBAAiB,MAAM,KAAK,KAAK;AAAA,YAC/D;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,KAAK,0CAA0C,KAAK;AAAA,MAC9D;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,uBAGF;AACF,UAAM,UAAU,MAAM,KAAK,GACxB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOR,EACA,IAAI;AAEP,WAAO,QAAQ,QAAQ,IAAI,CAAC,SAAc;AAAA,MACxC,OAAO,IAAI;AAAA,MACX,OAAO,IAAI;AAAA,IACb,EAAE;AAAA,EACJ;AAAA,EAEQ,UAAU,KAAiC;AACjD,WAAO;AAAA,MACL,IAAI,IAAI;AAAA,MACR,eAAe,IAAI;AAAA,MACnB,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,MAC5C,UAAU,IAAI;AAAA,MACd,gBAAgB,IAAI;AAAA,MACpB,eAAe,IAAI;AAAA,MACnB,gBAAgB,IAAI;AAAA,MACpB,mBAAmB,IAAI;AAAA,MACvB,gBAAgB,IAAI;AAAA,MACpB,iBAAiB,KAAK,MAAM,IAAI,gBAA0B;AAAA,MAC1D,WAAW,IAAI,KAAK,IAAI,UAAoB;AAAA,IAC9C;AAAA,EACF;AACF;;;AChPO,IAAM,kBAAN,MAAsB;AAAA,EA0B3B,YAAoB,KAAU;AAAV;AAElB,SAAK,kBAAkB,IAAI,gBAAgB,GAAG;AAG9C,SAAK,YAAY,IAAI,cAAc,GAAG;AACtC,SAAK,eAAe,IAAI,iBAAiB,GAAG;AAC5C,SAAK,eAAe,IAAI,iBAAiB,GAAG;AAC5C,SAAK,eAAe,IAAI,kBAAkB,GAAG;AAC7C,SAAK,kBAAkB,IAAI,oBAAoB,GAAG;AAClD,SAAK,qBAAqB,IAAI,uBAAuB,GAAG;AACxD,SAAK,oBAAoB,IAAI,sBAAsB,GAAG;AACtD,SAAK,gBAAgB,IAAI,kBAAkB,GAAG;AAC9C,SAAK,iBAAiB,IAAI,mBAAmB,GAAG;AAChD,SAAK,mBAAmB,IAAI,qBAAqB,GAAG;AACpD,SAAK,uBAAuB,IAAI,yBAAyB,GAAG;AAC5D,SAAK,qBAAqB,IAAI,uBAAuB,GAAG;AAAA,EAC1D;AAAA,EAnEF,OAwB6B;AAAA;AAAA;AAAA;AAAA,EAEnB;AAAA;AAAA,EAGR,IAAW,KAAiB;AAC1B,QAAI,CAAC,KAAK,IAAI,IAAI;AAChB,YAAM,IAAI,MAAM,mCAAmC;AAAA,IACrD;AACA,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA;AAAA,EAGO;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBP,MAAM,aAA4B;AAChC,QAAI;AAEF,YAAM,KAAK,gBAAgB,cAAc,CAAC,CAAC;AAC3C,cAAQ,IAAI,mCAAmC;AAAA,IACjD,SAAS,OAAO;AACd,cAAQ,MAAM,mCAAmC,KAAK;AACtD,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,cAOH;AACD,QAAI;AACF,YAAM,iBAAiB,MAAM,KAAK,GAAG,QAAQ,UAAU,EAAE,MAAM;AAC/D,YAAM,oBAAoB,mBAAmB;AAE7C,YAAM,oBAAoB;AAE1B,YAAM,eAAe,MAAM,KAAK,GAAG,QAAQ;AAAA;AAAA;AAAA;AAAA,OAI1C,EAAE,IAAI;AACP,YAAM,UAAU,aAAa,UAAU,aAAa,UAAU,CAAC,GAAG,IAAI,CAAC,QAAa,IAAI,IAAI;AAE5F,YAAM,iBAAiB;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,gBAAgB,eAAe,MAAM,WAAS,OAAO,SAAS,KAAK,CAAC;AAE1E,YAAM,YAAY,qBAAqB,qBAAqB;AAE5D,aAAO;AAAA,QACL,QAAQ,YAAY,YAAY;AAAA,QAChC,SAAS;AAAA,UACP,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AACpD,aAAO;AAAA,QACL,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,gBAWH;AACD,QAAI;AACF,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI,MAAM,QAAQ,IAAI;AAAA,QACpB,KAAK,aAAa,MAAM;AAAA,QACxB,KAAK,aAAa,MAAM;AAAA,QACxB,KAAK,aAAa,MAAM;AAAA,QACxB,KAAK,gBAAgB,MAAM;AAAA,QAC3B,KAAK,mBAAmB,MAAM;AAAA,QAC9B,KAAK,kBAAkB,MAAM;AAAA,QAC7B,KAAK,cAAc,MAAM;AAAA,QACzB,KAAK,eAAe,MAAM;AAAA,QAC1B,KAAK,iBAAiB,MAAM;AAAA,QAC5B,KAAK,qBAAqB,MAAM;AAAA,QAChC,KAAK,mBAAmB,MAAM;AAAA,QAC9B,KAAK,oBAAoB,EAAE;AAAA;AAAA,QAC3B,KAAK,uBAAuB,EAAE;AAAA;AAAA,QAC9B,KAAK,uBAAuB,CAAC;AAAA;AAAA,MAC/B,CAAC;AAED,aAAO;AAAA,QACL,mBAAmB;AAAA,QACnB,mBAAmB;AAAA,QACnB,eAAe;AAAA,QACf,sBAAsB;AAAA,QACtB,qBAAqB;AAAA,UACnB,YAAY;AAAA,UACZ,WAAW;AAAA,UACX,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,cAAc;AAAA,UACd,YAAY;AAAA,QACd;AAAA,QACA,gBAAgB;AAAA,UACd,cAAc;AAAA,UACd,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,QAClB;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,sCAAsC,KAAK;AACzD,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,mBAAmB,gBAAwB,IAI9C;AACD,QAAI;AACF,YAAM,aAAa,oBAAI,KAAK;AAC5B,iBAAW,QAAQ,WAAW,QAAQ,IAAI,aAAa;AACvD,YAAM,YAAY,WAAW,YAAY;AAEzC,YAAM,kBAAkB,MAAM,KAAK,GAChC,QAAQ,gDAAgD,EACxD,KAAK,SAAS,EACd,IAAI;AAEP,YAAM,gBAAgB,MAAM,KAAK,GAC9B,QAAQ,kDAAkD,EAC1D,KAAK,SAAS,EACd,IAAI;AAEP,YAAM,iBAAiB,oBAAI,KAAK;AAChC,qBAAe,QAAQ,eAAe,QAAQ,IAAI,EAAE;AACpD,YAAM,kBAAkB,MAAM,KAAK,GAChC,QAAQ,gDAAgD,EACxD,KAAK,eAAe,YAAY,CAAC,EACjC,IAAI;AAEP,aAAO;AAAA,QACL,iBAAkB,gBAAwB,WAAW;AAAA,QACrD,eAAgB,cAAsB,WAAW;AAAA,QACjD,iBAAkB,gBAAwB,WAAW;AAAA,MACvD;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,mCAAmC,KAAK;AACtD,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,eAIH;AACD,QAAI;AACF,YAAM,WAAW,UAAU,KAAK,IAAI,CAAC;AACrC,YAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AAIzC,cAAQ,IAAI,oBAAoB,QAAQ,OAAO,SAAS,EAAE;AAE1D,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,MAAM;AAAA;AAAA,MACR;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,4BAA4B,KAAK;AAC/C,YAAM,IAAI;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGA,MAAc,oBAAoB,OAAgC;AAChE,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,SAAS,WAAW,SAAS,IAAI,KAAK;AACjD,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,kEAAkE,EAC1E,KAAK,WAAW,YAAY,CAAC,EAC7B,MAAM;AACT,WAAQ,SAAS,OAAO,KAAgB;AAAA,EAC1C;AAAA,EAEA,MAAc,uBAAuB,OAAgC;AACnE,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,SAAS,WAAW,SAAS,IAAI,KAAK;AACjD,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,kEAAkE,EAC1E,KAAK,WAAW,YAAY,CAAC,EAC7B,MAAM;AACT,WAAQ,SAAS,OAAO,KAAgB;AAAA,EAC1C;AAAA,EAEA,MAAc,uBAAuB,MAA+B;AAClE,UAAM,aAAa,oBAAI,KAAK;AAC5B,eAAW,QAAQ,WAAW,QAAQ,IAAI,IAAI;AAC9C,UAAM,SAAS,MAAM,KAAK,GACvB,QAAQ,kEAAkE,EAC1E,KAAK,WAAW,YAAY,CAAC,EAC7B,MAAM;AACT,WAAQ,SAAS,OAAO,KAAgB;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASF;;;AClTA,IAAM,MAAM,IAAIC,MAAiB;AAGjC,IAAI,IAAI,KAAK,cAAc;AAAA,EACzB,eAAe;AAAA,EACf,qBAAqB;AAAA,EACrB,gBAAgB;AAAA,EAChB,2BAA2B;AAAA;AAC7B,CAAC,CAAC;AAGF,IAAI,IAAI,KAAK,KAAK;AAAA,EAChB,QAAQ,wBAAC,WAAW;AAElB,UAAM,iBAAiB;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,QAAI,CAAC,OAAQ,QAAO;AAEpB,UAAM,UAAU,eAAe,KAAK,CAAAC,aAAW;AAC7C,UAAIA,SAAQ,SAAS,GAAG,GAAG;AACzB,cAAM,UAAUA,SAAQ,QAAQ,KAAK,IAAI;AACzC,eAAO,IAAI,OAAO,OAAO,EAAE,KAAK,MAAM;AAAA,MACxC;AACA,aAAOA,aAAY;AAAA,IACrB,CAAC;AACD,WAAO,UAAU,SAAS;AAAA,EAC5B,GAnBQ;AAAA,EAoBR,cAAc,CAAC,OAAO,QAAQ,OAAO,UAAU,WAAW,MAAM;AAAA,EAChE,cAAc;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAAA,EACA,aAAa;AAAA,EACb,QAAQ;AAAA;AACV,CAAC,CAAC;AAGF,IAAI,IAAI,KAAK,OAAO,CAAC;AAGrB,IAAI,IAAI,KAAK,gBAAgB;AAG7B,IAAI,IAAI,KAAK,OAAO,GAAG,SAAS;AAE9B,QAAM,YAAY,EAAE,IAAI,OAAO,cAAc,KAAK,OAAO,WAAW;AAGpE,QAAM,YAAY,IAAI,gBAAgB,EAAE,GAAG;AAG3C,IAAE,IAAI,aAAa,SAAS;AAC5B,IAAE,IAAI,aAAa,SAAS;AAE5B,QAAM,KAAK;AACb,CAAC;AAGD,IAAI,QAAQC,aAAY;AAGxB,IAAI,MAAM,eAAe,YAAY;AAGrC,IAAI,IAAI,cAAc,OAAO,MAAM;AACjC,SAAO,EAAE,KAAK;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,MACJ,OAAO,CAAC,CAAC,EAAE,IAAI;AAAA,MACf,OAAO,CAAC,CAAC,EAAE,IAAI;AAAA,MACf,WAAW,CAAC,CAAC,EAAE,MAAM,QAAQ;AAAA,MAC7B,aAAa,EAAE,IAAI;AAAA,MACnB,SAAS,OAAO,KAAK,EAAE,GAAG;AAAA,IAC5B;AAAA,IACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,EACpC,CAAC;AACH,CAAC;AAGD,IAAI,IAAI,WAAW,OAAO,MAAM;AAC9B,MAAI;AACF,UAAM,YAAY,EAAE,IAAI,WAAW;AACnC,UAAM,cAAc,MAAM,UAAU,YAAY;AAEhD,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,MAAM;AAAA,QACJ,QAAQ,YAAY;AAAA,QACpB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,aAAa,EAAE,IAAI;AAAA,QACnB,SAAS;AAAA,QACT,UAAU;AAAA,UACR,UAAU,YAAY;AAAA,UACtB,OAAO;AAAA;AAAA,UACP,SAAS;AAAA;AAAA,QACX;AAAA,MACF;AAAA,MACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAY,EAAE,IAAI,WAAW,KAAgB;AAAA,IAC/C;AAEA,WAAO,EAAE,KAAK,UAAU,YAAY,WAAW,YAAY,MAAM,GAAG;AAAA,EACtE,SAAS,OAAO;AACd,UAAM,WAAwB;AAAA,MAC5B,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,WAAY,EAAE,IAAI,WAAW,KAAgB;AAAA,IAC/C;AAEA,WAAO,EAAE,KAAK,UAAU,GAAG;AAAA,EAC7B;AACF,CAAC;AAGD,IAAI,MAAM,cAAc,UAAU;AAClC,IAAI,MAAM,aAAa,UAAU;AACjC,IAAI,MAAM,iBAAiB,cAAc;AACzC,IAAI,MAAM,kBAAkB,eAAe;AAC3C,IAAI,MAAM,iBAAiB,cAAc;AACzC,IAAI,MAAM,eAAe,YAAY;AACrC,IAAI,MAAM,gBAAgB,aAAa;AAKvC,IAAI,IAAI,QAAQ,CAAC,MAAM;AACrB,QAAM,WAAwB;AAAA,IAC5B,SAAS;AAAA,IACT,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,aAAa;AAAA,MACL,WAAW;AAAA,QACf,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,SAAS;AAAA;AAAA;AAAA,QAGT,QAAQ;AAAA,MACV;AAAA,MACF,eAAe;AAAA,IACjB;AAAA,IACA,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IAClC,WAAY,EAAE,IAAI,WAAW,KAAgB;AAAA,EAC/C;AAEA,SAAO,EAAE,KAAK,QAAQ;AACxB,CAAC;AAGD,IAAI,SAAS,CAAC,MAAM;AAClB,QAAM,WAAwB;AAAA,IAC5B,SAAS;AAAA,IACT,OAAO;AAAA,IACP,SAAS;AAAA,IACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IAClC,WAAY,EAAE,IAAI,WAAW,KAAgB;AAAA,EAC/C;AAEA,SAAO,EAAE,KAAK,UAAU,GAAG;AAC7B,CAAC;AAGD,IAAI,IAAI,KAAK,CAAC,MAAM;AAClB,QAAM,WAAwB;AAAA,IAC5B,SAAS;AAAA,IACT,OAAO;AAAA,IACP,SAAS,UAAU,EAAE,IAAI,MAAM;AAAA,IAC/B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IAClC,WAAY,EAAE,IAAI,WAAW,KAAgB;AAAA,EAC/C;AAEA,SAAO,EAAE,KAAK,UAAU,GAAG;AAC7B,CAAC;AAED,IAAO,cAAQ;;;AC7Nf,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["options", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "raw", "__accessCheck", "__privateGet", "__privateAdd", "__privateSet", "app", "Node", "Node", "Hono", "setHeaders", "errorHandler", "util", "objectUtil", "errorUtil", "errorMap", "ctx", "result", "issues", "elements", "processed", "result", "r", "ZodFirstPartyTypeKind", "ipv4Regex", "ipv6Regex", "response", "uuidRegex", "Hono", "Hono", "ContentFilterCategory", "Hono", "Hono", "Hono", "Hono", "Hono", "Hono", "hashString", "Hono", "allowed", "errorHandler"]
}
